/*
 * Copyright (c) 2009-2018 ARM Limited. All rights reserved.
 * 
 * SPDX-License-Identifier: Apache-2.0
 * 
 * Licensed under the Apache License, Version 2.0 (the License); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @file     ADuCM350.h
 * @brief    CMSIS HeaderFile
 * @version  1.0
 * @date     08. November 2018
 * @note     Generated by SVDConv V3.3.21 on Thursday, 08.11.2018 10:36:11
 *           from File 'ADuCM350.svd',
 *           last modified on Wednesday, 07.11.2018 23:47:41
 */



/** @addtogroup Analog Devices
  * @{
  */


/** @addtogroup ADuCM350
  * @{
  */


#ifndef ADUCM350_H
#define ADUCM350_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup Configuration_of_CMSIS
  * @{
  */



/* =========================================================================================================================== */
/* ================                                Interrupt Number Definition                                ================ */
/* =========================================================================================================================== */

typedef enum {
/* =======================================  ARM Cortex-M3 Specific Interrupt Numbers  ======================================== */
  Reset_IRQn                = -15,              /*!< -15  Reset Vector, invoked on Power up and warm reset                     */
  NonMaskableInt_IRQn       = -14,              /*!< -14  Non maskable Interrupt, cannot be stopped or preempted               */
  HardFault_IRQn            = -13,              /*!< -13  Hard Fault, all classes of Fault                                     */
  MemoryManagement_IRQn     = -12,              /*!< -12  Memory Management, MPU mismatch, including Access Violation
                                                     and No Match                                                              */
  BusFault_IRQn             = -11,              /*!< -11  Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory
                                                     related Fault                                                             */
  UsageFault_IRQn           = -10,              /*!< -10  Usage Fault, i.e. Undef Instruction, Illegal State Transition        */
  SVCall_IRQn               =  -5,              /*!< -5 System Service Call via SVC instruction                                */
  DebugMonitor_IRQn         =  -4,              /*!< -4 Debug Monitor                                                          */
  PendSV_IRQn               =  -2,              /*!< -2 Pendable request for system service                                    */
  SysTick_IRQn              =  -1,              /*!< -1 System Tick Timer                                                      */
/* ==========================================  ADuCM350 Specific Interrupt Numbers  ========================================== */
  WUT_IRQn                  =   0,              /*!< 0  Wake Up Timer interrupt                                                */
  EINT0_IRQn                =   1,              /*!< 1  External Interrupt 0                                                   */
  EINT1_IRQn                =   2,              /*!< 2  External Interrupt 1                                                   */
  EINT2_IRQn                =   3,              /*!< 3  External Interrupt 2                                                   */
  EINT3_IRQn                =   4,              /*!< 4  External Interrupt 3                                                   */
  EINT4_IRQn                =   5,              /*!< 5  External Interrupt 4                                                   */
  EINT5_IRQn                =   6,              /*!< 6  External Interrupt 5                                                   */
  EINT6_IRQn                =   7,              /*!< 7  External Interrupt 6                                                   */
  EINT7_IRQn                =   8,              /*!< 8  External Interrupt 7                                                   */
  EINT8_IRQn                =   9,              /*!< 9  External Interrupt 8                                                   */
  WDT_IRQn                  =  10,              /*!< 10 WDT Interrupt                                                          */
  TIMER0_IRQn               =  11,              /*!< 11 Timer interrupt                                                        */
  TIMER1_IRQn               =  12,              /*!< 12 Timer 1 Interrupt                                                      */
  FLASH0_IRQn               =  13,              /*!< 13 Flash Controller Interrupt                                             */
  UART_IRQn                 =  14,              /*!< 14 interrupt                                                              */
  SPI0_IRQn                 =  15,              /*!< 15 SPI 0 interrupt                                                        */
  SPIH_IRQn                 =  16,              /*!< 16 interrupt                                                              */
  I2CS_IRQn                 =  17,              /*!< 17 I2C 0 slave interrupt                                                  */
  I2CM_IRQn                 =  18,              /*!< 18 I2C 0 master interrupt                                                 */
  DMA_ERR_IRQn              =  19,              /*!< 19 DMA interrupt                                                          */
  DMA_SPIH_TX_IRQn          =  20,              /*!< 20 DMA Ch 0 interrupt                                                     */
  DMA_SPIH_RX_IRQn          =  21,              /*!< 21 DMA Ch 1 interrupt                                                     */
  DMA_SPI0_TX_IRQn          =  22,              /*!< 22 DMA Ch 2 interrupt                                                     */
  DMA_SPI0_RX_IRQn          =  23,              /*!< 23 DMA Ch 3 interrupt                                                     */
  DMA_SPI1_TX_IRQn          =  24,              /*!< 24 DMA Ch 4 interrupt                                                     */
  DMA_SPI1_RX_IRQn          =  25,              /*!< 25 DMA Ch 5 interrupt                                                     */
  DMA_UART_TX_IRQn          =  26,              /*!< 26 DMA Ch 6 interrupt                                                     */
  DMA_UART_RX_IRQn          =  27,              /*!< 27 DMA Ch 7 interrupt                                                     */
  DMA_I2CS_TX_IRQn          =  28,              /*!< 28 DMA Ch 8 interrupt                                                     */
  DMA_I2CS_RX_IRQn          =  29,              /*!< 29 DMA Ch 9 interrupt                                                     */
  DMA_I2CM_IRQn             =  30,              /*!< 30 DMA Ch 10 interrupt                                                    */
  DMA_AFE_TX_IRQn           =  31,              /*!< 31 DMA Ch 11 interrupt                                                    */
  DMA_AFE_RX_IRQn           =  32,              /*!< 32 DMA Ch 12 interrupt                                                    */
  DMA_CRC_IRQn              =  33,              /*!< 33 DMA Ch 13 interrupt                                                    */
  DMA_PDI_IRQn              =  34,              /*!< 34 DMA Ch 14 interrupt                                                    */
  DMA_I2S_IRQn              =  35,              /*!< 35 DMA Ch 15 interrupt                                                    */
  USB_WAKEUP_IRQn           =  36,              /*!< 36 USB Wakeup interrupt                                                   */
  USB_CNTL_IRQn             =  37,              /*!< 37 USB Controller interrupt                                               */
  USB_DMA_IRQn              =  38,              /*!< 38 USB DMA interrupt                                                      */
  I2S_IRQn                  =  39,              /*!< 39 I2S interrupt                                                          */
  TIMER2_IRQn               =  40,              /*!< 40 TIMER 2 interrupt                                                      */
  SPI1_IRQn                 =  42,              /*!< 42 interrupt                                                              */
  RTC_IRQn                  =  43,              /*!< 43 Real Time Clock interrupt                                              */
  BEEP_IRQn                 =  45,              /*!< 45 Beep interrupt                                                         */
  LCD_IRQn                  =  46,              /*!< 46 LCD Controller interrupt                                               */
  GPIOA_IRQn                =  47,              /*!< 47 interrupt                                                              */
  GPIOB_IRQn                =  48,              /*!< 48 interrupt                                                              */
  AFE_CAPTURE_IRQn          =  50,              /*!< 50 Analog Front End Capture interrupt                                     */
  AFE_GENERATE_IRQn         =  51,              /*!< 51 Analog Front End Generation interrupt                                  */
  AFE_CMD_FIFO_IRQn         =  52,              /*!< 52 Analog Front End FIFO CMD interrupt                                    */
  AFE_DATA_FIFO_IRQn        =  53,              /*!< 53 Analog Front End FIFO DATA interrupt                                   */
  GP_FLASH_IRQn             =  55,              /*!< 55 Flash EEPROM interrupt                                                 */
  RAND_IRQn                 =  58,              /*!< 58 Random Bit Generator interrupt                                         */
  PDI_IRQn                  =  59               /*!< 59 Paraller Display Interface interrupt                                   */
} IRQn_Type;



/* =========================================================================================================================== */
/* ================                           Processor and Core Peripheral Section                           ================ */
/* =========================================================================================================================== */

/* ===========================  Configuration of the ARM Cortex-M3 Processor and Core Peripherals  =========================== */
#define __CM3_REV                 0x0201U       /*!< CM3 Core Revision                                                         */
#define __NVIC_PRIO_BITS               3        /*!< Number of Bits used for Priority Levels                                   */
#define __Vendor_SysTickConfig         0        /*!< Set to 1 if different SysTick Config is used                              */
#define __MPU_PRESENT                  0        /*!< MPU present or not                                                        */
#define __FPU_PRESENT                  0        /*!< FPU present or not                                                        */


/** @} */ /* End of group Configuration_of_CMSIS */

#include "core_cm3.h"                           /*!< ARM Cortex-M3 processor and core peripherals                              */
#include "system_ADuCM350.h"                    /*!< ADuCM350 System                                                           */

#ifndef __IM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __IM   __I
#endif
#ifndef __OM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __OM   __O
#endif
#ifndef __IOM                                   /*!< Fallback for older CMSIS versions                                         */
  #define __IOM  __IO
#endif


/* =========================================================================================================================== */
/* ================                            Device Specific Peripheral Section                             ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                         ADI_GPT0                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief General Purpose Timer 0 (ADI_GPT0)
  */

typedef struct {                                /*!< (@ 0x40000000) ADI_GPT0 Structure                                         */
  __IOM uint16_t  LOAD;                         /*!< (@ 0x00000000) 16-bit load value                                          */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  CURCNT;                       /*!< (@ 0x00000004) 16-bit timer value. read only.                             */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  CTL;                          /*!< (@ 0x00000008) Control Register                                           */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  CLRINT;                       /*!< (@ 0x0000000C) Clear interrupt register                                   */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  CAPTURE;                      /*!< (@ 0x00000010) Capture Register                                           */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  ALOAD;                        /*!< (@ 0x00000014) 16-bit load value, asynchronous                            */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  ACURCNT;                      /*!< (@ 0x00000018) 16-bit timer value, asynchronous                           */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  STATUS;                       /*!< (@ 0x0000001C) Status                                                     */
  __IM  uint16_t  RESERVED7;
  __IOM uint16_t  PWMCTL;                       /*!< (@ 0x00000020) PWM Control Register                                       */
  __IM  uint16_t  RESERVED8;
  __IOM uint16_t  PWMMATCH;                     /*!< (@ 0x00000024) PWM Match Value                                            */
} ADI_GPT0_Type;                                /*!< Size = 38 (0x26)                                                          */



/* =========================================================================================================================== */
/* ================                                         ADI_GPT1                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief General Purpose Timer1 (ADI_GPT1)
  */

typedef struct {                                /*!< (@ 0x40000400) ADI_GPT1 Structure                                         */
  __IOM uint16_t  LOAD;                         /*!< (@ 0x00000000) 16-bit load value                                          */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  CURCNT;                       /*!< (@ 0x00000004) 16-bit timer value. read only.                             */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  CTL;                          /*!< (@ 0x00000008) Control Register                                           */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  CLRINT;                       /*!< (@ 0x0000000C) Clear interrupt register                                   */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  CAPTURE;                      /*!< (@ 0x00000010) Capture Register                                           */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  ALOAD;                        /*!< (@ 0x00000014) 16-bit load value, asynchronous                            */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  ACURCNT;                      /*!< (@ 0x00000018) 16-bit timer value, asynchronous                           */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  STATUS;                       /*!< (@ 0x0000001C) Status                                                     */
  __IM  uint16_t  RESERVED7;
  __IOM uint16_t  PWMCTL;                       /*!< (@ 0x00000020) PWM Control Register                                       */
  __IM  uint16_t  RESERVED8;
  __IOM uint16_t  PWMMATCH;                     /*!< (@ 0x00000024) PWM Match Value                                            */
} ADI_GPT1_Type;                                /*!< Size = 38 (0x26)                                                          */



/* =========================================================================================================================== */
/* ================                                         ADI_GPT2                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief General Purpose Timer2 (ADI_GPT2)
  */

typedef struct {                                /*!< (@ 0x40000800) ADI_GPT2 Structure                                         */
  __IOM uint16_t  LOAD;                         /*!< (@ 0x00000000) 16-bit load value                                          */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  CURCNT;                       /*!< (@ 0x00000004) 16-bit timer value. read only.                             */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  CTL;                          /*!< (@ 0x00000008) Control Register                                           */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  CLRINT;                       /*!< (@ 0x0000000C) Clear interrupt register                                   */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  CAPTURE;                      /*!< (@ 0x00000010) Capture Register                                           */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  ALOAD;                        /*!< (@ 0x00000014) 16-bit load value, asynchronous                            */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  ACURCNT;                      /*!< (@ 0x00000018) 16-bit timer value, asynchronous                           */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  STATUS;                       /*!< (@ 0x0000001C) Status                                                     */
  __IM  uint16_t  RESERVED7;
  __IOM uint16_t  PWMCTL;                       /*!< (@ 0x00000020) PWM Control Register                                       */
  __IM  uint16_t  RESERVED8;
  __IOM uint16_t  PWMMATCH;                     /*!< (@ 0x00000024) PWM Match Value                                            */
} ADI_GPT2_Type;                                /*!< Size = 38 (0x26)                                                          */



/* =========================================================================================================================== */
/* ================                                          ADI_ID                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Power Control and ID (ADI_ID)
  */

typedef struct {                                /*!< (@ 0x40002020) ADI_ID Structure                                           */
  __IOM uint16_t  ADIID;                        /*!< (@ 0x00000000) Analog Devices ID Register                                 */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  CHIPID;                       /*!< (@ 0x00000004) Chip ID Register                                           */
} ADI_ID_Type;                                  /*!< Size = 6 (0x6)                                                            */



/* =========================================================================================================================== */
/* ================                                          ADI_PWR                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief Power Management Unit (ADI_PWR)
  */

typedef struct {                                /*!< (@ 0x40002400) ADI_PWR Structure                                          */
  __IOM uint16_t  PWRMOD;                       /*!< (@ 0x00000000) PWR Power modes                                            */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  PWRKEY;                       /*!< (@ 0x00000004) PWR Key protection for PWRMOD                              */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  PSMCON;                       /*!< (@ 0x00000008) PWR PSM Configuration                                      */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  OSCKEY;                       /*!< (@ 0x0000000C) PWR Key protection for OSCCTRL                             */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  OSCCTRL;                      /*!< (@ 0x00000010) PWR Oscillator control                                     */
} ADI_PWR_Type;                                 /*!< Size = 18 (0x12)                                                          */



/* =========================================================================================================================== */
/* ================                                          ADI_EI                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief External Interrupts (ADI_EI)
  */

typedef struct {                                /*!< (@ 0x40002420) ADI_EI Structure                                           */
  __IOM uint16_t  EI0CFG;                       /*!< (@ 0x00000000) PWR External Interrupt configuration 0                     */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  EI1CFG;                       /*!< (@ 0x00000004) PWR External Interrupt configuration 1                     */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  EI2CFG;                       /*!< (@ 0x00000008) PWR External Interrupt configuration 2                     */
  __IM  uint16_t  RESERVED2[3];
  __IOM uint16_t  EICLR;                        /*!< (@ 0x00000010) PWR External Interrupt clear                               */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  NMICLR;                       /*!< (@ 0x00000014) PWR Non-maskable interrupt clear                           */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  USBWKSTAT;                    /*!< (@ 0x00000018) PWR USB Wakeup Status                                      */
  __IM  uint16_t  RESERVED5[3];
  __IOM uint16_t  RSTSTA;                       /*!< (@ 0x00000020) PWR Reset status                                           */
} ADI_EI_Type;                                  /*!< Size = 34 (0x22)                                                          */



/* =========================================================================================================================== */
/* ================                                        ADI_PWRVCC                                         ================ */
/* =========================================================================================================================== */


/**
  * @brief Power (ADI_PWRVCC)
  */

typedef struct {                                /*!< (@ 0x40002480) ADI_PWRVCC Structure                                       */
  __IM  uint16_t  RESERVED[4];
  __IOM uint16_t  VCCMCON;                      /*!< (@ 0x00000008) PWR VCCM Control and Status                                */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  VBACKCON;                     /*!< (@ 0x0000000C) PWR VBACK control and status                               */
} ADI_PWRVCC_Type;                              /*!< Size = 14 (0xe)                                                           */



/* =========================================================================================================================== */
/* ================                                          ADI_WUT                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief Wake-up timer (ADI_WUT)
  */

typedef struct {                                /*!< (@ 0x40002500) ADI_WUT Structure                                          */
  __IOM uint16_t  T2VAL0;                       /*!< (@ 0x00000000) WUT Current count value - LS halfword.                     */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  T2VAL1;                       /*!< (@ 0x00000004) WUT Current count value - MS halfword                      */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  T2CON;                        /*!< (@ 0x00000008) WUT Control                                                */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  T2INC;                        /*!< (@ 0x0000000C) WUT 12-bit interval for wakeup field A                     */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  T2WUFB0;                      /*!< (@ 0x00000010) WUT Wakeup field B - LS halfword                           */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  T2WUFB1;                      /*!< (@ 0x00000014) WUT Wakeup field B - MS halfword                           */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  T2WUFC0;                      /*!< (@ 0x00000018) WUT Wakeup field C - LS halfword                           */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  T2WUFC1;                      /*!< (@ 0x0000001C) WUT Wakeup field C - MS halfword                           */
  __IM  uint16_t  RESERVED7;
  __IOM uint16_t  T2WUFD0;                      /*!< (@ 0x00000020) WUT Wakeup field D - LS halfword                           */
  __IM  uint16_t  RESERVED8;
  __IOM uint16_t  T2WUFD1;                      /*!< (@ 0x00000024) WUT Wakeup field D - MS halfword                           */
  __IM  uint16_t  RESERVED9;
  __IOM uint16_t  T2IEN;                        /*!< (@ 0x00000028) WUT Interrupt enable                                       */
  __IM  uint16_t  RESERVED10;
  __IOM uint16_t  T2STA;                        /*!< (@ 0x0000002C) WUT Status                                                 */
  __IM  uint16_t  RESERVED11;
  __IOM uint16_t  T2CLRI;                       /*!< (@ 0x00000030) WUT Clear interrupt register                               */
  __IM  uint16_t  RESERVED12;
  __IOM uint16_t  WUTVAL_LOW;                   /*!< (@ 0x00000034) WUT Unsynchronized lower 16 bits of WU Timer
                                                                    counter value.                                             */
  __IM  uint16_t  RESERVED13;
  __IOM uint16_t  WUTVAL_HIGH;                  /*!< (@ 0x00000038) WUT Unsynchronized upper 16 bits of WU Timer
                                                                    counter value.                                             */
  __IM  uint16_t  RESERVED14;
  __IOM uint16_t  T2WUFA0;                      /*!< (@ 0x0000003C) WUT Wakeup field A - LS halfword                           */
  __IM  uint16_t  RESERVED15;
  __IOM uint16_t  T2WUFA1;                      /*!< (@ 0x00000040) WUT Wakeup field A - MS halfword                           */
} ADI_WUT_Type;                                 /*!< Size = 66 (0x42)                                                          */



/* =========================================================================================================================== */
/* ================                                          ADI_WDT                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief WatchDog Timer (ADI_WDT)
  */

typedef struct {                                /*!< (@ 0x40002580) ADI_WDT Structure                                          */
  __IOM uint16_t  T3LD;                         /*!< (@ 0x00000000) WDT Load value                                             */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  T3VAL;                        /*!< (@ 0x00000004) WDT Current count value                                    */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  T3CON;                        /*!< (@ 0x00000008) WDT Control                                                */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  T3CLRI;                       /*!< (@ 0x0000000C) WDT Clear interrupt register                               */
  __IM  uint16_t  RESERVED3[5];
  __IOM uint16_t  T3STA;                        /*!< (@ 0x00000018) WDT Status                                                 */
} ADI_WDT_Type;                                 /*!< Size = 26 (0x1a)                                                          */



/* =========================================================================================================================== */
/* ================                                          ADI_RTC                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief RealTimeClock (ADI_RTC)
  */

typedef struct {                                /*!< (@ 0x40002600) ADI_RTC Structure                                          */
  __IOM uint16_t  RTCCR;                        /*!< (@ 0x00000000) RTC RTC Control                                            */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  RTCSR0;                       /*!< (@ 0x00000004) RTC RTC Status 0                                           */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  RTCSR1;                       /*!< (@ 0x00000008) RTC RTC Status 1                                           */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  RTCCNT0;                      /*!< (@ 0x0000000C) RTC RTC Count 0                                            */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  RTCCNT1;                      /*!< (@ 0x00000010) RTC RTC Count 1                                            */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  RTCALM0;                      /*!< (@ 0x00000014) RTC RTC Alarm 0                                            */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  RTCALM1;                      /*!< (@ 0x00000018) RTC RTC Alarm 1                                            */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  RTCTRM;                       /*!< (@ 0x0000001C) RTC RTC Trim                                               */
  __IM  uint16_t  RESERVED7;
  __IOM uint16_t  RTCGWY;                       /*!< (@ 0x00000020) RTC RTC Gateway                                            */
} ADI_RTC_Type;                                 /*!< Size = 34 (0x22)                                                          */



/* =========================================================================================================================== */
/* ================                                          ADI_I2C                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief I2C Master/Slave (ADI_I2C)
  */

typedef struct {                                /*!< (@ 0x40003000) ADI_I2C Structure                                          */
  __IOM uint16_t  I2CMCON;                      /*!< (@ 0x00000000) I2C Master control                                         */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  I2CMSTA;                      /*!< (@ 0x00000004) I2C Master status                                          */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  I2CMRX;                       /*!< (@ 0x00000008) I2C Master receive data                                    */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  I2CMTX;                       /*!< (@ 0x0000000C) I2C Master transmit data                                   */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  I2CMRXCNT;                    /*!< (@ 0x00000010) I2C Master receive data count                              */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  I2CMCRXCNT;                   /*!< (@ 0x00000014) I2C Master current receive data count                      */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  I2CADR1;                      /*!< (@ 0x00000018) I2C 1st master address byte                                */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  I2CADR2;                      /*!< (@ 0x0000001C) I2C 2nd master address byte                                */
  __IM  uint16_t  RESERVED7;
  __IOM uint16_t  I2CBYT;                       /*!< (@ 0x00000020) I2C Start byte                                             */
  __IM  uint16_t  RESERVED8;
  __IOM uint16_t  I2CDIV;                       /*!< (@ 0x00000024) I2C Serial clock period divisor                            */
  __IM  uint16_t  RESERVED9;
  __IOM uint16_t  I2CSCON;                      /*!< (@ 0x00000028) I2C Slave control                                          */
  __IM  uint16_t  RESERVED10;
  __IOM uint16_t  I2CSSTA;                      /*!< (@ 0x0000002C) I2C Slave I2C Status/Error/IRQ                             */
  __IM  uint16_t  RESERVED11;
  __IOM uint16_t  I2CSRX;                       /*!< (@ 0x00000030) I2C Slave receive                                          */
  __IM  uint16_t  RESERVED12;
  __IOM uint16_t  I2CSTX;                       /*!< (@ 0x00000034) I2C Slave transmit                                         */
  __IM  uint16_t  RESERVED13;
  __IOM uint16_t  I2CALT;                       /*!< (@ 0x00000038) I2C Hardware general call ID                               */
  __IM  uint16_t  RESERVED14;
  __IOM uint16_t  I2CID0;                       /*!< (@ 0x0000003C) I2C 1st slave address device ID                            */
  __IM  uint16_t  RESERVED15;
  __IOM uint16_t  I2CID1;                       /*!< (@ 0x00000040) I2C 2nd slave address device ID                            */
  __IM  uint16_t  RESERVED16;
  __IOM uint16_t  I2CID2;                       /*!< (@ 0x00000044) I2C 3rd slave address device ID                            */
  __IM  uint16_t  RESERVED17;
  __IOM uint16_t  I2CID3;                       /*!< (@ 0x00000048) I2C 4th slave address device ID                            */
  __IM  uint16_t  RESERVED18;
  __IOM uint16_t  I2CFSTA;                      /*!< (@ 0x0000004C) I2C Master and slave FIFO status                           */
  __IM  uint16_t  RESERVED19;
  __IOM uint16_t  I2CSHCON;                     /*!< (@ 0x00000050) I2C Shared control                                         */
  __IM  uint16_t  RESERVED20;
  __IOM uint16_t  I2CTCTL;                      /*!< (@ 0x00000054) I2C Timing Control Register                                */
} ADI_I2C_Type;                                 /*!< Size = 86 (0x56)                                                          */



/* =========================================================================================================================== */
/* ================                                         ADI_SPI0                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief SPI0 Maste/Slave (ADI_SPI0)
  */

typedef struct {                                /*!< (@ 0x40004000) ADI_SPI0 Structure                                         */
  __IOM uint16_t  SPISTA;                       /*!< (@ 0x00000000) SPI0 Status                                                */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  SPIRX;                        /*!< (@ 0x00000004) SPI0 Receive                                               */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  SPITX;                        /*!< (@ 0x00000008) SPI0 Transmit                                              */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  SPIDIV;                       /*!< (@ 0x0000000C) SPI0 Baud rate selection                                   */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  SPICON;                       /*!< (@ 0x00000010) SPI0 SPI configuration                                     */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  SPIDMA;                       /*!< (@ 0x00000014) SPI0 SPI DMA enable                                        */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  SPICNT;                       /*!< (@ 0x00000018) SPI0 Transfer byte count                                   */
} ADI_SPI0_Type;                                /*!< Size = 26 (0x1a)                                                          */



/* =========================================================================================================================== */
/* ================                                         ADI_SPI1                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief SPI1 Master/Slave (ADI_SPI1)
  */

typedef struct {                                /*!< (@ 0x40004400) ADI_SPI1 Structure                                         */
  __IOM uint16_t  SPISTA;                       /*!< (@ 0x00000000) SPI1 Status                                                */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  SPIRX;                        /*!< (@ 0x00000004) SPI1 Receive                                               */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  SPITX;                        /*!< (@ 0x00000008) SPI1 Transmit                                              */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  SPIDIV;                       /*!< (@ 0x0000000C) SPI1 Baud rate selection                                   */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  SPICON;                       /*!< (@ 0x00000010) SPI1 SPI configuration                                     */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  SPIDMA;                       /*!< (@ 0x00000014) SPI1 SPI DMA enable                                        */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  SPICNT;                       /*!< (@ 0x00000018) SPI1 Transfer byte count                                   */
} ADI_SPI1_Type;                                /*!< Size = 26 (0x1a)                                                          */



/* =========================================================================================================================== */
/* ================                                         ADI_UART                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief Uart (ADI_UART)
  */

typedef struct {                                /*!< (@ 0x40005000) ADI_UART Structure                                         */
  __IOM uint16_t  COMRX;                        /*!< (@ 0x00000000) UART Receive Buffer Register                               */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  COMIEN;                       /*!< (@ 0x00000004) UART Interrupt Enable                                      */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  COMIIR;                       /*!< (@ 0x00000008) UART Interrupt ID                                          */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  COMLCR;                       /*!< (@ 0x0000000C) UART Line Control                                          */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  COMMCR;                       /*!< (@ 0x00000010) UART Modem Control                                         */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  COMLSR;                       /*!< (@ 0x00000014) UART Line Status                                           */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  COMMSR;                       /*!< (@ 0x00000018) UART Modem Status                                          */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  COMSCR;                       /*!< (@ 0x0000001C) UART Scratch buffer                                        */
  __IM  uint16_t  RESERVED7[3];
  __IOM uint16_t  COMFBR;                       /*!< (@ 0x00000024) UART Fractional Baud Rate                                  */
  __IM  uint16_t  RESERVED8;
  __IOM uint16_t  COMDIV;                       /*!< (@ 0x00000028) UART Baudrate divider                                      */
} ADI_UART_Type;                                /*!< Size = 42 (0x2a)                                                          */



/* =========================================================================================================================== */
/* ================                                          ADI_I2S                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief I2S Master/Slave (ADI_I2S)
  */

typedef struct {                                /*!< (@ 0x40005800) ADI_I2S Structure                                          */
  __IOM uint16_t  OUT1L;                        /*!< (@ 0x00000000) I2S Channel 1 LSBs                                         */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  OUT1H;                        /*!< (@ 0x00000004) I2S Channel 1 MSBs                                         */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  OUT2L;                        /*!< (@ 0x00000008) I2S Channel 2 LSBs                                         */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  OUT2H;                        /*!< (@ 0x0000000C) I2S Channel 2 MSBs                                         */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  MODE1;                        /*!< (@ 0x00000010) I2S I2S format modes 1                                     */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  MODE2;                        /*!< (@ 0x00000014) I2S I2S format modes 2                                     */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  CFG1;                         /*!< (@ 0x00000018) I2S I2S configuration 1                                    */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  CFG2;                         /*!< (@ 0x0000001C) I2S I2S configuration 2                                    */
  __IM  uint16_t  RESERVED7;
  __IOM uint16_t  STAT;                         /*!< (@ 0x00000020) I2S I2S status                                             */
} ADI_I2S_Type;                                 /*!< Size = 34 (0x22)                                                          */



/* =========================================================================================================================== */
/* ================                                         ADI_BEEP                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief Beeper (ADI_BEEP)
  */

typedef struct {                                /*!< (@ 0x40005C00) ADI_BEEP Structure                                         */
  __IOM uint16_t  BEEP_CFG;                     /*!< (@ 0x00000000) BEEP Beeper configuration                                  */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  STAT;                         /*!< (@ 0x00000004) BEEP Beeper status                                         */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  TONE_A;                       /*!< (@ 0x00000008) BEEP Tone A Data                                           */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  TONE_B;                       /*!< (@ 0x0000000C) BEEP Tone B Data                                           */
} ADI_BEEP_Type;                                /*!< Size = 14 (0xe)                                                           */



/* =========================================================================================================================== */
/* ================                                          ADI_RNG                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief Random Bit Generator (ADI_RNG)
  */

typedef struct {                                /*!< (@ 0x40006000) ADI_RNG Structure                                          */
  __IOM uint16_t  RNGCTL;                       /*!< (@ 0x00000000) RNG Control Register                                       */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  RNGLEN;                       /*!< (@ 0x00000004) RNG Sample Length Register                                 */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  RNGSTAT;                      /*!< (@ 0x00000008) RNG Status Register                                        */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  RNGDATA;                      /*!< (@ 0x0000000C) RNG Data Register                                          */
  __IM  uint16_t  RESERVED3;
  __IM  uint16_t  RNGCNTL;                      /*!< (@ 0x00000010) RNG Oscillator Count Low                                   */
  __IM  uint16_t  RESERVED4;
  __IM  uint16_t  RNGCNTH;                      /*!< (@ 0x00000014) RNG Oscillator Count High                                  */
} ADI_RNG_Type;                                 /*!< Size = 22 (0x16)                                                          */



/* =========================================================================================================================== */
/* ================                                          ADI_LCD                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief LCD Controller (ADI_LCD)
  */

typedef struct {                                /*!< (@ 0x40008000) ADI_LCD Structure                                          */
  __IOM uint16_t  LCDCON;                       /*!< (@ 0x00000000) LCD LCD Configuration Register                             */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  LCDSTAT;                      /*!< (@ 0x00000004) LCD LCD Status Register                                    */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  LCDBLINK;                     /*!< (@ 0x00000008) LCD LCD Blink Control Register                             */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  LCDCONTRAST;                  /*!< (@ 0x0000000C) LCD LCD Contrast Control Register                          */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  LCDDATA0_S0;                  /*!< (@ 0x00000010) LCD Screen 0 LCD Data Register n                           */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  LCDDATA1_S0;                  /*!< (@ 0x00000014) LCD Screen 0 LCD Data Register n                           */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  LCDDATA2_S0;                  /*!< (@ 0x00000018) LCD Screen 0 LCD Data Register n                           */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  LCDDATA3_S0;                  /*!< (@ 0x0000001C) LCD Screen 0 LCD Data Register n                           */
  __IM  uint16_t  RESERVED7;
  __IOM uint16_t  LCDDATA4_S0;                  /*!< (@ 0x00000020) LCD Screen 0 LCD Data Register n                           */
  __IM  uint16_t  RESERVED8;
  __IOM uint16_t  LCDDATA5_S0;                  /*!< (@ 0x00000024) LCD Screen 0 LCD Data Register n                           */
  __IM  uint16_t  RESERVED9;
  __IOM uint16_t  LCDDATA6_S0;                  /*!< (@ 0x00000028) LCD Screen 0 LCD Data Register n                           */
  __IM  uint16_t  RESERVED10;
  __IOM uint16_t  LCDDATA7_S0;                  /*!< (@ 0x0000002C) LCD Screen 0 LCD Data Register n                           */
  __IM  uint16_t  RESERVED11;
  __IOM uint16_t  LCDDATA0_S1;                  /*!< (@ 0x00000030) LCD Screen 1 LCD Data Register n                           */
  __IM  uint16_t  RESERVED12;
  __IOM uint16_t  LCDDATA1_S1;                  /*!< (@ 0x00000034) LCD Screen 1 LCD Data Register n                           */
  __IM  uint16_t  RESERVED13;
  __IOM uint16_t  LCDDATA2_S1;                  /*!< (@ 0x00000038) LCD Screen 1 LCD Data Register n                           */
  __IM  uint16_t  RESERVED14;
  __IOM uint16_t  LCDDATA3_S1;                  /*!< (@ 0x0000003C) LCD Screen 1 LCD Data Register n                           */
  __IM  uint16_t  RESERVED15;
  __IOM uint16_t  LCDDATA4_S1;                  /*!< (@ 0x00000040) LCD Screen 1 LCD Data Register n                           */
  __IM  uint16_t  RESERVED16;
  __IOM uint16_t  LCDDATA5_S1;                  /*!< (@ 0x00000044) LCD Screen 1 LCD Data Register n                           */
  __IM  uint16_t  RESERVED17;
  __IOM uint16_t  LCDDATA6_S1;                  /*!< (@ 0x00000048) LCD Screen 1 LCD Data Register n                           */
  __IM  uint16_t  RESERVED18;
  __IOM uint16_t  LCDDATA7_S1;                  /*!< (@ 0x0000004C) LCD Screen 1 LCD Data Register n                           */
} ADI_LCD_Type;                                 /*!< Size = 78 (0x4e)                                                          */



/* =========================================================================================================================== */
/* ================                                          ADI_DMA                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief DMA (ADI_DMA)
  */

typedef struct {                                /*!< (@ 0x40010000) ADI_DMA Structure                                          */
  __IOM uint32_t  DMASTA;                       /*!< (@ 0x00000000) DMA DMA Status                                             */
  __IOM uint32_t  DMACFG;                       /*!< (@ 0x00000004) DMA DMA Configuration                                      */
  __IOM uint32_t  DMAPDBPTR;                    /*!< (@ 0x00000008) DMA DMA channel primary control data base pointer          */
  __IOM uint32_t  DMAADBPTR;                    /*!< (@ 0x0000000C) DMA DMA channel alternate control data base pointer        */
  __IM  uint32_t  RESERVED;
  __IOM uint16_t  DMASWREQ;                     /*!< (@ 0x00000014) DMA DMA channel software request                           */
  __IM  uint16_t  RESERVED1;
  __IM  uint32_t  RESERVED2[2];
  __IOM uint16_t  DMARMSKSET;                   /*!< (@ 0x00000020) DMA DMA channel request mask set                           */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  DMARMSKCLR;                   /*!< (@ 0x00000024) DMA DMA channel request mask clear                         */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  DMAENSET;                     /*!< (@ 0x00000028) DMA DMA channel enable set                                 */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  DMAENCLR;                     /*!< (@ 0x0000002C) DMA DMA channel enable clear                               */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  DMAALTSET;                    /*!< (@ 0x00000030) DMA DMA channel primary-alternate set                      */
  __IM  uint16_t  RESERVED7;
  __IOM uint16_t  DMAALTCLR;                    /*!< (@ 0x00000034) DMA DMA channel primary-alternate clear                    */
  __IM  uint16_t  RESERVED8;
  __IOM uint16_t  DMAPRISET;                    /*!< (@ 0x00000038) DMA DMA channel priority set                               */
  __IM  uint16_t  RESERVED9;
  __IOM uint16_t  DMAPRICLR;                    /*!< (@ 0x0000003C) DMA DMA channel priority clear                             */
  __IM  uint16_t  RESERVED10;
  __IM  uint32_t  RESERVED11[2];
  __IOM uint16_t  DMAERRCHNLCLR;                /*!< (@ 0x00000048) DMA DMA Per Channel Error Clear                            */
  __IM  uint16_t  RESERVED12;
  __IOM uint16_t  DMAERRCLR;                    /*!< (@ 0x0000004C) DMA DMA bus error clear                                    */
  __IM  uint16_t  RESERVED13;
  __IOM uint16_t  DMAINVALIDDESCCLR;            /*!< (@ 0x00000050) DMA DMA Per Channel Invalid Descriptor Clear               */
  __IM  uint16_t  RESERVED14;
  __IM  uint32_t  RESERVED15[491];
  __IOM uint16_t  DMABSSET;                     /*!< (@ 0x00000800) DMA DMA channel bytes swap enable set                      */
  __IM  uint16_t  RESERVED16;
  __IOM uint16_t  DMABSCLR;                     /*!< (@ 0x00000804) DMA DMA channel bytes swap enable clear                    */
  __IM  uint16_t  RESERVED17;
  __IM  uint32_t  RESERVED18[2];
  __IOM uint16_t  DMASRCADSSET;                 /*!< (@ 0x00000810) DMA DMA channel source address decrement enable
                                                                    set                                                        */
  __IM  uint16_t  RESERVED19;
  __IOM uint16_t  DMASRCADCLR;                  /*!< (@ 0x00000814) DMA DMA channel source address decrement enable
                                                                    clear                                                      */
  __IM  uint16_t  RESERVED20;
  __IOM uint16_t  DMADSTADSET;                  /*!< (@ 0x00000818) DMA DMA channel destination address decrement
                                                                    enable set                                                 */
  __IM  uint16_t  RESERVED21;
  __IOM uint16_t  DMADSTADCLR;                  /*!< (@ 0x0000081C) DMA DMA channel destination address decrement
                                                                    enable clear                                               */
  __IM  uint16_t  RESERVED22;
  __IM  uint32_t  RESERVED23[496];
  __IOM uint8_t   DMAREVID;                     /*!< (@ 0x00000FE0) DMA DMA Controller Revision ID                             */
  __IM  uint8_t   RESERVED24;
  __IM  uint16_t  RESERVED25;
} ADI_DMA_Type;                                 /*!< Size = 4068 (0xfe4)                                                       */



/* =========================================================================================================================== */
/* ================                                         ADI_FEE0                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief Instruction Flash Controller (ADI_FEE0)
  */

typedef struct {                                /*!< (@ 0x40018000) ADI_FEE0 Structure                                         */
  __IOM uint16_t  FEESTA;                       /*!< (@ 0x00000000) FEE0 Status                                                */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  FEECON0;                      /*!< (@ 0x00000004) FEE0 Command Control                                       */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  FEECMD;                       /*!< (@ 0x00000008) FEE0 Command                                               */
  __IM  uint16_t  RESERVED2[3];
  __IOM uint16_t  FEEADR0L;                     /*!< (@ 0x00000010) FEE0 Lower page address                                    */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  FEEADR0H;                     /*!< (@ 0x00000014) FEE0 Upper page address                                    */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  FEEADR1L;                     /*!< (@ 0x00000018) FEE0 Lower page address                                    */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  FEEADR1H;                     /*!< (@ 0x0000001C) FEE0 Upper page address                                    */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  FEEKEY;                       /*!< (@ 0x00000020) FEE0 Key                                                   */
  __IM  uint16_t  RESERVED7[7];
  __IOM uint16_t  FEESIGL;                      /*!< (@ 0x00000030) FEE0 Lower halfword of signature                           */
  __IM  uint16_t  RESERVED8;
  __IOM uint16_t  FEESIGH;                      /*!< (@ 0x00000034) FEE0 Upper halfword of signature                           */
  __IM  uint16_t  RESERVED9[9];
  __IOM uint16_t  FEEADRAL;                     /*!< (@ 0x00000048) FEE0 Lower halfword of write abort address                 */
  __IM  uint16_t  RESERVED10;
  __IOM uint16_t  FEEADRAH;                     /*!< (@ 0x0000004C) FEE0 Upper halfword of write abort address                 */
  __IM  uint16_t  RESERVED11;
  __IOM uint16_t  FEEPARCTL;                    /*!< (@ 0x00000050) FEE0 Parity Control Register                               */
  __IM  uint16_t  RESERVED12;
  __IOM uint16_t  FEEPARSTA;                    /*!< (@ 0x00000054) FEE0 Parity Status Register                                */
  __IM  uint16_t  RESERVED13;
  __IOM uint16_t  FEEPARADRL;                   /*!< (@ 0x00000058) FEE0 Parity Error Address Low                              */
  __IM  uint16_t  RESERVED14;
  __IOM uint16_t  FEEPARADRH;                   /*!< (@ 0x0000005C) FEE0 Parity Error Address High                             */
  __IM  uint16_t  RESERVED15[13];
  __IOM uint16_t  FEEAEN0;                      /*!< (@ 0x00000078) FEE0 System IRQ abort enable for interrupts 15
                                                                    to 0                                                       */
  __IM  uint16_t  RESERVED16;
  __IOM uint16_t  FEEAEN1;                      /*!< (@ 0x0000007C) FEE0 System IRQ abort enable for interrupts 31
                                                                    to 16                                                      */
  __IM  uint16_t  RESERVED17;
  __IOM uint16_t  FEEAEN2;                      /*!< (@ 0x00000080) FEE0 System IRQ abort enable for interrupts 47
                                                                    to 32                                                      */
  __IM  uint16_t  RESERVED18;
  __IOM uint16_t  FEEAEN3;                      /*!< (@ 0x00000084) FEE0 System IRQ abort enable for interrupts 60
                                                                    to 48                                                      */
} ADI_FEE0_Type;                                /*!< Size = 134 (0x86)                                                         */



/* =========================================================================================================================== */
/* ================                                          ADI_GPF                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief General Purpose Flash Controller (ADI_GPF)
  */

typedef struct {                                /*!< (@ 0x4001C000) ADI_GPF Structure                                          */
  __IOM uint16_t  GPFEESTA;                     /*!< (@ 0x00000000) GPF Status                                                 */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  GPFEECON0;                    /*!< (@ 0x00000004) GPF Command Control                                        */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  GPFEECMD;                     /*!< (@ 0x00000008) GPF Command                                                */
  __IM  uint16_t  RESERVED2[3];
  __IOM uint16_t  GPFEEADR0L;                   /*!< (@ 0x00000010) GPF Lower page address                                     */
  __IM  uint16_t  RESERVED3[3];
  __IOM uint16_t  GPFEEADR1L;                   /*!< (@ 0x00000018) GPF Lower page address                                     */
  __IM  uint16_t  RESERVED4[3];
  __IOM uint16_t  GPFEEKEY;                     /*!< (@ 0x00000020) GPF Key                                                    */
  __IM  uint16_t  RESERVED5[7];
  __IOM uint16_t  GPFEESIGL;                    /*!< (@ 0x00000030) GPF Lower halfword of signature                            */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  GPFEESIGH;                    /*!< (@ 0x00000034) GPF Upper halfword of signature                            */
  __IM  uint16_t  RESERVED7[9];
  __IOM uint16_t  GPFEEADRAL;                   /*!< (@ 0x00000048) GPF Lower halfword of write abort address                  */
  __IM  uint16_t  RESERVED8;
  __IOM uint16_t  GPFEEADRAH;                   /*!< (@ 0x0000004C) GPF Upper halfword of write abort address                  */
  __IM  uint16_t  RESERVED9[21];
  __IOM uint16_t  GPFEEAEN0;                    /*!< (@ 0x00000078) GPF System IRQ abort enable for interrupts 15
                                                                    to 0                                                       */
  __IM  uint16_t  RESERVED10;
  __IOM uint16_t  GPFEEAEN1;                    /*!< (@ 0x0000007C) GPF System IRQ abort enable for interrupts 31
                                                                    to 16                                                      */
  __IM  uint16_t  RESERVED11;
  __IOM uint16_t  GPFEEAEN2;                    /*!< (@ 0x00000080) GPF System IRQ abort enable for interrupts 47
                                                                    to 32                                                      */
  __IM  uint16_t  RESERVED12;
  __IOM uint16_t  GPFEEAEN3;                    /*!< (@ 0x00000084) GPF System IRQ abort enable for interrupts 60
                                                                    to 48                                                      */
} ADI_GPF_Type;                                 /*!< Size = 134 (0x86)                                                         */



/* =========================================================================================================================== */
/* ================                                         ADI_GPIO0                                         ================ */
/* =========================================================================================================================== */


/**
  * @brief GPIO (ADI_GPIO0)
  */

typedef struct {                                /*!< (@ 0x40020000) ADI_GPIO0 Structure                                        */
  __IOM uint16_t  GPCON;                        /*!< (@ 0x00000000) GPIO Configuration                                         */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  GPOEN;                        /*!< (@ 0x00000004) GPIO output enable                                         */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  GPPE;                         /*!< (@ 0x00000008) GPIO output pullup/pulldown enable                         */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  GPIEN;                        /*!< (@ 0x0000000C) GPIO Input Path Enable                                     */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  GPIN;                         /*!< (@ 0x00000010) GPIO registered data input                                 */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  GPOUT;                        /*!< (@ 0x00000014) GPIO data output                                           */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  GPSET;                        /*!< (@ 0x00000018) GPIO data out set                                          */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  GPCLR;                        /*!< (@ 0x0000001C) GPIO data out clear                                        */
  __IM  uint16_t  RESERVED7;
  __IOM uint16_t  GPTGL;                        /*!< (@ 0x00000020) GPIO pin toggle                                            */
  __IM  uint16_t  RESERVED8;
  __IOM uint16_t  GPPOL;                        /*!< (@ 0x00000024) GPIO interrupt polarity                                    */
  __IM  uint16_t  RESERVED9;
  __IOM uint16_t  GPIENA;                       /*!< (@ 0x00000028) GPIO interrupt A enable                                    */
  __IM  uint16_t  RESERVED10;
  __IOM uint16_t  GPIENB;                       /*!< (@ 0x0000002C) GPIO interrupt B enable                                    */
  __IM  uint16_t  RESERVED11;
  __IOM uint16_t  GPINT;                        /*!< (@ 0x00000030) GPIO interrupt Status                                      */
} ADI_GPIO0_Type;                               /*!< Size = 50 (0x32)                                                          */



/* =========================================================================================================================== */
/* ================                                         ADI_GPIO1                                         ================ */
/* =========================================================================================================================== */


/**
  * @brief GPIO 1 (ADI_GPIO1)
  */

typedef struct {                                /*!< (@ 0x40020040) ADI_GPIO1 Structure                                        */
  __IOM uint16_t  GPCON;                        /*!< (@ 0x00000000) GPIO Configuration                                         */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  GPOEN;                        /*!< (@ 0x00000004) GPIO output enable                                         */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  GPPE;                         /*!< (@ 0x00000008) GPIO output pullup/pulldown enable                         */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  GPIEN;                        /*!< (@ 0x0000000C) GPIO Input Path Enable                                     */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  GPIN;                         /*!< (@ 0x00000010) GPIO registered data input                                 */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  GPOUT;                        /*!< (@ 0x00000014) GPIO data output                                           */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  GPSET;                        /*!< (@ 0x00000018) GPIO data out set                                          */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  GPCLR;                        /*!< (@ 0x0000001C) GPIO data out clear                                        */
  __IM  uint16_t  RESERVED7;
  __IOM uint16_t  GPTGL;                        /*!< (@ 0x00000020) GPIO pin toggle                                            */
  __IM  uint16_t  RESERVED8;
  __IOM uint16_t  GPPOL;                        /*!< (@ 0x00000024) GPIO interrupt polarity                                    */
  __IM  uint16_t  RESERVED9;
  __IOM uint16_t  GPIENA;                       /*!< (@ 0x00000028) GPIO interrupt A enable                                    */
  __IM  uint16_t  RESERVED10;
  __IOM uint16_t  GPIENB;                       /*!< (@ 0x0000002C) GPIO interrupt B enable                                    */
  __IM  uint16_t  RESERVED11;
  __IOM uint16_t  GPINT;                        /*!< (@ 0x00000030) GPIO interrupt Status                                      */
} ADI_GPIO1_Type;                               /*!< Size = 50 (0x32)                                                          */



/* =========================================================================================================================== */
/* ================                                         ADI_GPIO2                                         ================ */
/* =========================================================================================================================== */


/**
  * @brief GPIO 2 (ADI_GPIO2)
  */

typedef struct {                                /*!< (@ 0x40020080) ADI_GPIO2 Structure                                        */
  __IOM uint16_t  GPCON;                        /*!< (@ 0x00000000) GPIO Configuration                                         */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  GPOEN;                        /*!< (@ 0x00000004) GPIO output enable                                         */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  GPPE;                         /*!< (@ 0x00000008) GPIO output pullup/pulldown enable                         */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  GPIEN;                        /*!< (@ 0x0000000C) GPIO Input Path Enable                                     */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  GPIN;                         /*!< (@ 0x00000010) GPIO registered data input                                 */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  GPOUT;                        /*!< (@ 0x00000014) GPIO data output                                           */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  GPSET;                        /*!< (@ 0x00000018) GPIO data out set                                          */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  GPCLR;                        /*!< (@ 0x0000001C) GPIO data out clear                                        */
  __IM  uint16_t  RESERVED7;
  __IOM uint16_t  GPTGL;                        /*!< (@ 0x00000020) GPIO pin toggle                                            */
  __IM  uint16_t  RESERVED8;
  __IOM uint16_t  GPPOL;                        /*!< (@ 0x00000024) GPIO interrupt polarity                                    */
  __IM  uint16_t  RESERVED9;
  __IOM uint16_t  GPIENA;                       /*!< (@ 0x00000028) GPIO interrupt A enable                                    */
  __IM  uint16_t  RESERVED10;
  __IOM uint16_t  GPIENB;                       /*!< (@ 0x0000002C) GPIO interrupt B enable                                    */
  __IM  uint16_t  RESERVED11;
  __IOM uint16_t  GPINT;                        /*!< (@ 0x00000030) GPIO interrupt Status                                      */
} ADI_GPIO2_Type;                               /*!< Size = 50 (0x32)                                                          */



/* =========================================================================================================================== */
/* ================                                         ADI_GPIO3                                         ================ */
/* =========================================================================================================================== */


/**
  * @brief GPIO 3 (ADI_GPIO3)
  */

typedef struct {                                /*!< (@ 0x400200C0) ADI_GPIO3 Structure                                        */
  __IOM uint16_t  GPCON;                        /*!< (@ 0x00000000) GPIO Configuration                                         */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  GPOEN;                        /*!< (@ 0x00000004) GPIO output enable                                         */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  GPPE;                         /*!< (@ 0x00000008) GPIO output pullup/pulldown enable                         */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  GPIEN;                        /*!< (@ 0x0000000C) GPIO Input Path Enable                                     */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  GPIN;                         /*!< (@ 0x00000010) GPIO registered data input                                 */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  GPOUT;                        /*!< (@ 0x00000014) GPIO data output                                           */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  GPSET;                        /*!< (@ 0x00000018) GPIO data out set                                          */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  GPCLR;                        /*!< (@ 0x0000001C) GPIO data out clear                                        */
  __IM  uint16_t  RESERVED7;
  __IOM uint16_t  GPTGL;                        /*!< (@ 0x00000020) GPIO pin toggle                                            */
  __IM  uint16_t  RESERVED8;
  __IOM uint16_t  GPPOL;                        /*!< (@ 0x00000024) GPIO interrupt polarity                                    */
  __IM  uint16_t  RESERVED9;
  __IOM uint16_t  GPIENA;                       /*!< (@ 0x00000028) GPIO interrupt A enable                                    */
  __IM  uint16_t  RESERVED10;
  __IOM uint16_t  GPIENB;                       /*!< (@ 0x0000002C) GPIO interrupt B enable                                    */
  __IM  uint16_t  RESERVED11;
  __IOM uint16_t  GPINT;                        /*!< (@ 0x00000030) GPIO interrupt Status                                      */
} ADI_GPIO3_Type;                               /*!< Size = 50 (0x32)                                                          */



/* =========================================================================================================================== */
/* ================                                         ADI_GPIO4                                         ================ */
/* =========================================================================================================================== */


/**
  * @brief GPIO (ADI_GPIO4)
  */

typedef struct {                                /*!< (@ 0x40020100) ADI_GPIO4 Structure                                        */
  __IOM uint16_t  GPCON;                        /*!< (@ 0x00000000) GPIO Configuration                                         */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  GPOEN;                        /*!< (@ 0x00000004) GPIO output enable                                         */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  GPPE;                         /*!< (@ 0x00000008) GPIO output pullup/pulldown enable                         */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  GPIEN;                        /*!< (@ 0x0000000C) GPIO Input Path Enable                                     */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  GPIN;                         /*!< (@ 0x00000010) GPIO registered data input                                 */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  GPOUT;                        /*!< (@ 0x00000014) GPIO data output                                           */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  GPSET;                        /*!< (@ 0x00000018) GPIO data out set                                          */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  GPCLR;                        /*!< (@ 0x0000001C) GPIO data out clear                                        */
  __IM  uint16_t  RESERVED7;
  __IOM uint16_t  GPTGL;                        /*!< (@ 0x00000020) GPIO pin toggle                                            */
  __IM  uint16_t  RESERVED8;
  __IOM uint16_t  GPPOL;                        /*!< (@ 0x00000024) GPIO interrupt polarity                                    */
  __IM  uint16_t  RESERVED9;
  __IOM uint16_t  GPIENA;                       /*!< (@ 0x00000028) GPIO interrupt A enable                                    */
  __IM  uint16_t  RESERVED10;
  __IOM uint16_t  GPIENB;                       /*!< (@ 0x0000002C) GPIO interrupt B enable                                    */
  __IM  uint16_t  RESERVED11;
  __IOM uint16_t  GPINT;                        /*!< (@ 0x00000030) GPIO interrupt Status                                      */
} ADI_GPIO4_Type;                               /*!< Size = 50 (0x32)                                                          */



/* =========================================================================================================================== */
/* ================                                         ADI_SPIH                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief SPIH Master/Slave (ADI_SPIH)
  */

typedef struct {                                /*!< (@ 0x40024000) ADI_SPIH Structure                                         */
  __IOM uint16_t  SPISTA;                       /*!< (@ 0x00000000) SPIH Status                                                */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  SPIRX;                        /*!< (@ 0x00000004) SPIH Receive                                               */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  SPITX;                        /*!< (@ 0x00000008) SPIH Transmit                                              */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  SPIDIV;                       /*!< (@ 0x0000000C) SPIH Baud rate selection                                   */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  SPICON;                       /*!< (@ 0x00000010) SPIH SPI configuration                                     */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  SPIDMA;                       /*!< (@ 0x00000014) SPIH SPI DMA enable                                        */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  SPICNT;                       /*!< (@ 0x00000018) SPIH Transfer byte count                                   */
} ADI_SPIH_Type;                                /*!< Size = 26 (0x1a)                                                          */



/* =========================================================================================================================== */
/* ================                                        ADI_SYSCLK                                         ================ */
/* =========================================================================================================================== */


/**
  * @brief System Clocking (ADI_SYSCLK)
  */

typedef struct {                                /*!< (@ 0x40028000) ADI_SYSCLK Structure                                       */
  __IOM uint16_t  CLKCON0;                      /*!< (@ 0x00000000) Clock Control Register 0                                   */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  CLKCON1;                      /*!< (@ 0x00000004) Clock Control Register 0                                   */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  CLKCON2;                      /*!< (@ 0x00000008) Clock Control Register 2                                   */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  CLKCON3;                      /*!< (@ 0x0000000C) Clock Control Register 3                                   */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  CLKCON4;                      /*!< (@ 0x00000010) Clock Control Register 4                                   */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  CLKCON5;                      /*!< (@ 0x00000014) Clock Control Register 5                                   */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  CLKSTAT0;                     /*!< (@ 0x00000018) Clock Status Register 0                                    */
} ADI_SYSCLK_Type;                              /*!< Size = 26 (0x1a)                                                          */



/* =========================================================================================================================== */
/* ================                                          ADI_CRC                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief CRC Engine (ADI_CRC)
  */

typedef struct {                                /*!< (@ 0x4002C000) ADI_CRC Structure                                          */
  __IOM uint16_t  CTL;                          /*!< (@ 0x00000000) CRC CRC Control Register                                   */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  IPDATA;                       /*!< (@ 0x00000004) CRC Input Data Register                                    */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  RESULT;                       /*!< (@ 0x00000008) CRC CRC Result Register                                    */
} ADI_CRC_Type;                                 /*!< Size = 10 (0xa)                                                           */



/* =========================================================================================================================== */
/* ================                                          ADI_PDI                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief Parallel Display Interface (ADI_PDI)
  */

typedef struct {                                /*!< (@ 0x40030000) ADI_PDI Structure                                          */
  __IOM uint16_t  CFG;                          /*!< (@ 0x00000000) PDI PDI Configuration Register                             */
  __IM  uint16_t  RESERVED;
  __IOM uint16_t  INT_SET;                      /*!< (@ 0x00000004) PDI PDI Interrupt Set Register                             */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  INT_CLR;                      /*!< (@ 0x00000008) PDI PDI Interrupt Clear Register                           */
  __IM  uint16_t  RESERVED2;
  __IOM uint16_t  STAT;                         /*!< (@ 0x0000000C) PDI PDI Status Register                                    */
  __IM  uint16_t  RESERVED3;
  __IOM uint16_t  CMD;                          /*!< (@ 0x00000010) PDI PDI Command Register                                   */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  FRDATA_N;                     /*!< (@ 0x00000014) PDI PDI Frame Data Count Register                          */
  __IM  uint16_t  RESERVED5;
  __IOM uint16_t  FIFO;                         /*!< (@ 0x00000018) PDI PDI Parameter FIFO                                     */
  __IM  uint16_t  RESERVED6;
  __IOM uint16_t  IF_TIMING;                    /*!< (@ 0x0000001C) PDI PDI Interface Timing Register                          */
} ADI_PDI_Type;                                 /*!< Size = 30 (0x1e)                                                          */



/* =========================================================================================================================== */
/* ================                                          ADI_AFE                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief Analog Front End (ADI_AFE)
  */

typedef struct {                                /*!< (@ 0x40080000) ADI_AFE Structure                                          */
  __IOM uint32_t  CFG;                          /*!< (@ 0x00000000) AFE AFE Configuration                                      */
  __IOM uint32_t  SEQ_CFG;                      /*!< (@ 0x00000004) AFE Sequencer Configuration                                */
  __IOM uint32_t  FIFO_CFG;                     /*!< (@ 0x00000008) AFE FIFOs Configuration                                    */
  __IOM uint32_t  SW_CFG;                       /*!< (@ 0x0000000C) AFE Switch Matrix Configuration                            */
  __IOM uint32_t  DAC_CFG;                      /*!< (@ 0x00000010) AFE DAC Configuration                                      */
  __IOM uint32_t  WG_CFG;                       /*!< (@ 0x00000014) AFE Waveform Generator Configuration                       */
  __IOM uint32_t  WG_DCLEVEL_1;                 /*!< (@ 0x00000018) AFE Waveform Generator - Trapezoid DC Level 1              */
  __IOM uint32_t  WG_DCLEVEL_2;                 /*!< (@ 0x0000001C) AFE Waveform Generator - Trapezoid DC Level 2              */
  __IOM uint32_t  WG_DELAY_1;                   /*!< (@ 0x00000020) AFE Waveform Generator - Trapezoid Delay 1 Time            */
  __IOM uint32_t  WG_SLOPE_1;                   /*!< (@ 0x00000024) AFE Waveform Generator - Trapezoid Slope 1 Time            */
  __IOM uint32_t  WG_DELAY_2;                   /*!< (@ 0x00000028) AFE Waveform Generator - Trapezoid Delay 2 Time            */
  __IOM uint32_t  WG_SLOPE_2;                   /*!< (@ 0x0000002C) AFE Waveform Generator - Trapezoid Slope 2 Time            */
  __IOM uint32_t  WG_FCW;                       /*!< (@ 0x00000030) AFE Waveform Generator - Sinusoid Frequency Control
                                                                    Word                                                       */
  __IOM uint32_t  WG_PHASE;                     /*!< (@ 0x00000034) AFE Waveform Generator - Sinusoid Phase Offset             */
  __IOM uint32_t  WG_OFFSET;                    /*!< (@ 0x00000038) AFE Waveform Generator - Sinusoid Offset                   */
  __IOM uint32_t  WG_AMPLITUDE;                 /*!< (@ 0x0000003C) AFE Waveform Generator - Sinusoid Amplitude                */
  __IOM uint32_t  ADC_CFG;                      /*!< (@ 0x00000040) AFE ADC Configuration                                      */
  __IOM uint32_t  SUPPLY_LPF_CFG;               /*!< (@ 0x00000044) AFE Supply Rejection Filter Configuration                  */
  __IOM uint32_t  SW_FULL_CFG_MSB;              /*!< (@ 0x00000048) AFE Switch Matrix Full Configuration (MSB)                 */
  __IOM uint32_t  SW_FULL_CFG_LSB;              /*!< (@ 0x0000004C) AFE Switch Matrix Full Configuration (LSB)                 */
  __IM  uint32_t  RESERVED;
  __IOM uint32_t  WG_DAC_CODE;                  /*!< (@ 0x00000054) AFE Waveform Generator - DAC Code                          */
  __IOM uint32_t  STATUS;                       /*!< (@ 0x00000058) AFE AFE Status                                             */
  __IM  uint32_t  RESERVED1;
  __IOM uint32_t  SEQ_CRC;                      /*!< (@ 0x00000060) AFE Sequencer CRC Value                                    */
  __IOM uint32_t  SEQ_COUNT;                    /*!< (@ 0x00000064) AFE Sequencer Command Count                                */
  __IOM uint32_t  SEQ_TIMEOUT;                  /*!< (@ 0x00000068) AFE Sequencer Timeout Counter                              */
  __IOM uint32_t  DATA_FIFO_READ;               /*!< (@ 0x0000006C) AFE Data FIFO Read                                         */
  __IOM uint32_t  CMD_FIFO_WRITE;               /*!< (@ 0x00000070) AFE Command FIFO Write                                     */
  __IOM uint32_t  ADC_RESULT;                   /*!< (@ 0x00000074) AFE ADC Raw Result                                         */
  __IOM uint32_t  DFT_RESULT_REAL;              /*!< (@ 0x00000078) AFE DFT Result, Real Part                                  */
  __IOM uint32_t  DFT_RESULT_IMAG;              /*!< (@ 0x0000007C) AFE DFT Result, Imaginary Part                             */
  __IOM uint32_t  SUPPLY_LPF_RESULT;            /*!< (@ 0x00000080) AFE Supply Rejection Filter Result                         */
  __IOM uint32_t  TEMP_SENSOR_RESULT;           /*!< (@ 0x00000084) AFE Temperature Sensor Result                              */
  __IM  uint32_t  RESERVED2;
  __IOM uint32_t  ANALOG_CAPTURE_IEN;           /*!< (@ 0x0000008C) AFE Analog Capture Interrupt Enable                        */
  __IOM uint32_t  ANALOG_GEN_IEN;               /*!< (@ 0x00000090) AFE Analog Generation Interrupt Enable                     */
  __IOM uint32_t  CMD_FIFO_IEN;                 /*!< (@ 0x00000094) AFE Command FIFO Interrupt Enable                          */
  __IOM uint32_t  DATA_FIFO_IEN;                /*!< (@ 0x00000098) AFE Data FIFO Interrupt Enable                             */
  __IM  uint32_t  RESERVED3;
  __IOM uint32_t  ANALOG_CAPTURE_INT;           /*!< (@ 0x000000A0) AFE Analog Capture Interrupt                               */
  __IOM uint32_t  ANALOG_GEN_INT;               /*!< (@ 0x000000A4) AFE Analog Generation Interrupt                            */
  __IOM uint32_t  CMD_FIFO_INT;                 /*!< (@ 0x000000A8) AFE Command FIFO Interrupt                                 */
  __IOM uint32_t  DATA_FIFO_INT;                /*!< (@ 0x000000AC) AFE Data FIFO Interrupt                                    */
  __IOM uint32_t  SW_STATUS_MSB;                /*!< (@ 0x000000B0) AFE Switch Matrix Status MSB                               */
  __IOM uint32_t  SW_STATUS_LSB;                /*!< (@ 0x000000B4) AFE Switch Matrix Status (LSB)                             */
  __IOM uint32_t  ADCMIN;                       /*!< (@ 0x000000B8) AFE ADC Minimum Value Check                                */
  __IOM uint32_t  ADCMAX;                       /*!< (@ 0x000000BC) AFE ADC Maximum Value Check                                */
  __IOM uint32_t  ADCDELTA;                     /*!< (@ 0x000000C0) AFE ADC Delta Check                                        */
  __IM  uint32_t  RESERVED4[15];
  __IOM uint32_t  CAL_DATA_LOCK;                /*!< (@ 0x00000100) AFE Calibration Data Lock                                  */
  __IOM uint32_t  ADC_GAIN_TIA;                 /*!< (@ 0x00000104) AFE ADC Gain (TIA Measurement)                             */
  __IOM uint32_t  ADC_OFFSET_TIA;               /*!< (@ 0x00000108) AFE ADC Offset (TIA Measurement)                           */
  __IOM uint32_t  ADC_GAIN_TEMP_SENS;           /*!< (@ 0x0000010C) AFE ADC Gain (Temperature Sensor Measurement)              */
  __IOM uint32_t  ADC_OFFSET_TEMP_SENS;         /*!< (@ 0x00000110) AFE ADC Offset (Temperature Sensor Measurement)            */
  __IM  uint32_t  RESERVED5;
  __IOM uint32_t  ADC_GAIN_AUX;                 /*!< (@ 0x00000118) AFE ADC Gain (Aux Channel Measurement)                     */
  __IOM uint32_t  ADC_OFFSET_AUX;               /*!< (@ 0x0000011C) AFE ADC Offset (Aux Channel Measurement)                   */
  __IOM uint32_t  DAC_OFFSET_UNITY;             /*!< (@ 0x00000120) AFE DAC Offset With Attenuator Disabled                    */
  __IOM uint32_t  DAC_OFFSET_ATTEN;             /*!< (@ 0x00000124) AFE DAC Offset With Attenuator Enabled                     */
  __IOM uint32_t  DAC_GAIN;                     /*!< (@ 0x00000128) AFE DAC Gain                                               */
  __IOM uint32_t  REF_TRIM0;                    /*!< (@ 0x0000012C) AFE Precision Reference Trim 0                             */
  __IOM uint32_t  REF_TRIM1;                    /*!< (@ 0x00000130) AFE Precision Reference Trim 1                             */
  __IOM uint32_t  ALDO_TRIM;                    /*!< (@ 0x00000134) AFE Analog LDO Trim                                        */
  __IOM uint32_t  DAC_TRIM;                     /*!< (@ 0x00000138) AFE DAC Trim                                               */
  __IOM uint32_t  INAMP_TRIM;                   /*!< (@ 0x0000013C) AFE INAMP Trim                                             */
  __IOM uint32_t  EXBUF_TRIM;                   /*!< (@ 0x00000140) AFE Excitation Buffer Trim                                 */
  __IOM uint32_t  TEMP_SENS_TRIM;               /*!< (@ 0x00000144) AFE Temperature Sensor Trim                                */
} ADI_AFE_Type;                                 /*!< Size = 328 (0x148)                                                        */



/* =========================================================================================================================== */
/* ================                                          ADI_CT                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Cap Touch Controller (ADI_CT)
  */

typedef struct {                                /*!< (@ 0x40084000) ADI_CT Structure                                           */
  __IOM uint32_t  CDC_PWR;                      /*!< (@ 0x00000000) Cap Touch                                                  */
  __IOM uint32_t  CFG1;                         /*!< (@ 0x00000004) Cap Touch Config Register 1                                */
  __IOM uint32_t  CFG2;                         /*!< (@ 0x00000008) Cap Touch Config Register 2                                */
  __IOM uint32_t  CFG3;                         /*!< (@ 0x0000000C) Cap Touch Config Register 3                                */
} ADI_CT_Type;                                  /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                          ADI_USB                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief USB Controller (ADI_USB)
  */

typedef struct {                                /*!< (@ 0x400A0000) ADI_USB Structure                                          */
  __IOM uint8_t   FADDR;                        /*!< (@ 0x00000000) USB0 Function Address Register                             */
  __IOM uint8_t   POWER;                        /*!< (@ 0x00000001) USB0 Power and Device Control Register                     */
  __IOM uint8_t   INTRTX;                       /*!< (@ 0x00000002) USB0 Transmit Interrupt Register                           */
  __IM  uint8_t   RESERVED;
  __IOM uint16_t  INTRRX;                       /*!< (@ 0x00000004) USB0 Receive Interrupt Register                            */
  __IOM uint16_t  INTRTXE;                      /*!< (@ 0x00000006) USB0 Transmit Interrupt Enable Register                    */
  __IOM uint16_t  INTRRXE;                      /*!< (@ 0x00000008) USB0 Receive Interrupt Enable Register                     */
  __IOM uint8_t   IRQ;                          /*!< (@ 0x0000000A) USB0 Common Interrupts Register                            */
  __IOM uint8_t   IEN;                          /*!< (@ 0x0000000B) USB0 Common Interrupts Enable Register                     */
  __IOM uint16_t  FRAME;                        /*!< (@ 0x0000000C) USB0 Frame Number Register                                 */
  __IOM uint8_t   INDEX;                        /*!< (@ 0x0000000E) USB0 Index Register                                        */
  __IOM uint8_t   TESTMODE;                     /*!< (@ 0x0000000F) USB0 Testmode Register                                     */
  __IOM uint16_t  EPI_TXMAXP0;                  /*!< (@ 0x00000010) USB0 EPn Transmit Maximum Packet Length Register           */
  __IOM uint16_t  EPI_TXCSR_P0;                 /*!< (@ 0x00000012) USB0 EPn Transmit Configuration and Status (Peripheral)
                                                                    Register                                                   */
  __IOM uint16_t  EPI_RXMAXP0;                  /*!< (@ 0x00000014) USB0 EPn Receive Maximum Packet Length Register            */
  __IM  uint16_t  RESERVED1;
  __IOM uint16_t  EP0I_CNT0;                    /*!< (@ 0x00000018) USB0 EP0 Number of Received Bytes Register                 */
  __IM  uint16_t  RESERVED2[2];
  __IM  uint8_t   RESERVED3;
  __IOM uint8_t   EP0I_CFGDATA0;                /*!< (@ 0x0000001F) USB0 EP0 Configuration Information Register                */
  __IOM uint16_t  FIFO0;                        /*!< (@ 0x00000020) USB0 FIFO Word (32-Bit) Register                           */
  __IM  uint16_t  RESERVED4;
  __IOM uint16_t  FIFO1;                        /*!< (@ 0x00000024) USB0 FIFO Word (32-Bit) Register                           */
  __IM  uint16_t  RESERVED5;
  __IOM uint32_t  FIFO2;                        /*!< (@ 0x00000028) USB0 FIFO Word (32-Bit) Register                           */
  __IOM uint16_t  FIFO3;                        /*!< (@ 0x0000002C) USB0 FIFO Word (32-Bit) Register                           */
  __IM  uint16_t  RESERVED6;
  __IM  uint32_t  RESERVED7[12];
  __IOM uint8_t   DEV_CTL;                      /*!< (@ 0x00000060) USB0 Device Control Register                               */
  __IOM uint8_t   MISC;                         /*!< (@ 0x00000061) USB0 Miscellaneous Register                                */
  __IM  uint16_t  RESERVED8;
  __IM  uint32_t  RESERVED9[5];
  __IOM uint8_t   EPINFO;                       /*!< (@ 0x00000078) USB0 Endpoint Information Register                         */
  __IOM uint8_t   RAMINFO;                      /*!< (@ 0x00000079) USB0 RAM Information Register                              */
  __IOM uint16_t  LINKINFO;                     /*!< (@ 0x0000007A) USB0 Link Information Register                             */
  __IM  uint8_t   RESERVED10;
  __IOM uint8_t   FS_EOF1;                      /*!< (@ 0x0000007D) USB0 Full-Speed EOF 1 Register                             */
  __IM  uint8_t   RESERVED11;
  __IOM uint8_t   SOFT_RST;                     /*!< (@ 0x0000007F) USB0 Software Reset Register                               */
  __IM  uint32_t  RESERVED12[32];
  __IOM uint16_t  EP0_TXMAXP;                   /*!< (@ 0x00000100) USB0 EPn Transmit Maximum Packet Length Register           */
  __IOM uint16_t  EP0_TXCSR_P;                  /*!< (@ 0x00000102) USB0 EPn Transmit Configuration and Status (Peripheral)
                                                                    Register                                                   */
  __IOM uint16_t  EP0_RXMAXP;                   /*!< (@ 0x00000104) USB0 EPn Receive Maximum Packet Length Register            */
  __IOM uint16_t  EP0_RXCSR_P;                  /*!< (@ 0x00000106) USB0 EPn Receive Configuration and Status (Peripheral)
                                                                    Register                                                   */
  __IOM uint16_t  EP0_CNT0;                     /*!< (@ 0x00000108) USB0 EP0 Number of Received Bytes Register                 */
  __IM  uint16_t  RESERVED13;
  __IM  uint32_t  RESERVED14;
  __IOM uint16_t  EP1_TXMAXP;                   /*!< (@ 0x00000110) USB0 EPn Transmit Maximum Packet Length Register           */
  __IOM uint16_t  EP1_TXCSR_P;                  /*!< (@ 0x00000112) USB0 EPn Transmit Configuration and Status (Peripheral)
                                                                    Register                                                   */
  __IOM uint16_t  EP1_RXMAXP;                   /*!< (@ 0x00000114) USB0 EPn Receive Maximum Packet Length Register            */
  __IOM uint16_t  EP1_RXCSR_P;                  /*!< (@ 0x00000116) USB0 EPn Receive Configuration and Status (Peripheral)
                                                                    Register                                                   */
  __IOM uint16_t  EP1_RXCNT;                    /*!< (@ 0x00000118) USB0 EPn Number of Bytes Received Register                 */
  __IM  uint16_t  RESERVED15;
  __IM  uint32_t  RESERVED16;
  __IOM uint16_t  EP2_TXMAXP;                   /*!< (@ 0x00000120) USB0 EPn Transmit Maximum Packet Length Register           */
  __IOM uint16_t  EP2_TXCSR_P;                  /*!< (@ 0x00000122) USB0 EPn Transmit Configuration and Status (Peripheral)
                                                                    Register                                                   */
  __IOM uint16_t  EP2_RXMAXP;                   /*!< (@ 0x00000124) USB0 EPn Receive Maximum Packet Length Register            */
  __IOM uint16_t  EP2_RXCSR_P;                  /*!< (@ 0x00000126) USB0 EPn Receive Configuration and Status (Peripheral)
                                                                    Register                                                   */
  __IOM uint16_t  EP2_RXCNT;                    /*!< (@ 0x00000128) USB0 EPn Number of Bytes Received Register                 */
  __IM  uint16_t  RESERVED17;
  __IM  uint32_t  RESERVED18;
  __IOM uint16_t  EP3_TXMAXP;                   /*!< (@ 0x00000130) USB0 EPn Transmit Maximum Packet Length Register           */
  __IOM uint16_t  EP3_TXCSR_P;                  /*!< (@ 0x00000132) USB0 EPn Transmit Configuration and Status (Peripheral)
                                                                    Register                                                   */
  __IOM uint16_t  EP3_RXMAXP;                   /*!< (@ 0x00000134) USB0 EPn Receive Maximum Packet Length Register            */
  __IOM uint16_t  EP3_RXCSR_P;                  /*!< (@ 0x00000136) USB0 EPn Receive Configuration and Status (Peripheral)
                                                                    Register                                                   */
  __IOM uint16_t  EP3_RXCNT;                    /*!< (@ 0x00000138) USB0 EPn Number of Bytes Received Register                 */
  __IM  uint16_t  RESERVED19;
  __IM  uint32_t  RESERVED20[49];
  __IOM uint16_t  DMA_IRQ;                      /*!< (@ 0x00000200) USB0 DMA Interrupt Register                                */
  __IM  uint16_t  RESERVED21;
  __IOM uint16_t  DMA0_CTL;                     /*!< (@ 0x00000204) USB0 DMA Channel n Control Register                        */
  __IM  uint16_t  RESERVED22;
  __IOM uint16_t  DMA0_ADDR;                    /*!< (@ 0x00000208) USB0 DMA Channel n Address Register                        */
  __IM  uint16_t  RESERVED23;
  __IOM uint16_t  DMA0_CNT;                     /*!< (@ 0x0000020C) USB0 DMA Channel n Count Register                          */
  __IM  uint16_t  RESERVED24;
  __IM  uint32_t  RESERVED25;
  __IOM uint16_t  DMA1_CTL;                     /*!< (@ 0x00000214) USB0 DMA Channel n Control Register                        */
  __IM  uint16_t  RESERVED26;
  __IOM uint16_t  DMA1_ADDR;                    /*!< (@ 0x00000218) USB0 DMA Channel n Address Register                        */
  __IM  uint16_t  RESERVED27;
  __IOM uint16_t  DMA1_CNT;                     /*!< (@ 0x0000021C) USB0 DMA Channel n Count Register                          */
  __IM  uint16_t  RESERVED28;
  __IM  uint32_t  RESERVED29[72];
  __IOM uint16_t  RXDPKTBUFDIS;                 /*!< (@ 0x00000340) USB0 RX Double Packet Buffer Disable for Endpoints
                                                                    1 to 3                                                     */
  __IOM uint16_t  TXDPKTBUFDIS;                 /*!< (@ 0x00000342) USB0 TX Double Packet Buffer Disable for Endpoints
                                                                    1 to 3                                                     */
  __IOM uint16_t  CT_UCH;                       /*!< (@ 0x00000344) USB0 Chirp Timeout Register                                */
  __IM  uint16_t  RESERVED30;
  __IM  uint32_t  RESERVED31[6];
  __IOM uint16_t  LPM_ATTR;                     /*!< (@ 0x00000360) USB0 LPM Attribute Register                                */
  __IOM uint8_t   LPM_CTL;                      /*!< (@ 0x00000362) USB0 LPM Control Register                                  */
  __IOM uint8_t   LPM_IEN;                      /*!< (@ 0x00000363) USB0 LPM Interrupt Enable Register                         */
  __IOM uint8_t   LPM_IRQ;                      /*!< (@ 0x00000364) USB0 LPM Interrupt Status Register                         */
  __IM  uint8_t   RESERVED32;
  __IM  uint16_t  RESERVED33;
  __IM  uint32_t  RESERVED34[13];
  __IOM uint16_t  PHY_CTL;                      /*!< (@ 0x0000039C) USB0 FS PHY Control                                        */
  __IOM uint16_t  PHY_STAT;                     /*!< (@ 0x0000039E) USB0 FS PHY Status                                         */
  __IM  uint32_t  RESERVED35[4];
  __IOM uint32_t  RAM_ADDR;                     /*!< (@ 0x000003B0) USB0 RAM Address Register                                  */
  __IOM uint32_t  RAM_DATA;                     /*!< (@ 0x000003B4) USB0 RAM Data Register                                     */
} ADI_USB_Type;                                 /*!< Size = 952 (0x3b8)                                                        */


/** @} */ /* End of group Device_Peripheral_peripherals */


/* =========================================================================================================================== */
/* ================                          Device Specific Peripheral Address Map                           ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripheralAddr
  * @{
  */

#define ADI_GPT0_BASE               0x40000000UL
#define ADI_GPT1_BASE               0x40000400UL
#define ADI_GPT2_BASE               0x40000800UL
#define ADI_ID_BASE                 0x40002020UL
#define ADI_PWR_BASE                0x40002400UL
#define ADI_EI_BASE                 0x40002420UL
#define ADI_PWRVCC_BASE             0x40002480UL
#define ADI_WUT_BASE                0x40002500UL
#define ADI_WDT_BASE                0x40002580UL
#define ADI_RTC_BASE                0x40002600UL
#define ADI_I2C_BASE                0x40003000UL
#define ADI_SPI0_BASE               0x40004000UL
#define ADI_SPI1_BASE               0x40004400UL
#define ADI_UART_BASE               0x40005000UL
#define ADI_I2S_BASE                0x40005800UL
#define ADI_BEEP_BASE               0x40005C00UL
#define ADI_RNG_BASE                0x40006000UL
#define ADI_LCD_BASE                0x40008000UL
#define ADI_DMA_BASE                0x40010000UL
#define ADI_FEE0_BASE               0x40018000UL
#define ADI_GPF_BASE                0x4001C000UL
#define ADI_GPIO0_BASE              0x40020000UL
#define ADI_GPIO1_BASE              0x40020040UL
#define ADI_GPIO2_BASE              0x40020080UL
#define ADI_GPIO3_BASE              0x400200C0UL
#define ADI_GPIO4_BASE              0x40020100UL
#define ADI_SPIH_BASE               0x40024000UL
#define ADI_SYSCLK_BASE             0x40028000UL
#define ADI_CRC_BASE                0x4002C000UL
#define ADI_PDI_BASE                0x40030000UL
#define ADI_AFE_BASE                0x40080000UL
#define ADI_CT_BASE                 0x40084000UL
#define ADI_USB_BASE                0x400A0000UL

/** @} */ /* End of group Device_Peripheral_peripheralAddr */


/* =========================================================================================================================== */
/* ================                                  Peripheral declaration                                   ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_declaration
  * @{
  */

#define ADI_GPT0                    ((ADI_GPT0_Type*)          ADI_GPT0_BASE)
#define ADI_GPT1                    ((ADI_GPT1_Type*)          ADI_GPT1_BASE)
#define ADI_GPT2                    ((ADI_GPT2_Type*)          ADI_GPT2_BASE)
#define ADI_ID                      ((ADI_ID_Type*)            ADI_ID_BASE)
#define ADI_PWR                     ((ADI_PWR_Type*)           ADI_PWR_BASE)
#define ADI_EI                      ((ADI_EI_Type*)            ADI_EI_BASE)
#define ADI_PWRVCC                  ((ADI_PWRVCC_Type*)        ADI_PWRVCC_BASE)
#define ADI_WUT                     ((ADI_WUT_Type*)           ADI_WUT_BASE)
#define ADI_WDT                     ((ADI_WDT_Type*)           ADI_WDT_BASE)
#define ADI_RTC                     ((ADI_RTC_Type*)           ADI_RTC_BASE)
#define ADI_I2C                     ((ADI_I2C_Type*)           ADI_I2C_BASE)
#define ADI_SPI0                    ((ADI_SPI0_Type*)          ADI_SPI0_BASE)
#define ADI_SPI1                    ((ADI_SPI1_Type*)          ADI_SPI1_BASE)
#define ADI_UART                    ((ADI_UART_Type*)          ADI_UART_BASE)
#define ADI_I2S                     ((ADI_I2S_Type*)           ADI_I2S_BASE)
#define ADI_BEEP                    ((ADI_BEEP_Type*)          ADI_BEEP_BASE)
#define ADI_RNG                     ((ADI_RNG_Type*)           ADI_RNG_BASE)
#define ADI_LCD                     ((ADI_LCD_Type*)           ADI_LCD_BASE)
#define ADI_DMA                     ((ADI_DMA_Type*)           ADI_DMA_BASE)
#define ADI_FEE0                    ((ADI_FEE0_Type*)          ADI_FEE0_BASE)
#define ADI_GPF                     ((ADI_GPF_Type*)           ADI_GPF_BASE)
#define ADI_GPIO0                   ((ADI_GPIO0_Type*)         ADI_GPIO0_BASE)
#define ADI_GPIO1                   ((ADI_GPIO1_Type*)         ADI_GPIO1_BASE)
#define ADI_GPIO2                   ((ADI_GPIO2_Type*)         ADI_GPIO2_BASE)
#define ADI_GPIO3                   ((ADI_GPIO3_Type*)         ADI_GPIO3_BASE)
#define ADI_GPIO4                   ((ADI_GPIO4_Type*)         ADI_GPIO4_BASE)
#define ADI_SPIH                    ((ADI_SPIH_Type*)          ADI_SPIH_BASE)
#define ADI_SYSCLK                  ((ADI_SYSCLK_Type*)        ADI_SYSCLK_BASE)
#define ADI_CRC                     ((ADI_CRC_Type*)           ADI_CRC_BASE)
#define ADI_PDI                     ((ADI_PDI_Type*)           ADI_PDI_BASE)
#define ADI_AFE                     ((ADI_AFE_Type*)           ADI_AFE_BASE)
#define ADI_CT                      ((ADI_CT_Type*)            ADI_CT_BASE)
#define ADI_USB                     ((ADI_USB_Type*)           ADI_USB_BASE)

/** @} */ /* End of group Device_Peripheral_declaration */


/* =========================================================================================================================== */
/* ================                                Pos/Mask Peripheral Section                                ================ */
/* =========================================================================================================================== */


/** @addtogroup PosMask_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                         ADI_GPT0                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  LOAD  ========================================================== */
/* ========================================================  CURCNT  ========================================================= */
/* ==========================================================  CTL  ========================================================== */
#define ADI_GPT0_CTL_EVENTEN_Pos          (12UL)                    /*!< ADI_GPT0 CTL: EVENTEN (Bit 12)                        */
#define ADI_GPT0_CTL_EVENTEN_Msk          (0x1000UL)                /*!< ADI_GPT0 CTL: EVENTEN (Bitfield-Mask: 0x01)           */
#define ADI_GPT0_CTL_EVENT_Pos            (8UL)                     /*!< ADI_GPT0 CTL: EVENT (Bit 8)                           */
#define ADI_GPT0_CTL_EVENT_Msk            (0xf00UL)                 /*!< ADI_GPT0 CTL: EVENT (Bitfield-Mask: 0x0f)             */
#define ADI_GPT0_CTL_RLD_Pos              (7UL)                     /*!< ADI_GPT0 CTL: RLD (Bit 7)                             */
#define ADI_GPT0_CTL_RLD_Msk              (0x80UL)                  /*!< ADI_GPT0 CTL: RLD (Bitfield-Mask: 0x01)               */
#define ADI_GPT0_CTL_CLK_Pos              (5UL)                     /*!< ADI_GPT0 CTL: CLK (Bit 5)                             */
#define ADI_GPT0_CTL_CLK_Msk              (0x60UL)                  /*!< ADI_GPT0 CTL: CLK (Bitfield-Mask: 0x03)               */
#define ADI_GPT0_CTL_ENABLE_Pos           (4UL)                     /*!< ADI_GPT0 CTL: ENABLE (Bit 4)                          */
#define ADI_GPT0_CTL_ENABLE_Msk           (0x10UL)                  /*!< ADI_GPT0 CTL: ENABLE (Bitfield-Mask: 0x01)            */
#define ADI_GPT0_CTL_MOD_Pos              (3UL)                     /*!< ADI_GPT0 CTL: MOD (Bit 3)                             */
#define ADI_GPT0_CTL_MOD_Msk              (0x8UL)                   /*!< ADI_GPT0 CTL: MOD (Bitfield-Mask: 0x01)               */
#define ADI_GPT0_CTL_UP_Pos               (2UL)                     /*!< ADI_GPT0 CTL: UP (Bit 2)                              */
#define ADI_GPT0_CTL_UP_Msk               (0x4UL)                   /*!< ADI_GPT0 CTL: UP (Bitfield-Mask: 0x01)                */
#define ADI_GPT0_CTL_PRE_Pos              (0UL)                     /*!< ADI_GPT0 CTL: PRE (Bit 0)                             */
#define ADI_GPT0_CTL_PRE_Msk              (0x3UL)                   /*!< ADI_GPT0 CTL: PRE (Bitfield-Mask: 0x03)               */
/* ========================================================  CLRINT  ========================================================= */
#define ADI_GPT0_CLRINT_CAP_Pos           (1UL)                     /*!< ADI_GPT0 CLRINT: CAP (Bit 1)                          */
#define ADI_GPT0_CLRINT_CAP_Msk           (0x2UL)                   /*!< ADI_GPT0 CLRINT: CAP (Bitfield-Mask: 0x01)            */
#define ADI_GPT0_CLRINT_TMOUT_Pos         (0UL)                     /*!< ADI_GPT0 CLRINT: TMOUT (Bit 0)                        */
#define ADI_GPT0_CLRINT_TMOUT_Msk         (0x1UL)                   /*!< ADI_GPT0 CLRINT: TMOUT (Bitfield-Mask: 0x01)          */
/* ========================================================  CAPTURE  ======================================================== */
/* =========================================================  ALOAD  ========================================================= */
/* ========================================================  ACURCNT  ======================================================== */
/* ========================================================  STATUS  ========================================================= */
#define ADI_GPT0_STATUS_PDOK_Pos          (7UL)                     /*!< ADI_GPT0 STATUS: PDOK (Bit 7)                         */
#define ADI_GPT0_STATUS_PDOK_Msk          (0x80UL)                  /*!< ADI_GPT0 STATUS: PDOK (Bitfield-Mask: 0x01)           */
#define ADI_GPT0_STATUS_BUSY_Pos          (6UL)                     /*!< ADI_GPT0 STATUS: BUSY (Bit 6)                         */
#define ADI_GPT0_STATUS_BUSY_Msk          (0x40UL)                  /*!< ADI_GPT0 STATUS: BUSY (Bitfield-Mask: 0x01)           */
#define ADI_GPT0_STATUS_CAP_Pos           (1UL)                     /*!< ADI_GPT0 STATUS: CAP (Bit 1)                          */
#define ADI_GPT0_STATUS_CAP_Msk           (0x2UL)                   /*!< ADI_GPT0 STATUS: CAP (Bitfield-Mask: 0x01)            */
#define ADI_GPT0_STATUS_TMOUT_Pos         (0UL)                     /*!< ADI_GPT0 STATUS: TMOUT (Bit 0)                        */
#define ADI_GPT0_STATUS_TMOUT_Msk         (0x1UL)                   /*!< ADI_GPT0 STATUS: TMOUT (Bitfield-Mask: 0x01)          */
/* ========================================================  PWMCTL  ========================================================= */
#define ADI_GPT0_PWMCTL_IDLE_STATE_Pos    (1UL)                     /*!< ADI_GPT0 PWMCTL: IDLE_STATE (Bit 1)                   */
#define ADI_GPT0_PWMCTL_IDLE_STATE_Msk    (0x2UL)                   /*!< ADI_GPT0 PWMCTL: IDLE_STATE (Bitfield-Mask: 0x01)     */
#define ADI_GPT0_PWMCTL_MATCH_EN_Pos      (0UL)                     /*!< ADI_GPT0 PWMCTL: MATCH_EN (Bit 0)                     */
#define ADI_GPT0_PWMCTL_MATCH_EN_Msk      (0x1UL)                   /*!< ADI_GPT0 PWMCTL: MATCH_EN (Bitfield-Mask: 0x01)       */
/* =======================================================  PWMMATCH  ======================================================== */


/* =========================================================================================================================== */
/* ================                                         ADI_GPT1                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  LOAD  ========================================================== */
/* ========================================================  CURCNT  ========================================================= */
/* ==========================================================  CTL  ========================================================== */
#define ADI_GPT1_CTL_EVENTEN_Pos          (12UL)                    /*!< ADI_GPT1 CTL: EVENTEN (Bit 12)                        */
#define ADI_GPT1_CTL_EVENTEN_Msk          (0x1000UL)                /*!< ADI_GPT1 CTL: EVENTEN (Bitfield-Mask: 0x01)           */
#define ADI_GPT1_CTL_EVENT_Pos            (8UL)                     /*!< ADI_GPT1 CTL: EVENT (Bit 8)                           */
#define ADI_GPT1_CTL_EVENT_Msk            (0xf00UL)                 /*!< ADI_GPT1 CTL: EVENT (Bitfield-Mask: 0x0f)             */
#define ADI_GPT1_CTL_RLD_Pos              (7UL)                     /*!< ADI_GPT1 CTL: RLD (Bit 7)                             */
#define ADI_GPT1_CTL_RLD_Msk              (0x80UL)                  /*!< ADI_GPT1 CTL: RLD (Bitfield-Mask: 0x01)               */
#define ADI_GPT1_CTL_CLK_Pos              (5UL)                     /*!< ADI_GPT1 CTL: CLK (Bit 5)                             */
#define ADI_GPT1_CTL_CLK_Msk              (0x60UL)                  /*!< ADI_GPT1 CTL: CLK (Bitfield-Mask: 0x03)               */
#define ADI_GPT1_CTL_ENABLE_Pos           (4UL)                     /*!< ADI_GPT1 CTL: ENABLE (Bit 4)                          */
#define ADI_GPT1_CTL_ENABLE_Msk           (0x10UL)                  /*!< ADI_GPT1 CTL: ENABLE (Bitfield-Mask: 0x01)            */
#define ADI_GPT1_CTL_MOD_Pos              (3UL)                     /*!< ADI_GPT1 CTL: MOD (Bit 3)                             */
#define ADI_GPT1_CTL_MOD_Msk              (0x8UL)                   /*!< ADI_GPT1 CTL: MOD (Bitfield-Mask: 0x01)               */
#define ADI_GPT1_CTL_UP_Pos               (2UL)                     /*!< ADI_GPT1 CTL: UP (Bit 2)                              */
#define ADI_GPT1_CTL_UP_Msk               (0x4UL)                   /*!< ADI_GPT1 CTL: UP (Bitfield-Mask: 0x01)                */
#define ADI_GPT1_CTL_PRE_Pos              (0UL)                     /*!< ADI_GPT1 CTL: PRE (Bit 0)                             */
#define ADI_GPT1_CTL_PRE_Msk              (0x3UL)                   /*!< ADI_GPT1 CTL: PRE (Bitfield-Mask: 0x03)               */
/* ========================================================  CLRINT  ========================================================= */
#define ADI_GPT1_CLRINT_CAP_Pos           (1UL)                     /*!< ADI_GPT1 CLRINT: CAP (Bit 1)                          */
#define ADI_GPT1_CLRINT_CAP_Msk           (0x2UL)                   /*!< ADI_GPT1 CLRINT: CAP (Bitfield-Mask: 0x01)            */
#define ADI_GPT1_CLRINT_TMOUT_Pos         (0UL)                     /*!< ADI_GPT1 CLRINT: TMOUT (Bit 0)                        */
#define ADI_GPT1_CLRINT_TMOUT_Msk         (0x1UL)                   /*!< ADI_GPT1 CLRINT: TMOUT (Bitfield-Mask: 0x01)          */
/* ========================================================  CAPTURE  ======================================================== */
/* =========================================================  ALOAD  ========================================================= */
/* ========================================================  ACURCNT  ======================================================== */
/* ========================================================  STATUS  ========================================================= */
#define ADI_GPT1_STATUS_PDOK_Pos          (7UL)                     /*!< ADI_GPT1 STATUS: PDOK (Bit 7)                         */
#define ADI_GPT1_STATUS_PDOK_Msk          (0x80UL)                  /*!< ADI_GPT1 STATUS: PDOK (Bitfield-Mask: 0x01)           */
#define ADI_GPT1_STATUS_BUSY_Pos          (6UL)                     /*!< ADI_GPT1 STATUS: BUSY (Bit 6)                         */
#define ADI_GPT1_STATUS_BUSY_Msk          (0x40UL)                  /*!< ADI_GPT1 STATUS: BUSY (Bitfield-Mask: 0x01)           */
#define ADI_GPT1_STATUS_CAP_Pos           (1UL)                     /*!< ADI_GPT1 STATUS: CAP (Bit 1)                          */
#define ADI_GPT1_STATUS_CAP_Msk           (0x2UL)                   /*!< ADI_GPT1 STATUS: CAP (Bitfield-Mask: 0x01)            */
#define ADI_GPT1_STATUS_TMOUT_Pos         (0UL)                     /*!< ADI_GPT1 STATUS: TMOUT (Bit 0)                        */
#define ADI_GPT1_STATUS_TMOUT_Msk         (0x1UL)                   /*!< ADI_GPT1 STATUS: TMOUT (Bitfield-Mask: 0x01)          */
/* ========================================================  PWMCTL  ========================================================= */
#define ADI_GPT1_PWMCTL_IDLE_STATE_Pos    (1UL)                     /*!< ADI_GPT1 PWMCTL: IDLE_STATE (Bit 1)                   */
#define ADI_GPT1_PWMCTL_IDLE_STATE_Msk    (0x2UL)                   /*!< ADI_GPT1 PWMCTL: IDLE_STATE (Bitfield-Mask: 0x01)     */
#define ADI_GPT1_PWMCTL_MATCH_EN_Pos      (0UL)                     /*!< ADI_GPT1 PWMCTL: MATCH_EN (Bit 0)                     */
#define ADI_GPT1_PWMCTL_MATCH_EN_Msk      (0x1UL)                   /*!< ADI_GPT1 PWMCTL: MATCH_EN (Bitfield-Mask: 0x01)       */
/* =======================================================  PWMMATCH  ======================================================== */


/* =========================================================================================================================== */
/* ================                                         ADI_GPT2                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  LOAD  ========================================================== */
/* ========================================================  CURCNT  ========================================================= */
/* ==========================================================  CTL  ========================================================== */
#define ADI_GPT2_CTL_EVENTEN_Pos          (12UL)                    /*!< ADI_GPT2 CTL: EVENTEN (Bit 12)                        */
#define ADI_GPT2_CTL_EVENTEN_Msk          (0x1000UL)                /*!< ADI_GPT2 CTL: EVENTEN (Bitfield-Mask: 0x01)           */
#define ADI_GPT2_CTL_EVENT_Pos            (8UL)                     /*!< ADI_GPT2 CTL: EVENT (Bit 8)                           */
#define ADI_GPT2_CTL_EVENT_Msk            (0xf00UL)                 /*!< ADI_GPT2 CTL: EVENT (Bitfield-Mask: 0x0f)             */
#define ADI_GPT2_CTL_RLD_Pos              (7UL)                     /*!< ADI_GPT2 CTL: RLD (Bit 7)                             */
#define ADI_GPT2_CTL_RLD_Msk              (0x80UL)                  /*!< ADI_GPT2 CTL: RLD (Bitfield-Mask: 0x01)               */
#define ADI_GPT2_CTL_CLK_Pos              (5UL)                     /*!< ADI_GPT2 CTL: CLK (Bit 5)                             */
#define ADI_GPT2_CTL_CLK_Msk              (0x60UL)                  /*!< ADI_GPT2 CTL: CLK (Bitfield-Mask: 0x03)               */
#define ADI_GPT2_CTL_ENABLE_Pos           (4UL)                     /*!< ADI_GPT2 CTL: ENABLE (Bit 4)                          */
#define ADI_GPT2_CTL_ENABLE_Msk           (0x10UL)                  /*!< ADI_GPT2 CTL: ENABLE (Bitfield-Mask: 0x01)            */
#define ADI_GPT2_CTL_MOD_Pos              (3UL)                     /*!< ADI_GPT2 CTL: MOD (Bit 3)                             */
#define ADI_GPT2_CTL_MOD_Msk              (0x8UL)                   /*!< ADI_GPT2 CTL: MOD (Bitfield-Mask: 0x01)               */
#define ADI_GPT2_CTL_UP_Pos               (2UL)                     /*!< ADI_GPT2 CTL: UP (Bit 2)                              */
#define ADI_GPT2_CTL_UP_Msk               (0x4UL)                   /*!< ADI_GPT2 CTL: UP (Bitfield-Mask: 0x01)                */
#define ADI_GPT2_CTL_PRE_Pos              (0UL)                     /*!< ADI_GPT2 CTL: PRE (Bit 0)                             */
#define ADI_GPT2_CTL_PRE_Msk              (0x3UL)                   /*!< ADI_GPT2 CTL: PRE (Bitfield-Mask: 0x03)               */
/* ========================================================  CLRINT  ========================================================= */
#define ADI_GPT2_CLRINT_CAP_Pos           (1UL)                     /*!< ADI_GPT2 CLRINT: CAP (Bit 1)                          */
#define ADI_GPT2_CLRINT_CAP_Msk           (0x2UL)                   /*!< ADI_GPT2 CLRINT: CAP (Bitfield-Mask: 0x01)            */
#define ADI_GPT2_CLRINT_TMOUT_Pos         (0UL)                     /*!< ADI_GPT2 CLRINT: TMOUT (Bit 0)                        */
#define ADI_GPT2_CLRINT_TMOUT_Msk         (0x1UL)                   /*!< ADI_GPT2 CLRINT: TMOUT (Bitfield-Mask: 0x01)          */
/* ========================================================  CAPTURE  ======================================================== */
/* =========================================================  ALOAD  ========================================================= */
/* ========================================================  ACURCNT  ======================================================== */
/* ========================================================  STATUS  ========================================================= */
#define ADI_GPT2_STATUS_PDOK_Pos          (7UL)                     /*!< ADI_GPT2 STATUS: PDOK (Bit 7)                         */
#define ADI_GPT2_STATUS_PDOK_Msk          (0x80UL)                  /*!< ADI_GPT2 STATUS: PDOK (Bitfield-Mask: 0x01)           */
#define ADI_GPT2_STATUS_BUSY_Pos          (6UL)                     /*!< ADI_GPT2 STATUS: BUSY (Bit 6)                         */
#define ADI_GPT2_STATUS_BUSY_Msk          (0x40UL)                  /*!< ADI_GPT2 STATUS: BUSY (Bitfield-Mask: 0x01)           */
#define ADI_GPT2_STATUS_CAP_Pos           (1UL)                     /*!< ADI_GPT2 STATUS: CAP (Bit 1)                          */
#define ADI_GPT2_STATUS_CAP_Msk           (0x2UL)                   /*!< ADI_GPT2 STATUS: CAP (Bitfield-Mask: 0x01)            */
#define ADI_GPT2_STATUS_TMOUT_Pos         (0UL)                     /*!< ADI_GPT2 STATUS: TMOUT (Bit 0)                        */
#define ADI_GPT2_STATUS_TMOUT_Msk         (0x1UL)                   /*!< ADI_GPT2 STATUS: TMOUT (Bitfield-Mask: 0x01)          */
/* ========================================================  PWMCTL  ========================================================= */
#define ADI_GPT2_PWMCTL_IDLE_STATE_Pos    (1UL)                     /*!< ADI_GPT2 PWMCTL: IDLE_STATE (Bit 1)                   */
#define ADI_GPT2_PWMCTL_IDLE_STATE_Msk    (0x2UL)                   /*!< ADI_GPT2 PWMCTL: IDLE_STATE (Bitfield-Mask: 0x01)     */
#define ADI_GPT2_PWMCTL_MATCH_EN_Pos      (0UL)                     /*!< ADI_GPT2 PWMCTL: MATCH_EN (Bit 0)                     */
#define ADI_GPT2_PWMCTL_MATCH_EN_Msk      (0x1UL)                   /*!< ADI_GPT2 PWMCTL: MATCH_EN (Bitfield-Mask: 0x01)       */
/* =======================================================  PWMMATCH  ======================================================== */


/* =========================================================================================================================== */
/* ================                                          ADI_ID                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  ADIID  ========================================================= */
/* ========================================================  CHIPID  ========================================================= */


/* =========================================================================================================================== */
/* ================                                          ADI_PWR                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  PWRMOD  ========================================================= */
#define ADI_PWR_PWRMOD_RAM0_RET_Pos       (15UL)                    /*!< ADI_PWR PWRMOD: RAM0_RET (Bit 15)                     */
#define ADI_PWR_PWRMOD_RAM0_RET_Msk       (0x8000UL)                /*!< ADI_PWR PWRMOD: RAM0_RET (Bitfield-Mask: 0x01)        */
#define ADI_PWR_PWRMOD_WICENACK_Pos       (3UL)                     /*!< ADI_PWR PWRMOD: WICENACK (Bit 3)                      */
#define ADI_PWR_PWRMOD_WICENACK_Msk       (0x8UL)                   /*!< ADI_PWR PWRMOD: WICENACK (Bitfield-Mask: 0x01)        */
#define ADI_PWR_PWRMOD_PWRMOD_Pos         (0UL)                     /*!< ADI_PWR PWRMOD: PWRMOD (Bit 0)                        */
#define ADI_PWR_PWRMOD_PWRMOD_Msk         (0x3UL)                   /*!< ADI_PWR PWRMOD: PWRMOD (Bitfield-Mask: 0x03)          */
/* ========================================================  PWRKEY  ========================================================= */
#define ADI_PWR_PWRKEY_KEY_Pos            (0UL)                     /*!< ADI_PWR PWRKEY: KEY (Bit 0)                           */
#define ADI_PWR_PWRKEY_KEY_Msk            (0xffffUL)                /*!< ADI_PWR PWRKEY: KEY (Bitfield-Mask: 0xffff)           */
/* ========================================================  PSMCON  ========================================================= */
#define ADI_PWR_PSMCON_VCCMPSMSTAT_Pos    (7UL)                     /*!< ADI_PWR PSMCON: VCCMPSMSTAT (Bit 7)                   */
#define ADI_PWR_PSMCON_VCCMPSMSTAT_Msk    (0x80UL)                  /*!< ADI_PWR PSMCON: VCCMPSMSTAT (Bitfield-Mask: 0x01)     */
#define ADI_PWR_PSMCON_VCCMPSMFLG_Pos     (6UL)                     /*!< ADI_PWR PSMCON: VCCMPSMFLG (Bit 6)                    */
#define ADI_PWR_PSMCON_VCCMPSMFLG_Msk     (0x40UL)                  /*!< ADI_PWR PSMCON: VCCMPSMFLG (Bitfield-Mask: 0x01)      */
#define ADI_PWR_PSMCON_VCCMPSMIRQ_Pos     (4UL)                     /*!< ADI_PWR PSMCON: VCCMPSMIRQ (Bit 4)                    */
#define ADI_PWR_PSMCON_VCCMPSMIRQ_Msk     (0x10UL)                  /*!< ADI_PWR PSMCON: VCCMPSMIRQ (Bitfield-Mask: 0x01)      */
#define ADI_PWR_PSMCON_DVDDPSMSTAT_Pos    (3UL)                     /*!< ADI_PWR PSMCON: DVDDPSMSTAT (Bit 3)                   */
#define ADI_PWR_PSMCON_DVDDPSMSTAT_Msk    (0x8UL)                   /*!< ADI_PWR PSMCON: DVDDPSMSTAT (Bitfield-Mask: 0x01)     */
#define ADI_PWR_PSMCON_DVDDPSMFLG_Pos     (2UL)                     /*!< ADI_PWR PSMCON: DVDDPSMFLG (Bit 2)                    */
#define ADI_PWR_PSMCON_DVDDPSMFLG_Msk     (0x4UL)                   /*!< ADI_PWR PSMCON: DVDDPSMFLG (Bitfield-Mask: 0x01)      */
#define ADI_PWR_PSMCON_DVDDPSMIRQ_Pos     (0UL)                     /*!< ADI_PWR PSMCON: DVDDPSMIRQ (Bit 0)                    */
#define ADI_PWR_PSMCON_DVDDPSMIRQ_Msk     (0x1UL)                   /*!< ADI_PWR PSMCON: DVDDPSMIRQ (Bitfield-Mask: 0x01)      */
/* ========================================================  OSCKEY  ========================================================= */
#define ADI_PWR_OSCKEY_VALUE_Pos          (0UL)                     /*!< ADI_PWR OSCKEY: VALUE (Bit 0)                         */
#define ADI_PWR_OSCKEY_VALUE_Msk          (0xffffUL)                /*!< ADI_PWR OSCKEY: VALUE (Bitfield-Mask: 0xffff)         */
/* ========================================================  OSCCTRL  ======================================================== */


/* =========================================================================================================================== */
/* ================                                          ADI_EI                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  EI0CFG  ========================================================= */
#define ADI_EI_EI0CFG_IRQ3EN_Pos          (15UL)                    /*!< ADI_EI EI0CFG: IRQ3EN (Bit 15)                        */
#define ADI_EI_EI0CFG_IRQ3EN_Msk          (0x8000UL)                /*!< ADI_EI EI0CFG: IRQ3EN (Bitfield-Mask: 0x01)           */
#define ADI_EI_EI0CFG_IRQ3MDE_Pos         (12UL)                    /*!< ADI_EI EI0CFG: IRQ3MDE (Bit 12)                       */
#define ADI_EI_EI0CFG_IRQ3MDE_Msk         (0x7000UL)                /*!< ADI_EI EI0CFG: IRQ3MDE (Bitfield-Mask: 0x07)          */
#define ADI_EI_EI0CFG_IRQ2EN_Pos          (11UL)                    /*!< ADI_EI EI0CFG: IRQ2EN (Bit 11)                        */
#define ADI_EI_EI0CFG_IRQ2EN_Msk          (0x800UL)                 /*!< ADI_EI EI0CFG: IRQ2EN (Bitfield-Mask: 0x01)           */
#define ADI_EI_EI0CFG_IRQ2MDE_Pos         (8UL)                     /*!< ADI_EI EI0CFG: IRQ2MDE (Bit 8)                        */
#define ADI_EI_EI0CFG_IRQ2MDE_Msk         (0x100UL)                 /*!< ADI_EI EI0CFG: IRQ2MDE (Bitfield-Mask: 0x01)          */
#define ADI_EI_EI0CFG_IRQ1EN_Pos          (7UL)                     /*!< ADI_EI EI0CFG: IRQ1EN (Bit 7)                         */
#define ADI_EI_EI0CFG_IRQ1EN_Msk          (0x80UL)                  /*!< ADI_EI EI0CFG: IRQ1EN (Bitfield-Mask: 0x01)           */
#define ADI_EI_EI0CFG_IRQ1MDE_Pos         (4UL)                     /*!< ADI_EI EI0CFG: IRQ1MDE (Bit 4)                        */
#define ADI_EI_EI0CFG_IRQ1MDE_Msk         (0x10UL)                  /*!< ADI_EI EI0CFG: IRQ1MDE (Bitfield-Mask: 0x01)          */
#define ADI_EI_EI0CFG_IRQOEN_Pos          (3UL)                     /*!< ADI_EI EI0CFG: IRQOEN (Bit 3)                         */
#define ADI_EI_EI0CFG_IRQOEN_Msk          (0x8UL)                   /*!< ADI_EI EI0CFG: IRQOEN (Bitfield-Mask: 0x01)           */
#define ADI_EI_EI0CFG_IRQ0MDE_Pos         (0UL)                     /*!< ADI_EI EI0CFG: IRQ0MDE (Bit 0)                        */
#define ADI_EI_EI0CFG_IRQ0MDE_Msk         (0x1UL)                   /*!< ADI_EI EI0CFG: IRQ0MDE (Bitfield-Mask: 0x01)          */
/* ========================================================  EI1CFG  ========================================================= */
#define ADI_EI_EI1CFG_IRQ7EN_Pos          (15UL)                    /*!< ADI_EI EI1CFG: IRQ7EN (Bit 15)                        */
#define ADI_EI_EI1CFG_IRQ7EN_Msk          (0x8000UL)                /*!< ADI_EI EI1CFG: IRQ7EN (Bitfield-Mask: 0x01)           */
#define ADI_EI_EI1CFG_IRQ7MDE_Pos         (12UL)                    /*!< ADI_EI EI1CFG: IRQ7MDE (Bit 12)                       */
#define ADI_EI_EI1CFG_IRQ7MDE_Msk         (0x1000UL)                /*!< ADI_EI EI1CFG: IRQ7MDE (Bitfield-Mask: 0x01)          */
#define ADI_EI_EI1CFG_IRQ6EN_Pos          (11UL)                    /*!< ADI_EI EI1CFG: IRQ6EN (Bit 11)                        */
#define ADI_EI_EI1CFG_IRQ6EN_Msk          (0x800UL)                 /*!< ADI_EI EI1CFG: IRQ6EN (Bitfield-Mask: 0x01)           */
#define ADI_EI_EI1CFG_IRQ6MDE_Pos         (8UL)                     /*!< ADI_EI EI1CFG: IRQ6MDE (Bit 8)                        */
#define ADI_EI_EI1CFG_IRQ6MDE_Msk         (0x100UL)                 /*!< ADI_EI EI1CFG: IRQ6MDE (Bitfield-Mask: 0x01)          */
#define ADI_EI_EI1CFG_IRQ5EN_Pos          (7UL)                     /*!< ADI_EI EI1CFG: IRQ5EN (Bit 7)                         */
#define ADI_EI_EI1CFG_IRQ5EN_Msk          (0x80UL)                  /*!< ADI_EI EI1CFG: IRQ5EN (Bitfield-Mask: 0x01)           */
#define ADI_EI_EI1CFG_IRQ5MDE_Pos         (4UL)                     /*!< ADI_EI EI1CFG: IRQ5MDE (Bit 4)                        */
#define ADI_EI_EI1CFG_IRQ5MDE_Msk         (0x10UL)                  /*!< ADI_EI EI1CFG: IRQ5MDE (Bitfield-Mask: 0x01)          */
#define ADI_EI_EI1CFG_IRQ4EN_Pos          (3UL)                     /*!< ADI_EI EI1CFG: IRQ4EN (Bit 3)                         */
#define ADI_EI_EI1CFG_IRQ4EN_Msk          (0x8UL)                   /*!< ADI_EI EI1CFG: IRQ4EN (Bitfield-Mask: 0x01)           */
#define ADI_EI_EI1CFG_IRQ4MDE_Pos         (0UL)                     /*!< ADI_EI EI1CFG: IRQ4MDE (Bit 0)                        */
#define ADI_EI_EI1CFG_IRQ4MDE_Msk         (0x1UL)                   /*!< ADI_EI EI1CFG: IRQ4MDE (Bitfield-Mask: 0x01)          */
/* ========================================================  EI2CFG  ========================================================= */
#define ADI_EI_EI2CFG_USBVBUSEN_Pos       (15UL)                    /*!< ADI_EI EI2CFG: USBVBUSEN (Bit 15)                     */
#define ADI_EI_EI2CFG_USBVBUSEN_Msk       (0x8000UL)                /*!< ADI_EI EI2CFG: USBVBUSEN (Bitfield-Mask: 0x01)        */
#define ADI_EI_EI2CFG_USBVBUSMDE_Pos      (12UL)                    /*!< ADI_EI EI2CFG: USBVBUSMDE (Bit 12)                    */
#define ADI_EI_EI2CFG_USBVBUSMDE_Msk      (0x1000UL)                /*!< ADI_EI EI2CFG: USBVBUSMDE (Bitfield-Mask: 0x01)       */
#define ADI_EI_EI2CFG_USBDMEN_Pos         (11UL)                    /*!< ADI_EI EI2CFG: USBDMEN (Bit 11)                       */
#define ADI_EI_EI2CFG_USBDMEN_Msk         (0x800UL)                 /*!< ADI_EI EI2CFG: USBDMEN (Bitfield-Mask: 0x01)          */
#define ADI_EI_EI2CFG_USBDMMDE_Pos        (8UL)                     /*!< ADI_EI EI2CFG: USBDMMDE (Bit 8)                       */
#define ADI_EI_EI2CFG_USBDMMDE_Msk        (0x100UL)                 /*!< ADI_EI EI2CFG: USBDMMDE (Bitfield-Mask: 0x01)         */
#define ADI_EI_EI2CFG_USBDPEN_Pos         (7UL)                     /*!< ADI_EI EI2CFG: USBDPEN (Bit 7)                        */
#define ADI_EI_EI2CFG_USBDPEN_Msk         (0x80UL)                  /*!< ADI_EI EI2CFG: USBDPEN (Bitfield-Mask: 0x01)          */
#define ADI_EI_EI2CFG_USBDPMDE_Pos        (4UL)                     /*!< ADI_EI EI2CFG: USBDPMDE (Bit 4)                       */
#define ADI_EI_EI2CFG_USBDPMDE_Msk        (0x10UL)                  /*!< ADI_EI EI2CFG: USBDPMDE (Bitfield-Mask: 0x01)         */
#define ADI_EI_EI2CFG_IRQ8EN_Pos          (3UL)                     /*!< ADI_EI EI2CFG: IRQ8EN (Bit 3)                         */
#define ADI_EI_EI2CFG_IRQ8EN_Msk          (0x8UL)                   /*!< ADI_EI EI2CFG: IRQ8EN (Bitfield-Mask: 0x01)           */
#define ADI_EI_EI2CFG_IRQ8MDE_Pos         (0UL)                     /*!< ADI_EI EI2CFG: IRQ8MDE (Bit 0)                        */
#define ADI_EI_EI2CFG_IRQ8MDE_Msk         (0x1UL)                   /*!< ADI_EI EI2CFG: IRQ8MDE (Bitfield-Mask: 0x01)          */
/* =========================================================  EICLR  ========================================================= */
#define ADI_EI_EICLR_USBVBUS_Pos          (11UL)                    /*!< ADI_EI EICLR: USBVBUS (Bit 11)                        */
#define ADI_EI_EICLR_USBVBUS_Msk          (0x800UL)                 /*!< ADI_EI EICLR: USBVBUS (Bitfield-Mask: 0x01)           */
#define ADI_EI_EICLR_USBDM_Pos            (10UL)                    /*!< ADI_EI EICLR: USBDM (Bit 10)                          */
#define ADI_EI_EICLR_USBDM_Msk            (0x400UL)                 /*!< ADI_EI EICLR: USBDM (Bitfield-Mask: 0x01)             */
#define ADI_EI_EICLR_USBDP_Pos            (9UL)                     /*!< ADI_EI EICLR: USBDP (Bit 9)                           */
#define ADI_EI_EICLR_USBDP_Msk            (0x200UL)                 /*!< ADI_EI EICLR: USBDP (Bitfield-Mask: 0x01)             */
#define ADI_EI_EICLR_IRQ8_Pos             (8UL)                     /*!< ADI_EI EICLR: IRQ8 (Bit 8)                            */
#define ADI_EI_EICLR_IRQ8_Msk             (0x100UL)                 /*!< ADI_EI EICLR: IRQ8 (Bitfield-Mask: 0x01)              */
#define ADI_EI_EICLR_IRQ7_Pos             (7UL)                     /*!< ADI_EI EICLR: IRQ7 (Bit 7)                            */
#define ADI_EI_EICLR_IRQ7_Msk             (0x80UL)                  /*!< ADI_EI EICLR: IRQ7 (Bitfield-Mask: 0x01)              */
#define ADI_EI_EICLR_IRQ6_Pos             (6UL)                     /*!< ADI_EI EICLR: IRQ6 (Bit 6)                            */
#define ADI_EI_EICLR_IRQ6_Msk             (0x40UL)                  /*!< ADI_EI EICLR: IRQ6 (Bitfield-Mask: 0x01)              */
#define ADI_EI_EICLR_IRQ5_Pos             (5UL)                     /*!< ADI_EI EICLR: IRQ5 (Bit 5)                            */
#define ADI_EI_EICLR_IRQ5_Msk             (0x20UL)                  /*!< ADI_EI EICLR: IRQ5 (Bitfield-Mask: 0x01)              */
#define ADI_EI_EICLR_IRQ4_Pos             (4UL)                     /*!< ADI_EI EICLR: IRQ4 (Bit 4)                            */
#define ADI_EI_EICLR_IRQ4_Msk             (0x10UL)                  /*!< ADI_EI EICLR: IRQ4 (Bitfield-Mask: 0x01)              */
#define ADI_EI_EICLR_IRQ3_Pos             (3UL)                     /*!< ADI_EI EICLR: IRQ3 (Bit 3)                            */
#define ADI_EI_EICLR_IRQ3_Msk             (0x8UL)                   /*!< ADI_EI EICLR: IRQ3 (Bitfield-Mask: 0x01)              */
#define ADI_EI_EICLR_IRQ2_Pos             (2UL)                     /*!< ADI_EI EICLR: IRQ2 (Bit 2)                            */
#define ADI_EI_EICLR_IRQ2_Msk             (0x4UL)                   /*!< ADI_EI EICLR: IRQ2 (Bitfield-Mask: 0x01)              */
#define ADI_EI_EICLR_IRQ1_Pos             (1UL)                     /*!< ADI_EI EICLR: IRQ1 (Bit 1)                            */
#define ADI_EI_EICLR_IRQ1_Msk             (0x2UL)                   /*!< ADI_EI EICLR: IRQ1 (Bitfield-Mask: 0x01)              */
#define ADI_EI_EICLR_IRQ0_Pos             (0UL)                     /*!< ADI_EI EICLR: IRQ0 (Bit 0)                            */
#define ADI_EI_EICLR_IRQ0_Msk             (0x1UL)                   /*!< ADI_EI EICLR: IRQ0 (Bitfield-Mask: 0x01)              */
/* ========================================================  NMICLR  ========================================================= */
#define ADI_EI_NMICLR_CLEAR_Pos           (0UL)                     /*!< ADI_EI NMICLR: CLEAR (Bit 0)                          */
#define ADI_EI_NMICLR_CLEAR_Msk           (0x1UL)                   /*!< ADI_EI NMICLR: CLEAR (Bitfield-Mask: 0x01)            */
/* =======================================================  USBWKSTAT  ======================================================= */
#define ADI_EI_USBWKSTAT_USBVBUS_Pos      (2UL)                     /*!< ADI_EI USBWKSTAT: USBVBUS (Bit 2)                     */
#define ADI_EI_USBWKSTAT_USBVBUS_Msk      (0x4UL)                   /*!< ADI_EI USBWKSTAT: USBVBUS (Bitfield-Mask: 0x01)       */
#define ADI_EI_USBWKSTAT_USBDM_Pos        (1UL)                     /*!< ADI_EI USBWKSTAT: USBDM (Bit 1)                       */
#define ADI_EI_USBWKSTAT_USBDM_Msk        (0x2UL)                   /*!< ADI_EI USBWKSTAT: USBDM (Bitfield-Mask: 0x01)         */
#define ADI_EI_USBWKSTAT_USBDP_Pos        (0UL)                     /*!< ADI_EI USBWKSTAT: USBDP (Bit 0)                       */
#define ADI_EI_USBWKSTAT_USBDP_Msk        (0x1UL)                   /*!< ADI_EI USBWKSTAT: USBDP (Bitfield-Mask: 0x01)         */
/* ========================================================  RSTSTA  ========================================================= */
#define ADI_EI_RSTSTA_SWRST_Pos           (3UL)                     /*!< ADI_EI RSTSTA: SWRST (Bit 3)                          */
#define ADI_EI_RSTSTA_SWRST_Msk           (0x8UL)                   /*!< ADI_EI RSTSTA: SWRST (Bitfield-Mask: 0x01)            */
#define ADI_EI_RSTSTA_WDRST_Pos           (2UL)                     /*!< ADI_EI RSTSTA: WDRST (Bit 2)                          */
#define ADI_EI_RSTSTA_WDRST_Msk           (0x4UL)                   /*!< ADI_EI RSTSTA: WDRST (Bitfield-Mask: 0x01)            */
#define ADI_EI_RSTSTA_EXTRST_Pos          (1UL)                     /*!< ADI_EI RSTSTA: EXTRST (Bit 1)                         */
#define ADI_EI_RSTSTA_EXTRST_Msk          (0x2UL)                   /*!< ADI_EI RSTSTA: EXTRST (Bitfield-Mask: 0x01)           */
#define ADI_EI_RSTSTA_POR_Pos             (0UL)                     /*!< ADI_EI RSTSTA: POR (Bit 0)                            */
#define ADI_EI_RSTSTA_POR_Msk             (0x1UL)                   /*!< ADI_EI RSTSTA: POR (Bitfield-Mask: 0x01)              */


/* =========================================================================================================================== */
/* ================                                        ADI_PWRVCC                                         ================ */
/* =========================================================================================================================== */

/* ========================================================  VCCMCON  ======================================================== */
#define ADI_PWRVCC_VCCMCON_VCCMTHR_HYST_Pos (8UL)                   /*!< ADI_PWRVCC VCCMCON: VCCMTHR_HYST (Bit 8)              */
#define ADI_PWRVCC_VCCMCON_VCCMTHR_HYST_Msk (0x300UL)               /*!< ADI_PWRVCC VCCMCON: VCCMTHR_HYST (Bitfield-Mask: 0x03) */
#define ADI_PWRVCC_VCCMCON_VCCMTHR_Pos    (4UL)                     /*!< ADI_PWRVCC VCCMCON: VCCMTHR (Bit 4)                   */
#define ADI_PWRVCC_VCCMCON_VCCMTHR_Msk    (0xf0UL)                  /*!< ADI_PWRVCC VCCMCON: VCCMTHR (Bitfield-Mask: 0x0f)     */
#define ADI_PWRVCC_VCCMCON_VCCMPSMEN_Pos  (1UL)                     /*!< ADI_PWRVCC VCCMCON: VCCMPSMEN (Bit 1)                 */
#define ADI_PWRVCC_VCCMCON_VCCMPSMEN_Msk  (0x2UL)                   /*!< ADI_PWRVCC VCCMCON: VCCMPSMEN (Bitfield-Mask: 0x01)   */
#define ADI_PWRVCC_VCCMCON_LOADENABLE_Pos (0UL)                     /*!< ADI_PWRVCC VCCMCON: LOADENABLE (Bit 0)                */
#define ADI_PWRVCC_VCCMCON_LOADENABLE_Msk (0x1UL)                   /*!< ADI_PWRVCC VCCMCON: LOADENABLE (Bitfield-Mask: 0x01)  */
/* =======================================================  VBACKCON  ======================================================== */
#define ADI_PWRVCC_VBACKCON_VBACKTRIP_Pos (8UL)                     /*!< ADI_PWRVCC VBACKCON: VBACKTRIP (Bit 8)                */
#define ADI_PWRVCC_VBACKCON_VBACKTRIP_Msk (0x100UL)                 /*!< ADI_PWRVCC VBACKCON: VBACKTRIP (Bitfield-Mask: 0x01)  */
#define ADI_PWRVCC_VBACKCON_VLTRIP_Pos    (6UL)                     /*!< ADI_PWRVCC VBACKCON: VLTRIP (Bit 6)                   */
#define ADI_PWRVCC_VBACKCON_VLTRIP_Msk    (0x40UL)                  /*!< ADI_PWRVCC VBACKCON: VLTRIP (Bitfield-Mask: 0x01)     */
#define ADI_PWRVCC_VBACKCON_VLOTRIP_Pos   (4UL)                     /*!< ADI_PWRVCC VBACKCON: VLOTRIP (Bit 4)                  */
#define ADI_PWRVCC_VBACKCON_VLOTRIP_Msk   (0x10UL)                  /*!< ADI_PWRVCC VBACKCON: VLOTRIP (Bitfield-Mask: 0x01)    */
#define ADI_PWRVCC_VBACKCON_VBACKRESTORE_Pos (0UL)                  /*!< ADI_PWRVCC VBACKCON: VBACKRESTORE (Bit 0)             */
#define ADI_PWRVCC_VBACKCON_VBACKRESTORE_Msk (0x1UL)                /*!< ADI_PWRVCC VBACKCON: VBACKRESTORE (Bitfield-Mask: 0x01) */


/* =========================================================================================================================== */
/* ================                                          ADI_WUT                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  T2VAL0  ========================================================= */
/* ========================================================  T2VAL1  ========================================================= */
/* =========================================================  T2CON  ========================================================= */
#define ADI_WUT_T2CON_STOP_Pos            (11UL)                    /*!< ADI_WUT T2CON: STOP (Bit 11)                          */
#define ADI_WUT_T2CON_STOP_Msk            (0x800UL)                 /*!< ADI_WUT T2CON: STOP (Bitfield-Mask: 0x01)             */
#define ADI_WUT_T2CON_CLK_Pos             (9UL)                     /*!< ADI_WUT T2CON: CLK (Bit 9)                            */
#define ADI_WUT_T2CON_CLK_Msk             (0x600UL)                 /*!< ADI_WUT T2CON: CLK (Bitfield-Mask: 0x03)              */
#define ADI_WUT_T2CON_WUEN_Pos            (8UL)                     /*!< ADI_WUT T2CON: WUEN (Bit 8)                           */
#define ADI_WUT_T2CON_WUEN_Msk            (0x100UL)                 /*!< ADI_WUT T2CON: WUEN (Bitfield-Mask: 0x01)             */
#define ADI_WUT_T2CON_ENABLE_Pos          (7UL)                     /*!< ADI_WUT T2CON: ENABLE (Bit 7)                         */
#define ADI_WUT_T2CON_ENABLE_Msk          (0x80UL)                  /*!< ADI_WUT T2CON: ENABLE (Bitfield-Mask: 0x01)           */
#define ADI_WUT_T2CON_MOD_Pos             (6UL)                     /*!< ADI_WUT T2CON: MOD (Bit 6)                            */
#define ADI_WUT_T2CON_MOD_Msk             (0x40UL)                  /*!< ADI_WUT T2CON: MOD (Bitfield-Mask: 0x01)              */
#define ADI_WUT_T2CON_FREEZE_Pos          (3UL)                     /*!< ADI_WUT T2CON: FREEZE (Bit 3)                         */
#define ADI_WUT_T2CON_FREEZE_Msk          (0x8UL)                   /*!< ADI_WUT T2CON: FREEZE (Bitfield-Mask: 0x01)           */
#define ADI_WUT_T2CON_PRE_Pos             (0UL)                     /*!< ADI_WUT T2CON: PRE (Bit 0)                            */
#define ADI_WUT_T2CON_PRE_Msk             (0x3UL)                   /*!< ADI_WUT T2CON: PRE (Bitfield-Mask: 0x03)              */
/* =========================================================  T2INC  ========================================================= */
#define ADI_WUT_T2INC_INTERVAL_Pos        (0UL)                     /*!< ADI_WUT T2INC: INTERVAL (Bit 0)                       */
#define ADI_WUT_T2INC_INTERVAL_Msk        (0x7ffUL)                 /*!< ADI_WUT T2INC: INTERVAL (Bitfield-Mask: 0x7ff)        */
/* ========================================================  T2WUFB0  ======================================================== */
/* ========================================================  T2WUFB1  ======================================================== */
/* ========================================================  T2WUFC0  ======================================================== */
/* ========================================================  T2WUFC1  ======================================================== */
/* ========================================================  T2WUFD0  ======================================================== */
/* ========================================================  T2WUFD1  ======================================================== */
/* =========================================================  T2IEN  ========================================================= */
#define ADI_WUT_T2IEN_ROLL_Pos            (4UL)                     /*!< ADI_WUT T2IEN: ROLL (Bit 4)                           */
#define ADI_WUT_T2IEN_ROLL_Msk            (0x10UL)                  /*!< ADI_WUT T2IEN: ROLL (Bitfield-Mask: 0x01)             */
#define ADI_WUT_T2IEN_WUFD_Pos            (3UL)                     /*!< ADI_WUT T2IEN: WUFD (Bit 3)                           */
#define ADI_WUT_T2IEN_WUFD_Msk            (0x8UL)                   /*!< ADI_WUT T2IEN: WUFD (Bitfield-Mask: 0x01)             */
#define ADI_WUT_T2IEN_WUFC_Pos            (2UL)                     /*!< ADI_WUT T2IEN: WUFC (Bit 2)                           */
#define ADI_WUT_T2IEN_WUFC_Msk            (0x4UL)                   /*!< ADI_WUT T2IEN: WUFC (Bitfield-Mask: 0x01)             */
#define ADI_WUT_T2IEN_WUFB_Pos            (1UL)                     /*!< ADI_WUT T2IEN: WUFB (Bit 1)                           */
#define ADI_WUT_T2IEN_WUFB_Msk            (0x2UL)                   /*!< ADI_WUT T2IEN: WUFB (Bitfield-Mask: 0x01)             */
#define ADI_WUT_T2IEN_WUFA_Pos            (0UL)                     /*!< ADI_WUT T2IEN: WUFA (Bit 0)                           */
#define ADI_WUT_T2IEN_WUFA_Msk            (0x1UL)                   /*!< ADI_WUT T2IEN: WUFA (Bitfield-Mask: 0x01)             */
/* =========================================================  T2STA  ========================================================= */
#define ADI_WUT_T2STA_PDOK_Pos            (8UL)                     /*!< ADI_WUT T2STA: PDOK (Bit 8)                           */
#define ADI_WUT_T2STA_PDOK_Msk            (0x100UL)                 /*!< ADI_WUT T2STA: PDOK (Bitfield-Mask: 0x01)             */
#define ADI_WUT_T2STA_FREEZE_Pos          (7UL)                     /*!< ADI_WUT T2STA: FREEZE (Bit 7)                         */
#define ADI_WUT_T2STA_FREEZE_Msk          (0x80UL)                  /*!< ADI_WUT T2STA: FREEZE (Bitfield-Mask: 0x01)           */
#define ADI_WUT_T2STA_IRQCRY_Pos          (6UL)                     /*!< ADI_WUT T2STA: IRQCRY (Bit 6)                         */
#define ADI_WUT_T2STA_IRQCRY_Msk          (0x40UL)                  /*!< ADI_WUT T2STA: IRQCRY (Bitfield-Mask: 0x01)           */
#define ADI_WUT_T2STA_ROLL_Pos            (4UL)                     /*!< ADI_WUT T2STA: ROLL (Bit 4)                           */
#define ADI_WUT_T2STA_ROLL_Msk            (0x10UL)                  /*!< ADI_WUT T2STA: ROLL (Bitfield-Mask: 0x01)             */
#define ADI_WUT_T2STA_WUFD_Pos            (3UL)                     /*!< ADI_WUT T2STA: WUFD (Bit 3)                           */
#define ADI_WUT_T2STA_WUFD_Msk            (0x8UL)                   /*!< ADI_WUT T2STA: WUFD (Bitfield-Mask: 0x01)             */
#define ADI_WUT_T2STA_WUFC_Pos            (2UL)                     /*!< ADI_WUT T2STA: WUFC (Bit 2)                           */
#define ADI_WUT_T2STA_WUFC_Msk            (0x4UL)                   /*!< ADI_WUT T2STA: WUFC (Bitfield-Mask: 0x01)             */
#define ADI_WUT_T2STA_WUFB_Pos            (1UL)                     /*!< ADI_WUT T2STA: WUFB (Bit 1)                           */
#define ADI_WUT_T2STA_WUFB_Msk            (0x2UL)                   /*!< ADI_WUT T2STA: WUFB (Bitfield-Mask: 0x01)             */
#define ADI_WUT_T2STA_WUFA_Pos            (0UL)                     /*!< ADI_WUT T2STA: WUFA (Bit 0)                           */
#define ADI_WUT_T2STA_WUFA_Msk            (0x1UL)                   /*!< ADI_WUT T2STA: WUFA (Bitfield-Mask: 0x01)             */
/* ========================================================  T2CLRI  ========================================================= */
#define ADI_WUT_T2CLRI_ROLL_Pos           (4UL)                     /*!< ADI_WUT T2CLRI: ROLL (Bit 4)                          */
#define ADI_WUT_T2CLRI_ROLL_Msk           (0x10UL)                  /*!< ADI_WUT T2CLRI: ROLL (Bitfield-Mask: 0x01)            */
#define ADI_WUT_T2CLRI_WUFD_Pos           (3UL)                     /*!< ADI_WUT T2CLRI: WUFD (Bit 3)                          */
#define ADI_WUT_T2CLRI_WUFD_Msk           (0x8UL)                   /*!< ADI_WUT T2CLRI: WUFD (Bitfield-Mask: 0x01)            */
#define ADI_WUT_T2CLRI_WUFC_Pos           (2UL)                     /*!< ADI_WUT T2CLRI: WUFC (Bit 2)                          */
#define ADI_WUT_T2CLRI_WUFC_Msk           (0x4UL)                   /*!< ADI_WUT T2CLRI: WUFC (Bitfield-Mask: 0x01)            */
#define ADI_WUT_T2CLRI_WUFB_Pos           (1UL)                     /*!< ADI_WUT T2CLRI: WUFB (Bit 1)                          */
#define ADI_WUT_T2CLRI_WUFB_Msk           (0x2UL)                   /*!< ADI_WUT T2CLRI: WUFB (Bitfield-Mask: 0x01)            */
#define ADI_WUT_T2CLRI_WUFA_Pos           (0UL)                     /*!< ADI_WUT T2CLRI: WUFA (Bit 0)                          */
#define ADI_WUT_T2CLRI_WUFA_Msk           (0x1UL)                   /*!< ADI_WUT T2CLRI: WUFA (Bitfield-Mask: 0x01)            */
/* ======================================================  WUTVAL_LOW  ======================================================= */
/* ======================================================  WUTVAL_HIGH  ====================================================== */
/* ========================================================  T2WUFA0  ======================================================== */
/* ========================================================  T2WUFA1  ======================================================== */


/* =========================================================================================================================== */
/* ================                                          ADI_WDT                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  T3LD  ========================================================== */
/* =========================================================  T3VAL  ========================================================= */
/* =========================================================  T3CON  ========================================================= */
#define ADI_WDT_T3CON_MOD_Pos             (6UL)                     /*!< ADI_WDT T3CON: MOD (Bit 6)                            */
#define ADI_WDT_T3CON_MOD_Msk             (0x40UL)                  /*!< ADI_WDT T3CON: MOD (Bitfield-Mask: 0x01)              */
#define ADI_WDT_T3CON_ENABLE_Pos          (5UL)                     /*!< ADI_WDT T3CON: ENABLE (Bit 5)                         */
#define ADI_WDT_T3CON_ENABLE_Msk          (0x20UL)                  /*!< ADI_WDT T3CON: ENABLE (Bitfield-Mask: 0x01)           */
#define ADI_WDT_T3CON_PRE_Pos             (2UL)                     /*!< ADI_WDT T3CON: PRE (Bit 2)                            */
#define ADI_WDT_T3CON_PRE_Msk             (0xcUL)                   /*!< ADI_WDT T3CON: PRE (Bitfield-Mask: 0x03)              */
#define ADI_WDT_T3CON_IRQ_Pos             (1UL)                     /*!< ADI_WDT T3CON: IRQ (Bit 1)                            */
#define ADI_WDT_T3CON_IRQ_Msk             (0x2UL)                   /*!< ADI_WDT T3CON: IRQ (Bitfield-Mask: 0x01)              */
#define ADI_WDT_T3CON_PMD_Pos             (0UL)                     /*!< ADI_WDT T3CON: PMD (Bit 0)                            */
#define ADI_WDT_T3CON_PMD_Msk             (0x1UL)                   /*!< ADI_WDT T3CON: PMD (Bitfield-Mask: 0x01)              */
/* ========================================================  T3CLRI  ========================================================= */
/* =========================================================  T3STA  ========================================================= */
#define ADI_WDT_T3STA_LOCK_Pos            (4UL)                     /*!< ADI_WDT T3STA: LOCK (Bit 4)                           */
#define ADI_WDT_T3STA_LOCK_Msk            (0x10UL)                  /*!< ADI_WDT T3STA: LOCK (Bitfield-Mask: 0x01)             */
#define ADI_WDT_T3STA_CON_Pos             (3UL)                     /*!< ADI_WDT T3STA: CON (Bit 3)                            */
#define ADI_WDT_T3STA_CON_Msk             (0x8UL)                   /*!< ADI_WDT T3STA: CON (Bitfield-Mask: 0x01)              */
#define ADI_WDT_T3STA_LD_Pos              (2UL)                     /*!< ADI_WDT T3STA: LD (Bit 2)                             */
#define ADI_WDT_T3STA_LD_Msk              (0x4UL)                   /*!< ADI_WDT T3STA: LD (Bitfield-Mask: 0x01)               */
#define ADI_WDT_T3STA_CLRI_Pos            (1UL)                     /*!< ADI_WDT T3STA: CLRI (Bit 1)                           */
#define ADI_WDT_T3STA_CLRI_Msk            (0x2UL)                   /*!< ADI_WDT T3STA: CLRI (Bitfield-Mask: 0x01)             */
#define ADI_WDT_T3STA_IRQ_Pos             (0UL)                     /*!< ADI_WDT T3STA: IRQ (Bit 0)                            */
#define ADI_WDT_T3STA_IRQ_Msk             (0x1UL)                   /*!< ADI_WDT T3STA: IRQ (Bitfield-Mask: 0x01)              */


/* =========================================================================================================================== */
/* ================                                          ADI_RTC                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  RTCCR  ========================================================= */
#define ADI_RTC_RTCCR_WPENDINTEN_Pos      (15UL)                    /*!< ADI_RTC RTCCR: WPENDINTEN (Bit 15)                    */
#define ADI_RTC_RTCCR_WPENDINTEN_Msk      (0x8000UL)                /*!< ADI_RTC RTCCR: WPENDINTEN (Bitfield-Mask: 0x01)       */
#define ADI_RTC_RTCCR_WSYNCINTEN_Pos      (14UL)                    /*!< ADI_RTC RTCCR: WSYNCINTEN (Bit 14)                    */
#define ADI_RTC_RTCCR_WSYNCINTEN_Msk      (0x4000UL)                /*!< ADI_RTC RTCCR: WSYNCINTEN (Bitfield-Mask: 0x01)       */
#define ADI_RTC_RTCCR_WPENDERRINTEN_Pos   (13UL)                    /*!< ADI_RTC RTCCR: WPENDERRINTEN (Bit 13)                 */
#define ADI_RTC_RTCCR_WPENDERRINTEN_Msk   (0x2000UL)                /*!< ADI_RTC RTCCR: WPENDERRINTEN (Bitfield-Mask: 0x01)    */
#define ADI_RTC_RTCCR_ISOINTEN_Pos        (12UL)                    /*!< ADI_RTC RTCCR: ISOINTEN (Bit 12)                      */
#define ADI_RTC_RTCCR_ISOINTEN_Msk        (0x1000UL)                /*!< ADI_RTC RTCCR: ISOINTEN (Bitfield-Mask: 0x01)         */
#define ADI_RTC_RTCCR_LCDINTEN_Pos        (11UL)                    /*!< ADI_RTC RTCCR: LCDINTEN (Bit 11)                      */
#define ADI_RTC_RTCCR_LCDINTEN_Msk        (0x800UL)                 /*!< ADI_RTC RTCCR: LCDINTEN (Bitfield-Mask: 0x01)         */
#define ADI_RTC_RTCCR_LCDUPDTIM_Pos       (5UL)                     /*!< ADI_RTC RTCCR: LCDUPDTIM (Bit 5)                      */
#define ADI_RTC_RTCCR_LCDUPDTIM_Msk       (0x20UL)                  /*!< ADI_RTC RTCCR: LCDUPDTIM (Bitfield-Mask: 0x01)        */
#define ADI_RTC_RTCCR_LCDEN_Pos           (4UL)                     /*!< ADI_RTC RTCCR: LCDEN (Bit 4)                          */
#define ADI_RTC_RTCCR_LCDEN_Msk           (0x10UL)                  /*!< ADI_RTC RTCCR: LCDEN (Bitfield-Mask: 0x01)            */
#define ADI_RTC_RTCCR_TRMEN_Pos           (3UL)                     /*!< ADI_RTC RTCCR: TRMEN (Bit 3)                          */
#define ADI_RTC_RTCCR_TRMEN_Msk           (0x8UL)                   /*!< ADI_RTC RTCCR: TRMEN (Bitfield-Mask: 0x01)            */
#define ADI_RTC_RTCCR_ALMINTEN_Pos        (2UL)                     /*!< ADI_RTC RTCCR: ALMINTEN (Bit 2)                       */
#define ADI_RTC_RTCCR_ALMINTEN_Msk        (0x4UL)                   /*!< ADI_RTC RTCCR: ALMINTEN (Bitfield-Mask: 0x01)         */
#define ADI_RTC_RTCCR_ALMEN_Pos           (1UL)                     /*!< ADI_RTC RTCCR: ALMEN (Bit 1)                          */
#define ADI_RTC_RTCCR_ALMEN_Msk           (0x2UL)                   /*!< ADI_RTC RTCCR: ALMEN (Bitfield-Mask: 0x01)            */
#define ADI_RTC_RTCCR_CNTEN_Pos           (0UL)                     /*!< ADI_RTC RTCCR: CNTEN (Bit 0)                          */
#define ADI_RTC_RTCCR_CNTEN_Msk           (0x1UL)                   /*!< ADI_RTC RTCCR: CNTEN (Bitfield-Mask: 0x01)            */
/* ========================================================  RTCSR0  ========================================================= */
#define ADI_RTC_RTCSR0_WSYNCTRM_Pos       (13UL)                    /*!< ADI_RTC RTCSR0: WSYNCTRM (Bit 13)                     */
#define ADI_RTC_RTCSR0_WSYNCTRM_Msk       (0x2000UL)                /*!< ADI_RTC RTCSR0: WSYNCTRM (Bitfield-Mask: 0x01)        */
#define ADI_RTC_RTCSR0_WSYNCALM1_Pos      (12UL)                    /*!< ADI_RTC RTCSR0: WSYNCALM1 (Bit 12)                    */
#define ADI_RTC_RTCSR0_WSYNCALM1_Msk      (0x1000UL)                /*!< ADI_RTC RTCSR0: WSYNCALM1 (Bitfield-Mask: 0x01)       */
#define ADI_RTC_RTCSR0_WSYNCALM0_Pos      (11UL)                    /*!< ADI_RTC RTCSR0: WSYNCALM0 (Bit 11)                    */
#define ADI_RTC_RTCSR0_WSYNCALM0_Msk      (0x800UL)                 /*!< ADI_RTC RTCSR0: WSYNCALM0 (Bitfield-Mask: 0x01)       */
#define ADI_RTC_RTCSR0_WSYNCCNT1_Pos      (10UL)                    /*!< ADI_RTC RTCSR0: WSYNCCNT1 (Bit 10)                    */
#define ADI_RTC_RTCSR0_WSYNCCNT1_Msk      (0x400UL)                 /*!< ADI_RTC RTCSR0: WSYNCCNT1 (Bitfield-Mask: 0x01)       */
#define ADI_RTC_RTCSR0_WSYNCCNT0_Pos      (9UL)                     /*!< ADI_RTC RTCSR0: WSYNCCNT0 (Bit 9)                     */
#define ADI_RTC_RTCSR0_WSYNCCNT0_Msk      (0x200UL)                 /*!< ADI_RTC RTCSR0: WSYNCCNT0 (Bitfield-Mask: 0x01)       */
#define ADI_RTC_RTCSR0_WSYNCSR0_Pos       (8UL)                     /*!< ADI_RTC RTCSR0: WSYNCSR0 (Bit 8)                      */
#define ADI_RTC_RTCSR0_WSYNCSR0_Msk       (0x100UL)                 /*!< ADI_RTC RTCSR0: WSYNCSR0 (Bitfield-Mask: 0x01)        */
#define ADI_RTC_RTCSR0_WSYNCCR_Pos        (7UL)                     /*!< ADI_RTC RTCSR0: WSYNCCR (Bit 7)                       */
#define ADI_RTC_RTCSR0_WSYNCCR_Msk        (0x80UL)                  /*!< ADI_RTC RTCSR0: WSYNCCR (Bitfield-Mask: 0x01)         */
#define ADI_RTC_RTCSR0_WPENDINT_Pos       (6UL)                     /*!< ADI_RTC RTCSR0: WPENDINT (Bit 6)                      */
#define ADI_RTC_RTCSR0_WPENDINT_Msk       (0x40UL)                  /*!< ADI_RTC RTCSR0: WPENDINT (Bitfield-Mask: 0x01)        */
#define ADI_RTC_RTCSR0_WSYNCINT_Pos       (5UL)                     /*!< ADI_RTC RTCSR0: WSYNCINT (Bit 5)                      */
#define ADI_RTC_RTCSR0_WSYNCINT_Msk       (0x20UL)                  /*!< ADI_RTC RTCSR0: WSYNCINT (Bitfield-Mask: 0x01)        */
#define ADI_RTC_RTCSR0_WPENDERRINT_Pos    (4UL)                     /*!< ADI_RTC RTCSR0: WPENDERRINT (Bit 4)                   */
#define ADI_RTC_RTCSR0_WPENDERRINT_Msk    (0x10UL)                  /*!< ADI_RTC RTCSR0: WPENDERRINT (Bitfield-Mask: 0x01)     */
#define ADI_RTC_RTCSR0_ISOINT_Pos         (3UL)                     /*!< ADI_RTC RTCSR0: ISOINT (Bit 3)                        */
#define ADI_RTC_RTCSR0_ISOINT_Msk         (0x8UL)                   /*!< ADI_RTC RTCSR0: ISOINT (Bitfield-Mask: 0x01)          */
#define ADI_RTC_RTCSR0_LCDINT_Pos         (2UL)                     /*!< ADI_RTC RTCSR0: LCDINT (Bit 2)                        */
#define ADI_RTC_RTCSR0_LCDINT_Msk         (0x4UL)                   /*!< ADI_RTC RTCSR0: LCDINT (Bitfield-Mask: 0x01)          */
#define ADI_RTC_RTCSR0_ALMINT_Pos         (1UL)                     /*!< ADI_RTC RTCSR0: ALMINT (Bit 1)                        */
#define ADI_RTC_RTCSR0_ALMINT_Msk         (0x2UL)                   /*!< ADI_RTC RTCSR0: ALMINT (Bitfield-Mask: 0x01)          */
#define ADI_RTC_RTCSR0_RTCFAIL_Pos        (0UL)                     /*!< ADI_RTC RTCSR0: RTCFAIL (Bit 0)                       */
#define ADI_RTC_RTCSR0_RTCFAIL_Msk        (0x1UL)                   /*!< ADI_RTC RTCSR0: RTCFAIL (Bitfield-Mask: 0x01)         */
/* ========================================================  RTCSR1  ========================================================= */
#define ADI_RTC_RTCSR1_WPENDTRM_Pos       (13UL)                    /*!< ADI_RTC RTCSR1: WPENDTRM (Bit 13)                     */
#define ADI_RTC_RTCSR1_WPENDTRM_Msk       (0x2000UL)                /*!< ADI_RTC RTCSR1: WPENDTRM (Bitfield-Mask: 0x01)        */
#define ADI_RTC_RTCSR1_WPENDALM1_Pos      (12UL)                    /*!< ADI_RTC RTCSR1: WPENDALM1 (Bit 12)                    */
#define ADI_RTC_RTCSR1_WPENDALM1_Msk      (0x1000UL)                /*!< ADI_RTC RTCSR1: WPENDALM1 (Bitfield-Mask: 0x01)       */
#define ADI_RTC_RTCSR1_WPENDALM0_Pos      (11UL)                    /*!< ADI_RTC RTCSR1: WPENDALM0 (Bit 11)                    */
#define ADI_RTC_RTCSR1_WPENDALM0_Msk      (0x800UL)                 /*!< ADI_RTC RTCSR1: WPENDALM0 (Bitfield-Mask: 0x01)       */
#define ADI_RTC_RTCSR1_WPENDCNT1_Pos      (10UL)                    /*!< ADI_RTC RTCSR1: WPENDCNT1 (Bit 10)                    */
#define ADI_RTC_RTCSR1_WPENDCNT1_Msk      (0x400UL)                 /*!< ADI_RTC RTCSR1: WPENDCNT1 (Bitfield-Mask: 0x01)       */
#define ADI_RTC_RTCSR1_WPENDCNT0_Pos      (9UL)                     /*!< ADI_RTC RTCSR1: WPENDCNT0 (Bit 9)                     */
#define ADI_RTC_RTCSR1_WPENDCNT0_Msk      (0x200UL)                 /*!< ADI_RTC RTCSR1: WPENDCNT0 (Bitfield-Mask: 0x01)       */
#define ADI_RTC_RTCSR1_WPENDSR0_Pos       (8UL)                     /*!< ADI_RTC RTCSR1: WPENDSR0 (Bit 8)                      */
#define ADI_RTC_RTCSR1_WPENDSR0_Msk       (0x100UL)                 /*!< ADI_RTC RTCSR1: WPENDSR0 (Bitfield-Mask: 0x01)        */
#define ADI_RTC_RTCSR1_WPENDCR_Pos        (7UL)                     /*!< ADI_RTC RTCSR1: WPENDCR (Bit 7)                       */
#define ADI_RTC_RTCSR1_WPENDCR_Msk        (0x80UL)                  /*!< ADI_RTC RTCSR1: WPENDCR (Bitfield-Mask: 0x01)         */
#define ADI_RTC_RTCSR1_WERRCODE_Pos       (3UL)                     /*!< ADI_RTC RTCSR1: WERRCODE (Bit 3)                      */
#define ADI_RTC_RTCSR1_WERRCODE_Msk       (0x8UL)                   /*!< ADI_RTC RTCSR1: WERRCODE (Bitfield-Mask: 0x01)        */
/* ========================================================  RTCCNT0  ======================================================== */
/* ========================================================  RTCCNT1  ======================================================== */
/* ========================================================  RTCALM0  ======================================================== */
/* ========================================================  RTCALM1  ======================================================== */
/* ========================================================  RTCTRM  ========================================================= */
#define ADI_RTC_RTCTRM_TRMIVL_Pos         (4UL)                     /*!< ADI_RTC RTCTRM: TRMIVL (Bit 4)                        */
#define ADI_RTC_RTCTRM_TRMIVL_Msk         (0x10UL)                  /*!< ADI_RTC RTCTRM: TRMIVL (Bitfield-Mask: 0x01)          */
#define ADI_RTC_RTCTRM_TRMADD_Pos         (3UL)                     /*!< ADI_RTC RTCTRM: TRMADD (Bit 3)                        */
#define ADI_RTC_RTCTRM_TRMADD_Msk         (0x8UL)                   /*!< ADI_RTC RTCTRM: TRMADD (Bitfield-Mask: 0x01)          */
#define ADI_RTC_RTCTRM_TRMVAL_Pos         (0UL)                     /*!< ADI_RTC RTCTRM: TRMVAL (Bit 0)                        */
#define ADI_RTC_RTCTRM_TRMVAL_Msk         (0x1UL)                   /*!< ADI_RTC RTCTRM: TRMVAL (Bitfield-Mask: 0x01)          */
/* ========================================================  RTCGWY  ========================================================= */


/* =========================================================================================================================== */
/* ================                                          ADI_I2C                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  I2CMCON  ======================================================== */
#define ADI_I2C_I2CMCON_PRESTOP_Pos       (13UL)                    /*!< ADI_I2C I2CMCON: PRESTOP (Bit 13)                     */
#define ADI_I2C_I2CMCON_PRESTOP_Msk       (0x2000UL)                /*!< ADI_I2C I2CMCON: PRESTOP (Bitfield-Mask: 0x01)        */
#define ADI_I2C_I2CMCON_BUS_Pos           (12UL)                    /*!< ADI_I2C I2CMCON: BUS (Bit 12)                         */
#define ADI_I2C_I2CMCON_BUS_Msk           (0x1000UL)                /*!< ADI_I2C I2CMCON: BUS (Bitfield-Mask: 0x01)            */
#define ADI_I2C_I2CMCON_MTXDMA_Pos        (11UL)                    /*!< ADI_I2C I2CMCON: MTXDMA (Bit 11)                      */
#define ADI_I2C_I2CMCON_MTXDMA_Msk        (0x800UL)                 /*!< ADI_I2C I2CMCON: MTXDMA (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CMCON_MRXDMA_Pos        (10UL)                    /*!< ADI_I2C I2CMCON: MRXDMA (Bit 10)                      */
#define ADI_I2C_I2CMCON_MRXDMA_Msk        (0x400UL)                 /*!< ADI_I2C I2CMCON: MRXDMA (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CMCON_MXMITDEC_Pos      (9UL)                     /*!< ADI_I2C I2CMCON: MXMITDEC (Bit 9)                     */
#define ADI_I2C_I2CMCON_MXMITDEC_Msk      (0x200UL)                 /*!< ADI_I2C I2CMCON: MXMITDEC (Bitfield-Mask: 0x01)       */
#define ADI_I2C_I2CMCON_IENCMP_Pos        (8UL)                     /*!< ADI_I2C I2CMCON: IENCMP (Bit 8)                       */
#define ADI_I2C_I2CMCON_IENCMP_Msk        (0x100UL)                 /*!< ADI_I2C I2CMCON: IENCMP (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CMCON_IENACK_Pos        (7UL)                     /*!< ADI_I2C I2CMCON: IENACK (Bit 7)                       */
#define ADI_I2C_I2CMCON_IENACK_Msk        (0x80UL)                  /*!< ADI_I2C I2CMCON: IENACK (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CMCON_IENALOST_Pos      (6UL)                     /*!< ADI_I2C I2CMCON: IENALOST (Bit 6)                     */
#define ADI_I2C_I2CMCON_IENALOST_Msk      (0x40UL)                  /*!< ADI_I2C I2CMCON: IENALOST (Bitfield-Mask: 0x01)       */
#define ADI_I2C_I2CMCON_IENMTX_Pos        (5UL)                     /*!< ADI_I2C I2CMCON: IENMTX (Bit 5)                       */
#define ADI_I2C_I2CMCON_IENMTX_Msk        (0x20UL)                  /*!< ADI_I2C I2CMCON: IENMTX (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CMCON_IENMRX_Pos        (4UL)                     /*!< ADI_I2C I2CMCON: IENMRX (Bit 4)                       */
#define ADI_I2C_I2CMCON_IENMRX_Msk        (0x10UL)                  /*!< ADI_I2C I2CMCON: IENMRX (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CMCON_STRETCH_Pos       (3UL)                     /*!< ADI_I2C I2CMCON: STRETCH (Bit 3)                      */
#define ADI_I2C_I2CMCON_STRETCH_Msk       (0x8UL)                   /*!< ADI_I2C I2CMCON: STRETCH (Bitfield-Mask: 0x01)        */
#define ADI_I2C_I2CMCON_LOOPBACK_Pos      (2UL)                     /*!< ADI_I2C I2CMCON: LOOPBACK (Bit 2)                     */
#define ADI_I2C_I2CMCON_LOOPBACK_Msk      (0x4UL)                   /*!< ADI_I2C I2CMCON: LOOPBACK (Bitfield-Mask: 0x01)       */
#define ADI_I2C_I2CMCON_COMPLETE_Pos      (1UL)                     /*!< ADI_I2C I2CMCON: COMPLETE (Bit 1)                     */
#define ADI_I2C_I2CMCON_COMPLETE_Msk      (0x2UL)                   /*!< ADI_I2C I2CMCON: COMPLETE (Bitfield-Mask: 0x01)       */
#define ADI_I2C_I2CMCON_MASEN_Pos         (0UL)                     /*!< ADI_I2C I2CMCON: MASEN (Bit 0)                        */
#define ADI_I2C_I2CMCON_MASEN_Msk         (0x1UL)                   /*!< ADI_I2C I2CMCON: MASEN (Bitfield-Mask: 0x01)          */
/* ========================================================  I2CMSTA  ======================================================== */
#define ADI_I2C_I2CMSTA_SCL_Pos           (14UL)                    /*!< ADI_I2C I2CMSTA: SCL (Bit 14)                         */
#define ADI_I2C_I2CMSTA_SCL_Msk           (0x4000UL)                /*!< ADI_I2C I2CMSTA: SCL (Bitfield-Mask: 0x01)            */
#define ADI_I2C_I2CMSTA_SDA_Pos           (13UL)                    /*!< ADI_I2C I2CMSTA: SDA (Bit 13)                         */
#define ADI_I2C_I2CMSTA_SDA_Msk           (0x2000UL)                /*!< ADI_I2C I2CMSTA: SDA (Bitfield-Mask: 0x01)            */
#define ADI_I2C_I2CMSTA_MTXUFLOW_Pos      (12UL)                    /*!< ADI_I2C I2CMSTA: MTXUFLOW (Bit 12)                    */
#define ADI_I2C_I2CMSTA_MTXUFLOW_Msk      (0x1000UL)                /*!< ADI_I2C I2CMSTA: MTXUFLOW (Bitfield-Mask: 0x01)       */
#define ADI_I2C_I2CMSTA_MSTOP_Pos         (11UL)                    /*!< ADI_I2C I2CMSTA: MSTOP (Bit 11)                       */
#define ADI_I2C_I2CMSTA_MSTOP_Msk         (0x800UL)                 /*!< ADI_I2C I2CMSTA: MSTOP (Bitfield-Mask: 0x01)          */
#define ADI_I2C_I2CMSTA_LINEBUSY_Pos      (10UL)                    /*!< ADI_I2C I2CMSTA: LINEBUSY (Bit 10)                    */
#define ADI_I2C_I2CMSTA_LINEBUSY_Msk      (0x400UL)                 /*!< ADI_I2C I2CMSTA: LINEBUSY (Bitfield-Mask: 0x01)       */
#define ADI_I2C_I2CMSTA_MRXOF_Pos         (9UL)                     /*!< ADI_I2C I2CMSTA: MRXOF (Bit 9)                        */
#define ADI_I2C_I2CMSTA_MRXOF_Msk         (0x200UL)                 /*!< ADI_I2C I2CMSTA: MRXOF (Bitfield-Mask: 0x01)          */
#define ADI_I2C_I2CMSTA_TCOMP_Pos         (8UL)                     /*!< ADI_I2C I2CMSTA: TCOMP (Bit 8)                        */
#define ADI_I2C_I2CMSTA_TCOMP_Msk         (0x100UL)                 /*!< ADI_I2C I2CMSTA: TCOMP (Bitfield-Mask: 0x01)          */
#define ADI_I2C_I2CMSTA_NACKDATA_Pos      (7UL)                     /*!< ADI_I2C I2CMSTA: NACKDATA (Bit 7)                     */
#define ADI_I2C_I2CMSTA_NACKDATA_Msk      (0x80UL)                  /*!< ADI_I2C I2CMSTA: NACKDATA (Bitfield-Mask: 0x01)       */
#define ADI_I2C_I2CMSTA_MBUSY_Pos         (6UL)                     /*!< ADI_I2C I2CMSTA: MBUSY (Bit 6)                        */
#define ADI_I2C_I2CMSTA_MBUSY_Msk         (0x40UL)                  /*!< ADI_I2C I2CMSTA: MBUSY (Bitfield-Mask: 0x01)          */
#define ADI_I2C_I2CMSTA_ALOST_Pos         (5UL)                     /*!< ADI_I2C I2CMSTA: ALOST (Bit 5)                        */
#define ADI_I2C_I2CMSTA_ALOST_Msk         (0x20UL)                  /*!< ADI_I2C I2CMSTA: ALOST (Bitfield-Mask: 0x01)          */
#define ADI_I2C_I2CMSTA_NACKADDR_Pos      (4UL)                     /*!< ADI_I2C I2CMSTA: NACKADDR (Bit 4)                     */
#define ADI_I2C_I2CMSTA_NACKADDR_Msk      (0x10UL)                  /*!< ADI_I2C I2CMSTA: NACKADDR (Bitfield-Mask: 0x01)       */
#define ADI_I2C_I2CMSTA_MRXREQ_Pos        (3UL)                     /*!< ADI_I2C I2CMSTA: MRXREQ (Bit 3)                       */
#define ADI_I2C_I2CMSTA_MRXREQ_Msk        (0x8UL)                   /*!< ADI_I2C I2CMSTA: MRXREQ (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CMSTA_MTXREQ_Pos        (2UL)                     /*!< ADI_I2C I2CMSTA: MTXREQ (Bit 2)                       */
#define ADI_I2C_I2CMSTA_MTXREQ_Msk        (0x4UL)                   /*!< ADI_I2C I2CMSTA: MTXREQ (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CMSTA_MTXFSTA_Pos       (0UL)                     /*!< ADI_I2C I2CMSTA: MTXFSTA (Bit 0)                      */
#define ADI_I2C_I2CMSTA_MTXFSTA_Msk       (0x1UL)                   /*!< ADI_I2C I2CMSTA: MTXFSTA (Bitfield-Mask: 0x01)        */
/* ========================================================  I2CMRX  ========================================================= */
#define ADI_I2C_I2CMRX_I2CMRX_Pos         (0UL)                     /*!< ADI_I2C I2CMRX: I2CMRX (Bit 0)                        */
#define ADI_I2C_I2CMRX_I2CMRX_Msk         (0x1UL)                   /*!< ADI_I2C I2CMRX: I2CMRX (Bitfield-Mask: 0x01)          */
/* ========================================================  I2CMTX  ========================================================= */
#define ADI_I2C_I2CMTX_I2CMTX_Pos         (0UL)                     /*!< ADI_I2C I2CMTX: I2CMTX (Bit 0)                        */
#define ADI_I2C_I2CMTX_I2CMTX_Msk         (0x1UL)                   /*!< ADI_I2C I2CMTX: I2CMTX (Bitfield-Mask: 0x01)          */
/* =======================================================  I2CMRXCNT  ======================================================= */
#define ADI_I2C_I2CMRXCNT_EXTEND_Pos      (8UL)                     /*!< ADI_I2C I2CMRXCNT: EXTEND (Bit 8)                     */
#define ADI_I2C_I2CMRXCNT_EXTEND_Msk      (0x100UL)                 /*!< ADI_I2C I2CMRXCNT: EXTEND (Bitfield-Mask: 0x01)       */
#define ADI_I2C_I2CMRXCNT_COUNT_Pos       (0UL)                     /*!< ADI_I2C I2CMRXCNT: COUNT (Bit 0)                      */
#define ADI_I2C_I2CMRXCNT_COUNT_Msk       (0x1UL)                   /*!< ADI_I2C I2CMRXCNT: COUNT (Bitfield-Mask: 0x01)        */
/* ======================================================  I2CMCRXCNT  ======================================================= */
#define ADI_I2C_I2CMCRXCNT_COUNT_Pos      (0UL)                     /*!< ADI_I2C I2CMCRXCNT: COUNT (Bit 0)                     */
#define ADI_I2C_I2CMCRXCNT_COUNT_Msk      (0x1UL)                   /*!< ADI_I2C I2CMCRXCNT: COUNT (Bitfield-Mask: 0x01)       */
/* ========================================================  I2CADR1  ======================================================== */
#define ADI_I2C_I2CADR1_ADR1_Pos          (0UL)                     /*!< ADI_I2C I2CADR1: ADR1 (Bit 0)                         */
#define ADI_I2C_I2CADR1_ADR1_Msk          (0x1UL)                   /*!< ADI_I2C I2CADR1: ADR1 (Bitfield-Mask: 0x01)           */
/* ========================================================  I2CADR2  ======================================================== */
#define ADI_I2C_I2CADR2_ADR2_Pos          (0UL)                     /*!< ADI_I2C I2CADR2: ADR2 (Bit 0)                         */
#define ADI_I2C_I2CADR2_ADR2_Msk          (0x1UL)                   /*!< ADI_I2C I2CADR2: ADR2 (Bitfield-Mask: 0x01)           */
/* ========================================================  I2CBYT  ========================================================= */
#define ADI_I2C_I2CBYT_SBYTE_Pos          (0UL)                     /*!< ADI_I2C I2CBYT: SBYTE (Bit 0)                         */
#define ADI_I2C_I2CBYT_SBYTE_Msk          (0x1UL)                   /*!< ADI_I2C I2CBYT: SBYTE (Bitfield-Mask: 0x01)           */
/* ========================================================  I2CDIV  ========================================================= */
#define ADI_I2C_I2CDIV_HIGH_Pos           (8UL)                     /*!< ADI_I2C I2CDIV: HIGH (Bit 8)                          */
#define ADI_I2C_I2CDIV_HIGH_Msk           (0x100UL)                 /*!< ADI_I2C I2CDIV: HIGH (Bitfield-Mask: 0x01)            */
#define ADI_I2C_I2CDIV_LOW_Pos            (0UL)                     /*!< ADI_I2C I2CDIV: LOW (Bit 0)                           */
#define ADI_I2C_I2CDIV_LOW_Msk            (0x1UL)                   /*!< ADI_I2C I2CDIV: LOW (Bitfield-Mask: 0x01)             */
/* ========================================================  I2CSCON  ======================================================== */
#define ADI_I2C_I2CSCON_STXDMA_Pos        (14UL)                    /*!< ADI_I2C I2CSCON: STXDMA (Bit 14)                      */
#define ADI_I2C_I2CSCON_STXDMA_Msk        (0x4000UL)                /*!< ADI_I2C I2CSCON: STXDMA (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CSCON_SRXDMA_Pos        (13UL)                    /*!< ADI_I2C I2CSCON: SRXDMA (Bit 13)                      */
#define ADI_I2C_I2CSCON_SRXDMA_Msk        (0x2000UL)                /*!< ADI_I2C I2CSCON: SRXDMA (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CSCON_IENREPST_Pos      (12UL)                    /*!< ADI_I2C I2CSCON: IENREPST (Bit 12)                    */
#define ADI_I2C_I2CSCON_IENREPST_Msk      (0x1000UL)                /*!< ADI_I2C I2CSCON: IENREPST (Bitfield-Mask: 0x01)       */
#define ADI_I2C_I2CSCON_SXMITDEC_Pos      (11UL)                    /*!< ADI_I2C I2CSCON: SXMITDEC (Bit 11)                    */
#define ADI_I2C_I2CSCON_SXMITDEC_Msk      (0x800UL)                 /*!< ADI_I2C I2CSCON: SXMITDEC (Bitfield-Mask: 0x01)       */
#define ADI_I2C_I2CSCON_IENSTX_Pos        (10UL)                    /*!< ADI_I2C I2CSCON: IENSTX (Bit 10)                      */
#define ADI_I2C_I2CSCON_IENSTX_Msk        (0x400UL)                 /*!< ADI_I2C I2CSCON: IENSTX (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CSCON_IENSRX_Pos        (9UL)                     /*!< ADI_I2C I2CSCON: IENSRX (Bit 9)                       */
#define ADI_I2C_I2CSCON_IENSRX_Msk        (0x200UL)                 /*!< ADI_I2C I2CSCON: IENSRX (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CSCON_IENSTOP_Pos       (8UL)                     /*!< ADI_I2C I2CSCON: IENSTOP (Bit 8)                      */
#define ADI_I2C_I2CSCON_IENSTOP_Msk       (0x100UL)                 /*!< ADI_I2C I2CSCON: IENSTOP (Bitfield-Mask: 0x01)        */
#define ADI_I2C_I2CSCON_NACK_Pos          (7UL)                     /*!< ADI_I2C I2CSCON: NACK (Bit 7)                         */
#define ADI_I2C_I2CSCON_NACK_Msk          (0x80UL)                  /*!< ADI_I2C I2CSCON: NACK (Bitfield-Mask: 0x01)           */
#define ADI_I2C_I2CSCON_STRETCHSCL_Pos    (6UL)                     /*!< ADI_I2C I2CSCON: STRETCHSCL (Bit 6)                   */
#define ADI_I2C_I2CSCON_STRETCHSCL_Msk    (0x40UL)                  /*!< ADI_I2C I2CSCON: STRETCHSCL (Bitfield-Mask: 0x01)     */
#define ADI_I2C_I2CSCON_EARLYTXR_Pos      (5UL)                     /*!< ADI_I2C I2CSCON: EARLYTXR (Bit 5)                     */
#define ADI_I2C_I2CSCON_EARLYTXR_Msk      (0x20UL)                  /*!< ADI_I2C I2CSCON: EARLYTXR (Bitfield-Mask: 0x01)       */
#define ADI_I2C_I2CSCON_GCSBCLR_Pos       (4UL)                     /*!< ADI_I2C I2CSCON: GCSBCLR (Bit 4)                      */
#define ADI_I2C_I2CSCON_GCSBCLR_Msk       (0x10UL)                  /*!< ADI_I2C I2CSCON: GCSBCLR (Bitfield-Mask: 0x01)        */
#define ADI_I2C_I2CSCON_HGCEN_Pos         (3UL)                     /*!< ADI_I2C I2CSCON: HGCEN (Bit 3)                        */
#define ADI_I2C_I2CSCON_HGCEN_Msk         (0x8UL)                   /*!< ADI_I2C I2CSCON: HGCEN (Bitfield-Mask: 0x01)          */
#define ADI_I2C_I2CSCON_GCEN_Pos          (2UL)                     /*!< ADI_I2C I2CSCON: GCEN (Bit 2)                         */
#define ADI_I2C_I2CSCON_GCEN_Msk          (0x4UL)                   /*!< ADI_I2C I2CSCON: GCEN (Bitfield-Mask: 0x01)           */
#define ADI_I2C_I2CSCON_ADR10EN_Pos       (1UL)                     /*!< ADI_I2C I2CSCON: ADR10EN (Bit 1)                      */
#define ADI_I2C_I2CSCON_ADR10EN_Msk       (0x2UL)                   /*!< ADI_I2C I2CSCON: ADR10EN (Bitfield-Mask: 0x01)        */
#define ADI_I2C_I2CSCON_SLVEN_Pos         (0UL)                     /*!< ADI_I2C I2CSCON: SLVEN (Bit 0)                        */
#define ADI_I2C_I2CSCON_SLVEN_Msk         (0x1UL)                   /*!< ADI_I2C I2CSCON: SLVEN (Bitfield-Mask: 0x01)          */
/* ========================================================  I2CSSTA  ======================================================== */
#define ADI_I2C_I2CSSTA_START_Pos         (14UL)                    /*!< ADI_I2C I2CSSTA: START (Bit 14)                       */
#define ADI_I2C_I2CSSTA_START_Msk         (0x4000UL)                /*!< ADI_I2C I2CSSTA: START (Bitfield-Mask: 0x01)          */
#define ADI_I2C_I2CSSTA_REPSTART_Pos      (13UL)                    /*!< ADI_I2C I2CSSTA: REPSTART (Bit 13)                    */
#define ADI_I2C_I2CSSTA_REPSTART_Msk      (0x2000UL)                /*!< ADI_I2C I2CSSTA: REPSTART (Bitfield-Mask: 0x01)       */
#define ADI_I2C_I2CSSTA_IDMAT_Pos         (11UL)                    /*!< ADI_I2C I2CSSTA: IDMAT (Bit 11)                       */
#define ADI_I2C_I2CSSTA_IDMAT_Msk         (0x800UL)                 /*!< ADI_I2C I2CSSTA: IDMAT (Bitfield-Mask: 0x01)          */
#define ADI_I2C_I2CSSTA_STOP_Pos          (10UL)                    /*!< ADI_I2C I2CSSTA: STOP (Bit 10)                        */
#define ADI_I2C_I2CSSTA_STOP_Msk          (0x400UL)                 /*!< ADI_I2C I2CSSTA: STOP (Bitfield-Mask: 0x01)           */
#define ADI_I2C_I2CSSTA_GCID_Pos          (8UL)                     /*!< ADI_I2C I2CSSTA: GCID (Bit 8)                         */
#define ADI_I2C_I2CSSTA_GCID_Msk          (0x100UL)                 /*!< ADI_I2C I2CSSTA: GCID (Bitfield-Mask: 0x01)           */
#define ADI_I2C_I2CSSTA_GCINT_Pos         (7UL)                     /*!< ADI_I2C I2CSSTA: GCINT (Bit 7)                        */
#define ADI_I2C_I2CSSTA_GCINT_Msk         (0x80UL)                  /*!< ADI_I2C I2CSSTA: GCINT (Bitfield-Mask: 0x01)          */
#define ADI_I2C_I2CSSTA_SBUSY_Pos         (6UL)                     /*!< ADI_I2C I2CSSTA: SBUSY (Bit 6)                        */
#define ADI_I2C_I2CSSTA_SBUSY_Msk         (0x40UL)                  /*!< ADI_I2C I2CSSTA: SBUSY (Bitfield-Mask: 0x01)          */
#define ADI_I2C_I2CSSTA_NOACK_Pos         (5UL)                     /*!< ADI_I2C I2CSSTA: NOACK (Bit 5)                        */
#define ADI_I2C_I2CSSTA_NOACK_Msk         (0x20UL)                  /*!< ADI_I2C I2CSSTA: NOACK (Bitfield-Mask: 0x01)          */
#define ADI_I2C_I2CSSTA_SRXOF_Pos         (4UL)                     /*!< ADI_I2C I2CSSTA: SRXOF (Bit 4)                        */
#define ADI_I2C_I2CSSTA_SRXOF_Msk         (0x10UL)                  /*!< ADI_I2C I2CSSTA: SRXOF (Bitfield-Mask: 0x01)          */
#define ADI_I2C_I2CSSTA_SRXREQ_Pos        (3UL)                     /*!< ADI_I2C I2CSSTA: SRXREQ (Bit 3)                       */
#define ADI_I2C_I2CSSTA_SRXREQ_Msk        (0x8UL)                   /*!< ADI_I2C I2CSSTA: SRXREQ (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CSSTA_STXREQ_Pos        (2UL)                     /*!< ADI_I2C I2CSSTA: STXREQ (Bit 2)                       */
#define ADI_I2C_I2CSSTA_STXREQ_Msk        (0x4UL)                   /*!< ADI_I2C I2CSSTA: STXREQ (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CSSTA_STXUR_Pos         (1UL)                     /*!< ADI_I2C I2CSSTA: STXUR (Bit 1)                        */
#define ADI_I2C_I2CSSTA_STXUR_Msk         (0x2UL)                   /*!< ADI_I2C I2CSSTA: STXUR (Bitfield-Mask: 0x01)          */
#define ADI_I2C_I2CSSTA_STXFSEREQ_Pos     (0UL)                     /*!< ADI_I2C I2CSSTA: STXFSEREQ (Bit 0)                    */
#define ADI_I2C_I2CSSTA_STXFSEREQ_Msk     (0x1UL)                   /*!< ADI_I2C I2CSSTA: STXFSEREQ (Bitfield-Mask: 0x01)      */
/* ========================================================  I2CSRX  ========================================================= */
#define ADI_I2C_I2CSRX_I2CSRX_Pos         (0UL)                     /*!< ADI_I2C I2CSRX: I2CSRX (Bit 0)                        */
#define ADI_I2C_I2CSRX_I2CSRX_Msk         (0x1UL)                   /*!< ADI_I2C I2CSRX: I2CSRX (Bitfield-Mask: 0x01)          */
/* ========================================================  I2CSTX  ========================================================= */
#define ADI_I2C_I2CSTX_I2CSTX_Pos         (0UL)                     /*!< ADI_I2C I2CSTX: I2CSTX (Bit 0)                        */
#define ADI_I2C_I2CSTX_I2CSTX_Msk         (0x1UL)                   /*!< ADI_I2C I2CSTX: I2CSTX (Bitfield-Mask: 0x01)          */
/* ========================================================  I2CALT  ========================================================= */
#define ADI_I2C_I2CALT_ALT_Pos            (0UL)                     /*!< ADI_I2C I2CALT: ALT (Bit 0)                           */
#define ADI_I2C_I2CALT_ALT_Msk            (0x1UL)                   /*!< ADI_I2C I2CALT: ALT (Bitfield-Mask: 0x01)             */
/* ========================================================  I2CID0  ========================================================= */
#define ADI_I2C_I2CID0_ID0_Pos            (0UL)                     /*!< ADI_I2C I2CID0: ID0 (Bit 0)                           */
#define ADI_I2C_I2CID0_ID0_Msk            (0x1UL)                   /*!< ADI_I2C I2CID0: ID0 (Bitfield-Mask: 0x01)             */
/* ========================================================  I2CID1  ========================================================= */
#define ADI_I2C_I2CID1_ID1_Pos            (0UL)                     /*!< ADI_I2C I2CID1: ID1 (Bit 0)                           */
#define ADI_I2C_I2CID1_ID1_Msk            (0x1UL)                   /*!< ADI_I2C I2CID1: ID1 (Bitfield-Mask: 0x01)             */
/* ========================================================  I2CID2  ========================================================= */
#define ADI_I2C_I2CID2_ID2_Pos            (0UL)                     /*!< ADI_I2C I2CID2: ID2 (Bit 0)                           */
#define ADI_I2C_I2CID2_ID2_Msk            (0x1UL)                   /*!< ADI_I2C I2CID2: ID2 (Bitfield-Mask: 0x01)             */
/* ========================================================  I2CID3  ========================================================= */
#define ADI_I2C_I2CID3_ID3_Pos            (0UL)                     /*!< ADI_I2C I2CID3: ID3 (Bit 0)                           */
#define ADI_I2C_I2CID3_ID3_Msk            (0x1UL)                   /*!< ADI_I2C I2CID3: ID3 (Bitfield-Mask: 0x01)             */
/* ========================================================  I2CFSTA  ======================================================== */
#define ADI_I2C_I2CFSTA_MFLUSH_Pos        (9UL)                     /*!< ADI_I2C I2CFSTA: MFLUSH (Bit 9)                       */
#define ADI_I2C_I2CFSTA_MFLUSH_Msk        (0x200UL)                 /*!< ADI_I2C I2CFSTA: MFLUSH (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CFSTA_SFLUSH_Pos        (8UL)                     /*!< ADI_I2C I2CFSTA: SFLUSH (Bit 8)                       */
#define ADI_I2C_I2CFSTA_SFLUSH_Msk        (0x100UL)                 /*!< ADI_I2C I2CFSTA: SFLUSH (Bitfield-Mask: 0x01)         */
#define ADI_I2C_I2CFSTA_MRXFSTA_Pos       (6UL)                     /*!< ADI_I2C I2CFSTA: MRXFSTA (Bit 6)                      */
#define ADI_I2C_I2CFSTA_MRXFSTA_Msk       (0x40UL)                  /*!< ADI_I2C I2CFSTA: MRXFSTA (Bitfield-Mask: 0x01)        */
#define ADI_I2C_I2CFSTA_MTXFSTA_Pos       (4UL)                     /*!< ADI_I2C I2CFSTA: MTXFSTA (Bit 4)                      */
#define ADI_I2C_I2CFSTA_MTXFSTA_Msk       (0x10UL)                  /*!< ADI_I2C I2CFSTA: MTXFSTA (Bitfield-Mask: 0x01)        */
#define ADI_I2C_I2CFSTA_SRXFSTA_Pos       (2UL)                     /*!< ADI_I2C I2CFSTA: SRXFSTA (Bit 2)                      */
#define ADI_I2C_I2CFSTA_SRXFSTA_Msk       (0x4UL)                   /*!< ADI_I2C I2CFSTA: SRXFSTA (Bitfield-Mask: 0x01)        */
#define ADI_I2C_I2CFSTA_STXFSTA_Pos       (0UL)                     /*!< ADI_I2C I2CFSTA: STXFSTA (Bit 0)                      */
#define ADI_I2C_I2CFSTA_STXFSTA_Msk       (0x1UL)                   /*!< ADI_I2C I2CFSTA: STXFSTA (Bitfield-Mask: 0x01)        */
/* =======================================================  I2CSHCON  ======================================================== */
#define ADI_I2C_I2CSHCON_RESET_Pos        (0UL)                     /*!< ADI_I2C I2CSHCON: RESET (Bit 0)                       */
#define ADI_I2C_I2CSHCON_RESET_Msk        (0x1UL)                   /*!< ADI_I2C I2CSHCON: RESET (Bitfield-Mask: 0x01)         */
/* ========================================================  I2CTCTL  ======================================================== */
#define ADI_I2C_I2CTCTL_FILTEROFF_Pos     (8UL)                     /*!< ADI_I2C I2CTCTL: FILTEROFF (Bit 8)                    */
#define ADI_I2C_I2CTCTL_FILTEROFF_Msk     (0x100UL)                 /*!< ADI_I2C I2CTCTL: FILTEROFF (Bitfield-Mask: 0x01)      */
#define ADI_I2C_I2CTCTL_THDATIN_Pos       (0UL)                     /*!< ADI_I2C I2CTCTL: THDATIN (Bit 0)                      */
#define ADI_I2C_I2CTCTL_THDATIN_Msk       (0x1UL)                   /*!< ADI_I2C I2CTCTL: THDATIN (Bitfield-Mask: 0x01)        */


/* =========================================================================================================================== */
/* ================                                         ADI_SPI0                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  SPISTA  ========================================================= */
#define ADI_SPI0_SPISTA_CSRSG_Pos         (14UL)                    /*!< ADI_SPI0 SPISTA: CSRSG (Bit 14)                       */
#define ADI_SPI0_SPISTA_CSRSG_Msk         (0x4000UL)                /*!< ADI_SPI0 SPISTA: CSRSG (Bitfield-Mask: 0x01)          */
#define ADI_SPI0_SPISTA_CSFLG_Pos         (13UL)                    /*!< ADI_SPI0 SPISTA: CSFLG (Bit 13)                       */
#define ADI_SPI0_SPISTA_CSFLG_Msk         (0x2000UL)                /*!< ADI_SPI0 SPISTA: CSFLG (Bitfield-Mask: 0x01)          */
#define ADI_SPI0_SPISTA_CSERR_Pos         (12UL)                    /*!< ADI_SPI0 SPISTA: CSERR (Bit 12)                       */
#define ADI_SPI0_SPISTA_CSERR_Msk         (0x1000UL)                /*!< ADI_SPI0 SPISTA: CSERR (Bitfield-Mask: 0x01)          */
#define ADI_SPI0_SPISTA_RXS_Pos           (11UL)                    /*!< ADI_SPI0 SPISTA: RXS (Bit 11)                         */
#define ADI_SPI0_SPISTA_RXS_Msk           (0x800UL)                 /*!< ADI_SPI0 SPISTA: RXS (Bitfield-Mask: 0x01)            */
#define ADI_SPI0_SPISTA_RXFSTA_Pos        (8UL)                     /*!< ADI_SPI0 SPISTA: RXFSTA (Bit 8)                       */
#define ADI_SPI0_SPISTA_RXFSTA_Msk        (0x700UL)                 /*!< ADI_SPI0 SPISTA: RXFSTA (Bitfield-Mask: 0x07)         */
#define ADI_SPI0_SPISTA_RXOF_Pos          (7UL)                     /*!< ADI_SPI0 SPISTA: RXOF (Bit 7)                         */
#define ADI_SPI0_SPISTA_RXOF_Msk          (0x80UL)                  /*!< ADI_SPI0 SPISTA: RXOF (Bitfield-Mask: 0x01)           */
#define ADI_SPI0_SPISTA_RX_Pos            (6UL)                     /*!< ADI_SPI0 SPISTA: RX (Bit 6)                           */
#define ADI_SPI0_SPISTA_RX_Msk            (0x40UL)                  /*!< ADI_SPI0 SPISTA: RX (Bitfield-Mask: 0x01)             */
#define ADI_SPI0_SPISTA_TX_Pos            (5UL)                     /*!< ADI_SPI0 SPISTA: TX (Bit 5)                           */
#define ADI_SPI0_SPISTA_TX_Msk            (0x20UL)                  /*!< ADI_SPI0 SPISTA: TX (Bitfield-Mask: 0x01)             */
#define ADI_SPI0_SPISTA_TXUR_Pos          (4UL)                     /*!< ADI_SPI0 SPISTA: TXUR (Bit 4)                         */
#define ADI_SPI0_SPISTA_TXUR_Msk          (0x10UL)                  /*!< ADI_SPI0 SPISTA: TXUR (Bitfield-Mask: 0x01)           */
#define ADI_SPI0_SPISTA_TXFSTA_Pos        (1UL)                     /*!< ADI_SPI0 SPISTA: TXFSTA (Bit 1)                       */
#define ADI_SPI0_SPISTA_TXFSTA_Msk        (0xeUL)                   /*!< ADI_SPI0 SPISTA: TXFSTA (Bitfield-Mask: 0x07)         */
#define ADI_SPI0_SPISTA_IRQ_Pos           (0UL)                     /*!< ADI_SPI0 SPISTA: IRQ (Bit 0)                          */
#define ADI_SPI0_SPISTA_IRQ_Msk           (0x1UL)                   /*!< ADI_SPI0 SPISTA: IRQ (Bitfield-Mask: 0x01)            */
/* =========================================================  SPIRX  ========================================================= */
#define ADI_SPI0_SPIRX_DMA_Pos            (8UL)                     /*!< ADI_SPI0 SPIRX: DMA (Bit 8)                           */
#define ADI_SPI0_SPIRX_DMA_Msk            (0xff00UL)                /*!< ADI_SPI0 SPIRX: DMA (Bitfield-Mask: 0xff)             */
#define ADI_SPI0_SPIRX_DATA_Pos           (0UL)                     /*!< ADI_SPI0 SPIRX: DATA (Bit 0)                          */
#define ADI_SPI0_SPIRX_DATA_Msk           (0xffUL)                  /*!< ADI_SPI0 SPIRX: DATA (Bitfield-Mask: 0xff)            */
/* =========================================================  SPITX  ========================================================= */
#define ADI_SPI0_SPITX_DMA_Pos            (8UL)                     /*!< ADI_SPI0 SPITX: DMA (Bit 8)                           */
#define ADI_SPI0_SPITX_DMA_Msk            (0xff00UL)                /*!< ADI_SPI0 SPITX: DMA (Bitfield-Mask: 0xff)             */
#define ADI_SPI0_SPITX_DATA_Pos           (0UL)                     /*!< ADI_SPI0 SPITX: DATA (Bit 0)                          */
#define ADI_SPI0_SPITX_DATA_Msk           (0xffUL)                  /*!< ADI_SPI0 SPITX: DATA (Bitfield-Mask: 0xff)            */
/* ========================================================  SPIDIV  ========================================================= */
#define ADI_SPI0_SPIDIV_CSIRQ_Pos         (8UL)                     /*!< ADI_SPI0 SPIDIV: CSIRQ (Bit 8)                        */
#define ADI_SPI0_SPIDIV_CSIRQ_Msk         (0x100UL)                 /*!< ADI_SPI0 SPIDIV: CSIRQ (Bitfield-Mask: 0x01)          */
#define ADI_SPI0_SPIDIV_MD_Pos            (7UL)                     /*!< ADI_SPI0 SPIDIV: MD (Bit 7)                           */
#define ADI_SPI0_SPIDIV_MD_Msk            (0x80UL)                  /*!< ADI_SPI0 SPIDIV: MD (Bitfield-Mask: 0x01)             */
#define ADI_SPI0_SPIDIV_HFM_Pos           (6UL)                     /*!< ADI_SPI0 SPIDIV: HFM (Bit 6)                          */
#define ADI_SPI0_SPIDIV_HFM_Msk           (0x40UL)                  /*!< ADI_SPI0 SPIDIV: HFM (Bitfield-Mask: 0x01)            */
#define ADI_SPI0_SPIDIV_DIV_Pos           (0UL)                     /*!< ADI_SPI0 SPIDIV: DIV (Bit 0)                          */
#define ADI_SPI0_SPIDIV_DIV_Msk           (0x3fUL)                  /*!< ADI_SPI0 SPIDIV: DIV (Bitfield-Mask: 0x3f)            */
/* ========================================================  SPICON  ========================================================= */
#define ADI_SPI0_SPICON_MOD_Pos           (14UL)                    /*!< ADI_SPI0 SPICON: MOD (Bit 14)                         */
#define ADI_SPI0_SPICON_MOD_Msk           (0xc000UL)                /*!< ADI_SPI0 SPICON: MOD (Bitfield-Mask: 0x03)            */
#define ADI_SPI0_SPICON_TFLUSH_Pos        (13UL)                    /*!< ADI_SPI0 SPICON: TFLUSH (Bit 13)                      */
#define ADI_SPI0_SPICON_TFLUSH_Msk        (0x2000UL)                /*!< ADI_SPI0 SPICON: TFLUSH (Bitfield-Mask: 0x01)         */
#define ADI_SPI0_SPICON_RFLUSH_Pos        (12UL)                    /*!< ADI_SPI0 SPICON: RFLUSH (Bit 12)                      */
#define ADI_SPI0_SPICON_RFLUSH_Msk        (0x1000UL)                /*!< ADI_SPI0 SPICON: RFLUSH (Bitfield-Mask: 0x01)         */
#define ADI_SPI0_SPICON_CON_Pos           (11UL)                    /*!< ADI_SPI0 SPICON: CON (Bit 11)                         */
#define ADI_SPI0_SPICON_CON_Msk           (0x800UL)                 /*!< ADI_SPI0 SPICON: CON (Bitfield-Mask: 0x01)            */
#define ADI_SPI0_SPICON_LOOPBACK_Pos      (10UL)                    /*!< ADI_SPI0 SPICON: LOOPBACK (Bit 10)                    */
#define ADI_SPI0_SPICON_LOOPBACK_Msk      (0x400UL)                 /*!< ADI_SPI0 SPICON: LOOPBACK (Bitfield-Mask: 0x01)       */
#define ADI_SPI0_SPICON_OEN_Pos           (9UL)                     /*!< ADI_SPI0 SPICON: OEN (Bit 9)                          */
#define ADI_SPI0_SPICON_OEN_Msk           (0x200UL)                 /*!< ADI_SPI0 SPICON: OEN (Bitfield-Mask: 0x01)            */
#define ADI_SPI0_SPICON_RXOF_Pos          (8UL)                     /*!< ADI_SPI0 SPICON: RXOF (Bit 8)                         */
#define ADI_SPI0_SPICON_RXOF_Msk          (0x100UL)                 /*!< ADI_SPI0 SPICON: RXOF (Bitfield-Mask: 0x01)           */
#define ADI_SPI0_SPICON_ZEN_Pos           (7UL)                     /*!< ADI_SPI0 SPICON: ZEN (Bit 7)                          */
#define ADI_SPI0_SPICON_ZEN_Msk           (0x80UL)                  /*!< ADI_SPI0 SPICON: ZEN (Bitfield-Mask: 0x01)            */
#define ADI_SPI0_SPICON_TIM_Pos           (6UL)                     /*!< ADI_SPI0 SPICON: TIM (Bit 6)                          */
#define ADI_SPI0_SPICON_TIM_Msk           (0x40UL)                  /*!< ADI_SPI0 SPICON: TIM (Bitfield-Mask: 0x01)            */
#define ADI_SPI0_SPICON_LSB_Pos           (5UL)                     /*!< ADI_SPI0 SPICON: LSB (Bit 5)                          */
#define ADI_SPI0_SPICON_LSB_Msk           (0x20UL)                  /*!< ADI_SPI0 SPICON: LSB (Bitfield-Mask: 0x01)            */
#define ADI_SPI0_SPICON_WOM_Pos           (4UL)                     /*!< ADI_SPI0 SPICON: WOM (Bit 4)                          */
#define ADI_SPI0_SPICON_WOM_Msk           (0x10UL)                  /*!< ADI_SPI0 SPICON: WOM (Bitfield-Mask: 0x01)            */
#define ADI_SPI0_SPICON_CPOL_Pos          (3UL)                     /*!< ADI_SPI0 SPICON: CPOL (Bit 3)                         */
#define ADI_SPI0_SPICON_CPOL_Msk          (0x8UL)                   /*!< ADI_SPI0 SPICON: CPOL (Bitfield-Mask: 0x01)           */
#define ADI_SPI0_SPICON_CPHA_Pos          (2UL)                     /*!< ADI_SPI0 SPICON: CPHA (Bit 2)                         */
#define ADI_SPI0_SPICON_CPHA_Msk          (0x4UL)                   /*!< ADI_SPI0 SPICON: CPHA (Bitfield-Mask: 0x01)           */
#define ADI_SPI0_SPICON_MASEN_Pos         (1UL)                     /*!< ADI_SPI0 SPICON: MASEN (Bit 1)                        */
#define ADI_SPI0_SPICON_MASEN_Msk         (0x2UL)                   /*!< ADI_SPI0 SPICON: MASEN (Bitfield-Mask: 0x01)          */
#define ADI_SPI0_SPICON_ENABLE_Pos        (0UL)                     /*!< ADI_SPI0 SPICON: ENABLE (Bit 0)                       */
#define ADI_SPI0_SPICON_ENABLE_Msk        (0x1UL)                   /*!< ADI_SPI0 SPICON: ENABLE (Bitfield-Mask: 0x01)         */
/* ========================================================  SPIDMA  ========================================================= */
#define ADI_SPI0_SPIDMA_IENRXDMA_Pos      (2UL)                     /*!< ADI_SPI0 SPIDMA: IENRXDMA (Bit 2)                     */
#define ADI_SPI0_SPIDMA_IENRXDMA_Msk      (0x4UL)                   /*!< ADI_SPI0 SPIDMA: IENRXDMA (Bitfield-Mask: 0x01)       */
#define ADI_SPI0_SPIDMA_IENTXDMA_Pos      (1UL)                     /*!< ADI_SPI0 SPIDMA: IENTXDMA (Bit 1)                     */
#define ADI_SPI0_SPIDMA_IENTXDMA_Msk      (0x2UL)                   /*!< ADI_SPI0 SPIDMA: IENTXDMA (Bitfield-Mask: 0x01)       */
#define ADI_SPI0_SPIDMA_ENABLE_Pos        (0UL)                     /*!< ADI_SPI0 SPIDMA: ENABLE (Bit 0)                       */
#define ADI_SPI0_SPIDMA_ENABLE_Msk        (0x1UL)                   /*!< ADI_SPI0 SPIDMA: ENABLE (Bitfield-Mask: 0x01)         */
/* ========================================================  SPICNT  ========================================================= */
#define ADI_SPI0_SPICNT_COUNT_Pos         (0UL)                     /*!< ADI_SPI0 SPICNT: COUNT (Bit 0)                        */
#define ADI_SPI0_SPICNT_COUNT_Msk         (0xffUL)                  /*!< ADI_SPI0 SPICNT: COUNT (Bitfield-Mask: 0xff)          */


/* =========================================================================================================================== */
/* ================                                         ADI_SPI1                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  SPISTA  ========================================================= */
#define ADI_SPI1_SPISTA_CSRSG_Pos         (14UL)                    /*!< ADI_SPI1 SPISTA: CSRSG (Bit 14)                       */
#define ADI_SPI1_SPISTA_CSRSG_Msk         (0x4000UL)                /*!< ADI_SPI1 SPISTA: CSRSG (Bitfield-Mask: 0x01)          */
#define ADI_SPI1_SPISTA_CSFLG_Pos         (13UL)                    /*!< ADI_SPI1 SPISTA: CSFLG (Bit 13)                       */
#define ADI_SPI1_SPISTA_CSFLG_Msk         (0x2000UL)                /*!< ADI_SPI1 SPISTA: CSFLG (Bitfield-Mask: 0x01)          */
#define ADI_SPI1_SPISTA_CSERR_Pos         (12UL)                    /*!< ADI_SPI1 SPISTA: CSERR (Bit 12)                       */
#define ADI_SPI1_SPISTA_CSERR_Msk         (0x1000UL)                /*!< ADI_SPI1 SPISTA: CSERR (Bitfield-Mask: 0x01)          */
#define ADI_SPI1_SPISTA_RXS_Pos           (11UL)                    /*!< ADI_SPI1 SPISTA: RXS (Bit 11)                         */
#define ADI_SPI1_SPISTA_RXS_Msk           (0x800UL)                 /*!< ADI_SPI1 SPISTA: RXS (Bitfield-Mask: 0x01)            */
#define ADI_SPI1_SPISTA_RXFSTA_Pos        (8UL)                     /*!< ADI_SPI1 SPISTA: RXFSTA (Bit 8)                       */
#define ADI_SPI1_SPISTA_RXFSTA_Msk        (0x700UL)                 /*!< ADI_SPI1 SPISTA: RXFSTA (Bitfield-Mask: 0x07)         */
#define ADI_SPI1_SPISTA_RXOF_Pos          (7UL)                     /*!< ADI_SPI1 SPISTA: RXOF (Bit 7)                         */
#define ADI_SPI1_SPISTA_RXOF_Msk          (0x80UL)                  /*!< ADI_SPI1 SPISTA: RXOF (Bitfield-Mask: 0x01)           */
#define ADI_SPI1_SPISTA_RX_Pos            (6UL)                     /*!< ADI_SPI1 SPISTA: RX (Bit 6)                           */
#define ADI_SPI1_SPISTA_RX_Msk            (0x40UL)                  /*!< ADI_SPI1 SPISTA: RX (Bitfield-Mask: 0x01)             */
#define ADI_SPI1_SPISTA_TX_Pos            (5UL)                     /*!< ADI_SPI1 SPISTA: TX (Bit 5)                           */
#define ADI_SPI1_SPISTA_TX_Msk            (0x20UL)                  /*!< ADI_SPI1 SPISTA: TX (Bitfield-Mask: 0x01)             */
#define ADI_SPI1_SPISTA_TXUR_Pos          (4UL)                     /*!< ADI_SPI1 SPISTA: TXUR (Bit 4)                         */
#define ADI_SPI1_SPISTA_TXUR_Msk          (0x10UL)                  /*!< ADI_SPI1 SPISTA: TXUR (Bitfield-Mask: 0x01)           */
#define ADI_SPI1_SPISTA_TXFSTA_Pos        (1UL)                     /*!< ADI_SPI1 SPISTA: TXFSTA (Bit 1)                       */
#define ADI_SPI1_SPISTA_TXFSTA_Msk        (0xeUL)                   /*!< ADI_SPI1 SPISTA: TXFSTA (Bitfield-Mask: 0x07)         */
#define ADI_SPI1_SPISTA_IRQ_Pos           (0UL)                     /*!< ADI_SPI1 SPISTA: IRQ (Bit 0)                          */
#define ADI_SPI1_SPISTA_IRQ_Msk           (0x1UL)                   /*!< ADI_SPI1 SPISTA: IRQ (Bitfield-Mask: 0x01)            */
/* =========================================================  SPIRX  ========================================================= */
#define ADI_SPI1_SPIRX_DMA_Pos            (8UL)                     /*!< ADI_SPI1 SPIRX: DMA (Bit 8)                           */
#define ADI_SPI1_SPIRX_DMA_Msk            (0xff00UL)                /*!< ADI_SPI1 SPIRX: DMA (Bitfield-Mask: 0xff)             */
#define ADI_SPI1_SPIRX_DATA_Pos           (0UL)                     /*!< ADI_SPI1 SPIRX: DATA (Bit 0)                          */
#define ADI_SPI1_SPIRX_DATA_Msk           (0xffUL)                  /*!< ADI_SPI1 SPIRX: DATA (Bitfield-Mask: 0xff)            */
/* =========================================================  SPITX  ========================================================= */
#define ADI_SPI1_SPITX_DMA_Pos            (8UL)                     /*!< ADI_SPI1 SPITX: DMA (Bit 8)                           */
#define ADI_SPI1_SPITX_DMA_Msk            (0xff00UL)                /*!< ADI_SPI1 SPITX: DMA (Bitfield-Mask: 0xff)             */
#define ADI_SPI1_SPITX_DATA_Pos           (0UL)                     /*!< ADI_SPI1 SPITX: DATA (Bit 0)                          */
#define ADI_SPI1_SPITX_DATA_Msk           (0xffUL)                  /*!< ADI_SPI1 SPITX: DATA (Bitfield-Mask: 0xff)            */
/* ========================================================  SPIDIV  ========================================================= */
#define ADI_SPI1_SPIDIV_CSIRQ_Pos         (8UL)                     /*!< ADI_SPI1 SPIDIV: CSIRQ (Bit 8)                        */
#define ADI_SPI1_SPIDIV_CSIRQ_Msk         (0x100UL)                 /*!< ADI_SPI1 SPIDIV: CSIRQ (Bitfield-Mask: 0x01)          */
#define ADI_SPI1_SPIDIV_MD_Pos            (7UL)                     /*!< ADI_SPI1 SPIDIV: MD (Bit 7)                           */
#define ADI_SPI1_SPIDIV_MD_Msk            (0x80UL)                  /*!< ADI_SPI1 SPIDIV: MD (Bitfield-Mask: 0x01)             */
#define ADI_SPI1_SPIDIV_HFM_Pos           (6UL)                     /*!< ADI_SPI1 SPIDIV: HFM (Bit 6)                          */
#define ADI_SPI1_SPIDIV_HFM_Msk           (0x40UL)                  /*!< ADI_SPI1 SPIDIV: HFM (Bitfield-Mask: 0x01)            */
#define ADI_SPI1_SPIDIV_DIV_Pos           (0UL)                     /*!< ADI_SPI1 SPIDIV: DIV (Bit 0)                          */
#define ADI_SPI1_SPIDIV_DIV_Msk           (0x3fUL)                  /*!< ADI_SPI1 SPIDIV: DIV (Bitfield-Mask: 0x3f)            */
/* ========================================================  SPICON  ========================================================= */
#define ADI_SPI1_SPICON_MOD_Pos           (14UL)                    /*!< ADI_SPI1 SPICON: MOD (Bit 14)                         */
#define ADI_SPI1_SPICON_MOD_Msk           (0xc000UL)                /*!< ADI_SPI1 SPICON: MOD (Bitfield-Mask: 0x03)            */
#define ADI_SPI1_SPICON_TFLUSH_Pos        (13UL)                    /*!< ADI_SPI1 SPICON: TFLUSH (Bit 13)                      */
#define ADI_SPI1_SPICON_TFLUSH_Msk        (0x2000UL)                /*!< ADI_SPI1 SPICON: TFLUSH (Bitfield-Mask: 0x01)         */
#define ADI_SPI1_SPICON_RFLUSH_Pos        (12UL)                    /*!< ADI_SPI1 SPICON: RFLUSH (Bit 12)                      */
#define ADI_SPI1_SPICON_RFLUSH_Msk        (0x1000UL)                /*!< ADI_SPI1 SPICON: RFLUSH (Bitfield-Mask: 0x01)         */
#define ADI_SPI1_SPICON_CON_Pos           (11UL)                    /*!< ADI_SPI1 SPICON: CON (Bit 11)                         */
#define ADI_SPI1_SPICON_CON_Msk           (0x800UL)                 /*!< ADI_SPI1 SPICON: CON (Bitfield-Mask: 0x01)            */
#define ADI_SPI1_SPICON_LOOPBACK_Pos      (10UL)                    /*!< ADI_SPI1 SPICON: LOOPBACK (Bit 10)                    */
#define ADI_SPI1_SPICON_LOOPBACK_Msk      (0x400UL)                 /*!< ADI_SPI1 SPICON: LOOPBACK (Bitfield-Mask: 0x01)       */
#define ADI_SPI1_SPICON_OEN_Pos           (9UL)                     /*!< ADI_SPI1 SPICON: OEN (Bit 9)                          */
#define ADI_SPI1_SPICON_OEN_Msk           (0x200UL)                 /*!< ADI_SPI1 SPICON: OEN (Bitfield-Mask: 0x01)            */
#define ADI_SPI1_SPICON_RXOF_Pos          (8UL)                     /*!< ADI_SPI1 SPICON: RXOF (Bit 8)                         */
#define ADI_SPI1_SPICON_RXOF_Msk          (0x100UL)                 /*!< ADI_SPI1 SPICON: RXOF (Bitfield-Mask: 0x01)           */
#define ADI_SPI1_SPICON_ZEN_Pos           (7UL)                     /*!< ADI_SPI1 SPICON: ZEN (Bit 7)                          */
#define ADI_SPI1_SPICON_ZEN_Msk           (0x80UL)                  /*!< ADI_SPI1 SPICON: ZEN (Bitfield-Mask: 0x01)            */
#define ADI_SPI1_SPICON_TIM_Pos           (6UL)                     /*!< ADI_SPI1 SPICON: TIM (Bit 6)                          */
#define ADI_SPI1_SPICON_TIM_Msk           (0x40UL)                  /*!< ADI_SPI1 SPICON: TIM (Bitfield-Mask: 0x01)            */
#define ADI_SPI1_SPICON_LSB_Pos           (5UL)                     /*!< ADI_SPI1 SPICON: LSB (Bit 5)                          */
#define ADI_SPI1_SPICON_LSB_Msk           (0x20UL)                  /*!< ADI_SPI1 SPICON: LSB (Bitfield-Mask: 0x01)            */
#define ADI_SPI1_SPICON_WOM_Pos           (4UL)                     /*!< ADI_SPI1 SPICON: WOM (Bit 4)                          */
#define ADI_SPI1_SPICON_WOM_Msk           (0x10UL)                  /*!< ADI_SPI1 SPICON: WOM (Bitfield-Mask: 0x01)            */
#define ADI_SPI1_SPICON_CPOL_Pos          (3UL)                     /*!< ADI_SPI1 SPICON: CPOL (Bit 3)                         */
#define ADI_SPI1_SPICON_CPOL_Msk          (0x8UL)                   /*!< ADI_SPI1 SPICON: CPOL (Bitfield-Mask: 0x01)           */
#define ADI_SPI1_SPICON_CPHA_Pos          (2UL)                     /*!< ADI_SPI1 SPICON: CPHA (Bit 2)                         */
#define ADI_SPI1_SPICON_CPHA_Msk          (0x4UL)                   /*!< ADI_SPI1 SPICON: CPHA (Bitfield-Mask: 0x01)           */
#define ADI_SPI1_SPICON_MASEN_Pos         (1UL)                     /*!< ADI_SPI1 SPICON: MASEN (Bit 1)                        */
#define ADI_SPI1_SPICON_MASEN_Msk         (0x2UL)                   /*!< ADI_SPI1 SPICON: MASEN (Bitfield-Mask: 0x01)          */
#define ADI_SPI1_SPICON_ENABLE_Pos        (0UL)                     /*!< ADI_SPI1 SPICON: ENABLE (Bit 0)                       */
#define ADI_SPI1_SPICON_ENABLE_Msk        (0x1UL)                   /*!< ADI_SPI1 SPICON: ENABLE (Bitfield-Mask: 0x01)         */
/* ========================================================  SPIDMA  ========================================================= */
#define ADI_SPI1_SPIDMA_IENRXDMA_Pos      (2UL)                     /*!< ADI_SPI1 SPIDMA: IENRXDMA (Bit 2)                     */
#define ADI_SPI1_SPIDMA_IENRXDMA_Msk      (0x4UL)                   /*!< ADI_SPI1 SPIDMA: IENRXDMA (Bitfield-Mask: 0x01)       */
#define ADI_SPI1_SPIDMA_IENTXDMA_Pos      (1UL)                     /*!< ADI_SPI1 SPIDMA: IENTXDMA (Bit 1)                     */
#define ADI_SPI1_SPIDMA_IENTXDMA_Msk      (0x2UL)                   /*!< ADI_SPI1 SPIDMA: IENTXDMA (Bitfield-Mask: 0x01)       */
#define ADI_SPI1_SPIDMA_ENABLE_Pos        (0UL)                     /*!< ADI_SPI1 SPIDMA: ENABLE (Bit 0)                       */
#define ADI_SPI1_SPIDMA_ENABLE_Msk        (0x1UL)                   /*!< ADI_SPI1 SPIDMA: ENABLE (Bitfield-Mask: 0x01)         */
/* ========================================================  SPICNT  ========================================================= */
#define ADI_SPI1_SPICNT_COUNT_Pos         (0UL)                     /*!< ADI_SPI1 SPICNT: COUNT (Bit 0)                        */
#define ADI_SPI1_SPICNT_COUNT_Msk         (0xffUL)                  /*!< ADI_SPI1 SPICNT: COUNT (Bitfield-Mask: 0xff)          */


/* =========================================================================================================================== */
/* ================                                         ADI_UART                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  COMRX  ========================================================= */
#define ADI_UART_COMRX_RBR_Pos            (0UL)                     /*!< ADI_UART COMRX: RBR (Bit 0)                           */
#define ADI_UART_COMRX_RBR_Msk            (0x1UL)                   /*!< ADI_UART COMRX: RBR (Bitfield-Mask: 0x01)             */
/* ========================================================  COMIEN  ========================================================= */
#define ADI_UART_COMIEN_EDMAR_Pos         (5UL)                     /*!< ADI_UART COMIEN: EDMAR (Bit 5)                        */
#define ADI_UART_COMIEN_EDMAR_Msk         (0x20UL)                  /*!< ADI_UART COMIEN: EDMAR (Bitfield-Mask: 0x01)          */
#define ADI_UART_COMIEN_EDMAT_Pos         (4UL)                     /*!< ADI_UART COMIEN: EDMAT (Bit 4)                        */
#define ADI_UART_COMIEN_EDMAT_Msk         (0x10UL)                  /*!< ADI_UART COMIEN: EDMAT (Bitfield-Mask: 0x01)          */
#define ADI_UART_COMIEN_EDSSI_Pos         (3UL)                     /*!< ADI_UART COMIEN: EDSSI (Bit 3)                        */
#define ADI_UART_COMIEN_EDSSI_Msk         (0x8UL)                   /*!< ADI_UART COMIEN: EDSSI (Bitfield-Mask: 0x01)          */
#define ADI_UART_COMIEN_ELSI_Pos          (2UL)                     /*!< ADI_UART COMIEN: ELSI (Bit 2)                         */
#define ADI_UART_COMIEN_ELSI_Msk          (0x4UL)                   /*!< ADI_UART COMIEN: ELSI (Bitfield-Mask: 0x01)           */
#define ADI_UART_COMIEN_ETBEI_Pos         (1UL)                     /*!< ADI_UART COMIEN: ETBEI (Bit 1)                        */
#define ADI_UART_COMIEN_ETBEI_Msk         (0x2UL)                   /*!< ADI_UART COMIEN: ETBEI (Bitfield-Mask: 0x01)          */
#define ADI_UART_COMIEN_ERBFI_Pos         (0UL)                     /*!< ADI_UART COMIEN: ERBFI (Bit 0)                        */
#define ADI_UART_COMIEN_ERBFI_Msk         (0x1UL)                   /*!< ADI_UART COMIEN: ERBFI (Bitfield-Mask: 0x01)          */
/* ========================================================  COMIIR  ========================================================= */
#define ADI_UART_COMIIR_STA_Pos           (1UL)                     /*!< ADI_UART COMIIR: STA (Bit 1)                          */
#define ADI_UART_COMIIR_STA_Msk           (0x2UL)                   /*!< ADI_UART COMIIR: STA (Bitfield-Mask: 0x01)            */
#define ADI_UART_COMIIR_NIRQ_Pos          (0UL)                     /*!< ADI_UART COMIIR: NIRQ (Bit 0)                         */
#define ADI_UART_COMIIR_NIRQ_Msk          (0x1UL)                   /*!< ADI_UART COMIIR: NIRQ (Bitfield-Mask: 0x01)           */
/* ========================================================  COMLCR  ========================================================= */
#define ADI_UART_COMLCR_BRK_Pos           (6UL)                     /*!< ADI_UART COMLCR: BRK (Bit 6)                          */
#define ADI_UART_COMLCR_BRK_Msk           (0x40UL)                  /*!< ADI_UART COMLCR: BRK (Bitfield-Mask: 0x01)            */
#define ADI_UART_COMLCR_SP_Pos            (5UL)                     /*!< ADI_UART COMLCR: SP (Bit 5)                           */
#define ADI_UART_COMLCR_SP_Msk            (0x20UL)                  /*!< ADI_UART COMLCR: SP (Bitfield-Mask: 0x01)             */
#define ADI_UART_COMLCR_EPS_Pos           (4UL)                     /*!< ADI_UART COMLCR: EPS (Bit 4)                          */
#define ADI_UART_COMLCR_EPS_Msk           (0x10UL)                  /*!< ADI_UART COMLCR: EPS (Bitfield-Mask: 0x01)            */
#define ADI_UART_COMLCR_PEN_Pos           (3UL)                     /*!< ADI_UART COMLCR: PEN (Bit 3)                          */
#define ADI_UART_COMLCR_PEN_Msk           (0x8UL)                   /*!< ADI_UART COMLCR: PEN (Bitfield-Mask: 0x01)            */
#define ADI_UART_COMLCR_STOP_Pos          (2UL)                     /*!< ADI_UART COMLCR: STOP (Bit 2)                         */
#define ADI_UART_COMLCR_STOP_Msk          (0x4UL)                   /*!< ADI_UART COMLCR: STOP (Bitfield-Mask: 0x01)           */
#define ADI_UART_COMLCR_WLS_Pos           (0UL)                     /*!< ADI_UART COMLCR: WLS (Bit 0)                          */
#define ADI_UART_COMLCR_WLS_Msk           (0x1UL)                   /*!< ADI_UART COMLCR: WLS (Bitfield-Mask: 0x01)            */
/* ========================================================  COMMCR  ========================================================= */
#define ADI_UART_COMMCR_LOOPBACK_Pos      (4UL)                     /*!< ADI_UART COMMCR: LOOPBACK (Bit 4)                     */
#define ADI_UART_COMMCR_LOOPBACK_Msk      (0x10UL)                  /*!< ADI_UART COMMCR: LOOPBACK (Bitfield-Mask: 0x01)       */
#define ADI_UART_COMMCR_OUT2_Pos          (3UL)                     /*!< ADI_UART COMMCR: OUT2 (Bit 3)                         */
#define ADI_UART_COMMCR_OUT2_Msk          (0x8UL)                   /*!< ADI_UART COMMCR: OUT2 (Bitfield-Mask: 0x01)           */
#define ADI_UART_COMMCR_OUT1_Pos          (2UL)                     /*!< ADI_UART COMMCR: OUT1 (Bit 2)                         */
#define ADI_UART_COMMCR_OUT1_Msk          (0x4UL)                   /*!< ADI_UART COMMCR: OUT1 (Bitfield-Mask: 0x01)           */
#define ADI_UART_COMMCR_RTS_Pos           (1UL)                     /*!< ADI_UART COMMCR: RTS (Bit 1)                          */
#define ADI_UART_COMMCR_RTS_Msk           (0x2UL)                   /*!< ADI_UART COMMCR: RTS (Bitfield-Mask: 0x01)            */
#define ADI_UART_COMMCR_DTR_Pos           (0UL)                     /*!< ADI_UART COMMCR: DTR (Bit 0)                          */
#define ADI_UART_COMMCR_DTR_Msk           (0x1UL)                   /*!< ADI_UART COMMCR: DTR (Bitfield-Mask: 0x01)            */
/* ========================================================  COMLSR  ========================================================= */
#define ADI_UART_COMLSR_TEMT_Pos          (6UL)                     /*!< ADI_UART COMLSR: TEMT (Bit 6)                         */
#define ADI_UART_COMLSR_TEMT_Msk          (0x40UL)                  /*!< ADI_UART COMLSR: TEMT (Bitfield-Mask: 0x01)           */
#define ADI_UART_COMLSR_THRE_Pos          (5UL)                     /*!< ADI_UART COMLSR: THRE (Bit 5)                         */
#define ADI_UART_COMLSR_THRE_Msk          (0x20UL)                  /*!< ADI_UART COMLSR: THRE (Bitfield-Mask: 0x01)           */
#define ADI_UART_COMLSR_BI_Pos            (4UL)                     /*!< ADI_UART COMLSR: BI (Bit 4)                           */
#define ADI_UART_COMLSR_BI_Msk            (0x10UL)                  /*!< ADI_UART COMLSR: BI (Bitfield-Mask: 0x01)             */
#define ADI_UART_COMLSR_FE_Pos            (3UL)                     /*!< ADI_UART COMLSR: FE (Bit 3)                           */
#define ADI_UART_COMLSR_FE_Msk            (0x8UL)                   /*!< ADI_UART COMLSR: FE (Bitfield-Mask: 0x01)             */
#define ADI_UART_COMLSR_PE_Pos            (2UL)                     /*!< ADI_UART COMLSR: PE (Bit 2)                           */
#define ADI_UART_COMLSR_PE_Msk            (0x4UL)                   /*!< ADI_UART COMLSR: PE (Bitfield-Mask: 0x01)             */
#define ADI_UART_COMLSR_OE_Pos            (1UL)                     /*!< ADI_UART COMLSR: OE (Bit 1)                           */
#define ADI_UART_COMLSR_OE_Msk            (0x2UL)                   /*!< ADI_UART COMLSR: OE (Bitfield-Mask: 0x01)             */
#define ADI_UART_COMLSR_DR_Pos            (0UL)                     /*!< ADI_UART COMLSR: DR (Bit 0)                           */
#define ADI_UART_COMLSR_DR_Msk            (0x1UL)                   /*!< ADI_UART COMLSR: DR (Bitfield-Mask: 0x01)             */
/* ========================================================  COMMSR  ========================================================= */
#define ADI_UART_COMMSR_DCD_Pos           (7UL)                     /*!< ADI_UART COMMSR: DCD (Bit 7)                          */
#define ADI_UART_COMMSR_DCD_Msk           (0x80UL)                  /*!< ADI_UART COMMSR: DCD (Bitfield-Mask: 0x01)            */
#define ADI_UART_COMMSR_RI_Pos            (6UL)                     /*!< ADI_UART COMMSR: RI (Bit 6)                           */
#define ADI_UART_COMMSR_RI_Msk            (0x40UL)                  /*!< ADI_UART COMMSR: RI (Bitfield-Mask: 0x01)             */
#define ADI_UART_COMMSR_DSR_Pos           (5UL)                     /*!< ADI_UART COMMSR: DSR (Bit 5)                          */
#define ADI_UART_COMMSR_DSR_Msk           (0x20UL)                  /*!< ADI_UART COMMSR: DSR (Bitfield-Mask: 0x01)            */
#define ADI_UART_COMMSR_CTS_Pos           (4UL)                     /*!< ADI_UART COMMSR: CTS (Bit 4)                          */
#define ADI_UART_COMMSR_CTS_Msk           (0x10UL)                  /*!< ADI_UART COMMSR: CTS (Bitfield-Mask: 0x01)            */
#define ADI_UART_COMMSR_DDCD_Pos          (3UL)                     /*!< ADI_UART COMMSR: DDCD (Bit 3)                         */
#define ADI_UART_COMMSR_DDCD_Msk          (0x8UL)                   /*!< ADI_UART COMMSR: DDCD (Bitfield-Mask: 0x01)           */
#define ADI_UART_COMMSR_TERI_Pos          (2UL)                     /*!< ADI_UART COMMSR: TERI (Bit 2)                         */
#define ADI_UART_COMMSR_TERI_Msk          (0x4UL)                   /*!< ADI_UART COMMSR: TERI (Bitfield-Mask: 0x01)           */
#define ADI_UART_COMMSR_DDSR_Pos          (1UL)                     /*!< ADI_UART COMMSR: DDSR (Bit 1)                         */
#define ADI_UART_COMMSR_DDSR_Msk          (0x2UL)                   /*!< ADI_UART COMMSR: DDSR (Bitfield-Mask: 0x01)           */
#define ADI_UART_COMMSR_DCTS_Pos          (0UL)                     /*!< ADI_UART COMMSR: DCTS (Bit 0)                         */
#define ADI_UART_COMMSR_DCTS_Msk          (0x1UL)                   /*!< ADI_UART COMMSR: DCTS (Bitfield-Mask: 0x01)           */
/* ========================================================  COMSCR  ========================================================= */
#define ADI_UART_COMSCR_SCR_Pos           (0UL)                     /*!< ADI_UART COMSCR: SCR (Bit 0)                          */
#define ADI_UART_COMSCR_SCR_Msk           (0x1UL)                   /*!< ADI_UART COMSCR: SCR (Bitfield-Mask: 0x01)            */
/* ========================================================  COMFBR  ========================================================= */
#define ADI_UART_COMFBR_FBEN_Pos          (15UL)                    /*!< ADI_UART COMFBR: FBEN (Bit 15)                        */
#define ADI_UART_COMFBR_FBEN_Msk          (0x8000UL)                /*!< ADI_UART COMFBR: FBEN (Bitfield-Mask: 0x01)           */
#define ADI_UART_COMFBR_DIVM_Pos          (11UL)                    /*!< ADI_UART COMFBR: DIVM (Bit 11)                        */
#define ADI_UART_COMFBR_DIVM_Msk          (0x800UL)                 /*!< ADI_UART COMFBR: DIVM (Bitfield-Mask: 0x01)           */
#define ADI_UART_COMFBR_DIVN_Pos          (0UL)                     /*!< ADI_UART COMFBR: DIVN (Bit 0)                         */
#define ADI_UART_COMFBR_DIVN_Msk          (0x1UL)                   /*!< ADI_UART COMFBR: DIVN (Bitfield-Mask: 0x01)           */
/* ========================================================  COMDIV  ========================================================= */


/* =========================================================================================================================== */
/* ================                                          ADI_I2S                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  OUT1L  ========================================================= */
#define ADI_I2S_OUT1L_OUT1_LSB_Pos        (8UL)                     /*!< ADI_I2S OUT1L: OUT1_LSB (Bit 8)                       */
#define ADI_I2S_OUT1L_OUT1_LSB_Msk        (0xff00UL)                /*!< ADI_I2S OUT1L: OUT1_LSB (Bitfield-Mask: 0xff)         */
/* =========================================================  OUT1H  ========================================================= */
#define ADI_I2S_OUT1H_OUT1_MSB_Pos        (8UL)                     /*!< ADI_I2S OUT1H: OUT1_MSB (Bit 8)                       */
#define ADI_I2S_OUT1H_OUT1_MSB_Msk        (0xff00UL)                /*!< ADI_I2S OUT1H: OUT1_MSB (Bitfield-Mask: 0xff)         */
/* =========================================================  OUT2L  ========================================================= */
#define ADI_I2S_OUT2L_OUT2_LSB_Pos        (8UL)                     /*!< ADI_I2S OUT2L: OUT2_LSB (Bit 8)                       */
#define ADI_I2S_OUT2L_OUT2_LSB_Msk        (0xff00UL)                /*!< ADI_I2S OUT2L: OUT2_LSB (Bitfield-Mask: 0xff)         */
/* =========================================================  OUT2H  ========================================================= */
#define ADI_I2S_OUT2H_OUT2_MSB_Pos        (8UL)                     /*!< ADI_I2S OUT2H: OUT2_MSB (Bit 8)                       */
#define ADI_I2S_OUT2H_OUT2_MSB_Msk        (0xff00UL)                /*!< ADI_I2S OUT2H: OUT2_MSB (Bitfield-Mask: 0xff)         */
/* =========================================================  MODE1  ========================================================= */
/* =========================================================  MODE2  ========================================================= */
/* =========================================================  CFG1  ========================================================== */
/* =========================================================  CFG2  ========================================================== */
/* =========================================================  STAT  ========================================================== */


/* =========================================================================================================================== */
/* ================                                         ADI_BEEP                                          ================ */
/* =========================================================================================================================== */

/* =======================================================  BEEP_CFG  ======================================================== */
/* =========================================================  STAT  ========================================================== */
/* ========================================================  TONE_A  ========================================================= */
/* ========================================================  TONE_B  ========================================================= */


/* =========================================================================================================================== */
/* ================                                          ADI_RNG                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  RNGCTL  ========================================================= */
#define ADI_RNG_RNGCTL_TMRMODE_Pos        (2UL)                     /*!< ADI_RNG RNGCTL: TMRMODE (Bit 2)                       */
#define ADI_RNG_RNGCTL_TMRMODE_Msk        (0x4UL)                   /*!< ADI_RNG RNGCTL: TMRMODE (Bitfield-Mask: 0x01)         */
#define ADI_RNG_RNGCTL_CNTEN_Pos          (1UL)                     /*!< ADI_RNG RNGCTL: CNTEN (Bit 1)                         */
#define ADI_RNG_RNGCTL_CNTEN_Msk          (0x2UL)                   /*!< ADI_RNG RNGCTL: CNTEN (Bitfield-Mask: 0x01)           */
#define ADI_RNG_RNGCTL_RNGEN_Pos          (0UL)                     /*!< ADI_RNG RNGCTL: RNGEN (Bit 0)                         */
#define ADI_RNG_RNGCTL_RNGEN_Msk          (0x1UL)                   /*!< ADI_RNG RNGCTL: RNGEN (Bitfield-Mask: 0x01)           */
/* ========================================================  RNGLEN  ========================================================= */
#define ADI_RNG_RNGLEN_LENPRE_Pos         (12UL)                    /*!< ADI_RNG RNGLEN: LENPRE (Bit 12)                       */
#define ADI_RNG_RNGLEN_LENPRE_Msk         (0xf000UL)                /*!< ADI_RNG RNGLEN: LENPRE (Bitfield-Mask: 0x0f)          */
#define ADI_RNG_RNGLEN_LENRLD_Pos         (0UL)                     /*!< ADI_RNG RNGLEN: LENRLD (Bit 0)                        */
#define ADI_RNG_RNGLEN_LENRLD_Msk         (0xfffUL)                 /*!< ADI_RNG RNGLEN: LENRLD (Bitfield-Mask: 0xfff)         */
/* ========================================================  RNGSTAT  ======================================================== */
#define ADI_RNG_RNGSTAT_RNGRDY_Pos        (0UL)                     /*!< ADI_RNG RNGSTAT: RNGRDY (Bit 0)                       */
#define ADI_RNG_RNGSTAT_RNGRDY_Msk        (0x1UL)                   /*!< ADI_RNG RNGSTAT: RNGRDY (Bitfield-Mask: 0x01)         */
/* ========================================================  RNGDATA  ======================================================== */
/* ========================================================  RNGCNTL  ======================================================== */
/* ========================================================  RNGCNTH  ======================================================== */
#define ADI_RNG_RNGCNTH_RNGCNTH_Pos       (0UL)                     /*!< ADI_RNG RNGCNTH: RNGCNTH (Bit 0)                      */
#define ADI_RNG_RNGCNTH_RNGCNTH_Msk       (0xfffUL)                 /*!< ADI_RNG RNGCNTH: RNGCNTH (Bitfield-Mask: 0xfff)       */


/* =========================================================================================================================== */
/* ================                                          ADI_LCD                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  LCDCON  ========================================================= */
#define ADI_LCD_LCDCON_BLINKEN_Pos        (12UL)                    /*!< ADI_LCD LCDCON: BLINKEN (Bit 12)                      */
#define ADI_LCD_LCDCON_BLINKEN_Msk        (0x1000UL)                /*!< ADI_LCD LCDCON: BLINKEN (Bitfield-Mask: 0x01)         */
#define ADI_LCD_LCDCON_CPINT_Pos          (11UL)                    /*!< ADI_LCD LCDCON: CPINT (Bit 11)                        */
#define ADI_LCD_LCDCON_CPINT_Msk          (0x800UL)                 /*!< ADI_LCD LCDCON: CPINT (Bitfield-Mask: 0x01)           */
#define ADI_LCD_LCDCON_FRAMEINT_Pos       (10UL)                    /*!< ADI_LCD LCDCON: FRAMEINT (Bit 10)                     */
#define ADI_LCD_LCDCON_FRAMEINT_Msk       (0x400UL)                 /*!< ADI_LCD LCDCON: FRAMEINT (Bitfield-Mask: 0x01)        */
#define ADI_LCD_LCDCON_LCDRST_Pos         (9UL)                     /*!< ADI_LCD LCDCON: LCDRST (Bit 9)                        */
#define ADI_LCD_LCDCON_LCDRST_Msk         (0x200UL)                 /*!< ADI_LCD LCDCON: LCDRST (Bitfield-Mask: 0x01)          */
#define ADI_LCD_LCDCON_FRAMEINV_Pos       (8UL)                     /*!< ADI_LCD LCDCON: FRAMEINV (Bit 8)                      */
#define ADI_LCD_LCDCON_FRAMEINV_Msk       (0x100UL)                 /*!< ADI_LCD LCDCON: FRAMEINV (Bitfield-Mask: 0x01)        */
#define ADI_LCD_LCDCON_FRAMESEL_Pos       (4UL)                     /*!< ADI_LCD LCDCON: FRAMESEL (Bit 4)                      */
#define ADI_LCD_LCDCON_FRAMESEL_Msk       (0x10UL)                  /*!< ADI_LCD LCDCON: FRAMESEL (Bitfield-Mask: 0x01)        */
#define ADI_LCD_LCDCON_SCREENSEL_Pos      (3UL)                     /*!< ADI_LCD LCDCON: SCREENSEL (Bit 3)                     */
#define ADI_LCD_LCDCON_SCREENSEL_Msk      (0x8UL)                   /*!< ADI_LCD LCDCON: SCREENSEL (Bitfield-Mask: 0x01)       */
#define ADI_LCD_LCDCON_LCDMUX_Pos         (1UL)                     /*!< ADI_LCD LCDCON: LCDMUX (Bit 1)                        */
#define ADI_LCD_LCDCON_LCDMUX_Msk         (0x2UL)                   /*!< ADI_LCD LCDCON: LCDMUX (Bitfield-Mask: 0x01)          */
#define ADI_LCD_LCDCON_LCDEN_Pos          (0UL)                     /*!< ADI_LCD LCDCON: LCDEN (Bit 0)                         */
#define ADI_LCD_LCDCON_LCDEN_Msk          (0x1UL)                   /*!< ADI_LCD LCDCON: LCDEN (Bitfield-Mask: 0x01)           */
/* ========================================================  LCDSTAT  ======================================================== */
#define ADI_LCD_LCDSTAT_LCD_Pos           (4UL)                     /*!< ADI_LCD LCDSTAT: LCD (Bit 4)                          */
#define ADI_LCD_LCDSTAT_LCD_Msk           (0x10UL)                  /*!< ADI_LCD LCDSTAT: LCD (Bitfield-Mask: 0x01)            */
#define ADI_LCD_LCDSTAT_VLCD_Pos          (3UL)                     /*!< ADI_LCD LCDSTAT: VLCD (Bit 3)                         */
#define ADI_LCD_LCDSTAT_VLCD_Msk          (0x8UL)                   /*!< ADI_LCD LCDSTAT: VLCD (Bitfield-Mask: 0x01)           */
#define ADI_LCD_LCDSTAT_CP_Pos            (2UL)                     /*!< ADI_LCD LCDSTAT: CP (Bit 2)                           */
#define ADI_LCD_LCDSTAT_CP_Msk            (0x4UL)                   /*!< ADI_LCD LCDSTAT: CP (Bitfield-Mask: 0x01)             */
#define ADI_LCD_LCDSTAT_SAFE_Pos          (1UL)                     /*!< ADI_LCD LCDSTAT: SAFE (Bit 1)                         */
#define ADI_LCD_LCDSTAT_SAFE_Msk          (0x2UL)                   /*!< ADI_LCD LCDSTAT: SAFE (Bitfield-Mask: 0x01)           */
#define ADI_LCD_LCDSTAT_FRAMEINT_Pos      (0UL)                     /*!< ADI_LCD LCDSTAT: FRAMEINT (Bit 0)                     */
#define ADI_LCD_LCDSTAT_FRAMEINT_Msk      (0x1UL)                   /*!< ADI_LCD LCDSTAT: FRAMEINT (Bitfield-Mask: 0x01)       */
/* =======================================================  LCDBLINK  ======================================================== */
#define ADI_LCD_LCDBLINK_AUTOSWITCH_Pos   (5UL)                     /*!< ADI_LCD LCDBLINK: AUTOSWITCH (Bit 5)                  */
#define ADI_LCD_LCDBLINK_AUTOSWITCH_Msk   (0x20UL)                  /*!< ADI_LCD LCDBLINK: AUTOSWITCH (Bitfield-Mask: 0x01)    */
#define ADI_LCD_LCDBLINK_BLKFREQ_Pos      (2UL)                     /*!< ADI_LCD LCDBLINK: BLKFREQ (Bit 2)                     */
#define ADI_LCD_LCDBLINK_BLKFREQ_Msk      (0x4UL)                   /*!< ADI_LCD LCDBLINK: BLKFREQ (Bitfield-Mask: 0x01)       */
#define ADI_LCD_LCDBLINK_BLKMOD_Pos       (0UL)                     /*!< ADI_LCD LCDBLINK: BLKMOD (Bit 0)                      */
#define ADI_LCD_LCDBLINK_BLKMOD_Msk       (0x1UL)                   /*!< ADI_LCD LCDBLINK: BLKMOD (Bitfield-Mask: 0x01)        */
/* ======================================================  LCDCONTRAST  ====================================================== */
#define ADI_LCD_LCDCONTRAST_CP_PD_Pos     (6UL)                     /*!< ADI_LCD LCDCONTRAST: CP_PD (Bit 6)                    */
#define ADI_LCD_LCDCONTRAST_CP_PD_Msk     (0x40UL)                  /*!< ADI_LCD LCDCONTRAST: CP_PD (Bitfield-Mask: 0x01)      */
#define ADI_LCD_LCDCONTRAST_CP_EN_Pos     (5UL)                     /*!< ADI_LCD LCDCONTRAST: CP_EN (Bit 5)                    */
#define ADI_LCD_LCDCONTRAST_CP_EN_Msk     (0x20UL)                  /*!< ADI_LCD LCDCONTRAST: CP_EN (Bitfield-Mask: 0x01)      */
#define ADI_LCD_LCDCONTRAST_BIASLVL_Pos   (0UL)                     /*!< ADI_LCD LCDCONTRAST: BIASLVL (Bit 0)                  */
#define ADI_LCD_LCDCONTRAST_BIASLVL_Msk   (0xfUL)                   /*!< ADI_LCD LCDCONTRAST: BIASLVL (Bitfield-Mask: 0x0f)    */
/* ======================================================  LCDDATA0_S0  ====================================================== */
/* ======================================================  LCDDATA1_S0  ====================================================== */
/* ======================================================  LCDDATA2_S0  ====================================================== */
/* ======================================================  LCDDATA3_S0  ====================================================== */
/* ======================================================  LCDDATA4_S0  ====================================================== */
/* ======================================================  LCDDATA5_S0  ====================================================== */
/* ======================================================  LCDDATA6_S0  ====================================================== */
/* ======================================================  LCDDATA7_S0  ====================================================== */
/* ======================================================  LCDDATA0_S1  ====================================================== */
/* ======================================================  LCDDATA1_S1  ====================================================== */
/* ======================================================  LCDDATA2_S1  ====================================================== */
/* ======================================================  LCDDATA3_S1  ====================================================== */
/* ======================================================  LCDDATA4_S1  ====================================================== */
/* ======================================================  LCDDATA5_S1  ====================================================== */
/* ======================================================  LCDDATA6_S1  ====================================================== */
/* ======================================================  LCDDATA7_S1  ====================================================== */


/* =========================================================================================================================== */
/* ================                                          ADI_DMA                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  DMASTA  ========================================================= */
#define ADI_DMA_DMASTA_CHNLSM1_Pos        (16UL)                    /*!< ADI_DMA DMASTA: CHNLSM1 (Bit 16)                      */
#define ADI_DMA_DMASTA_CHNLSM1_Msk        (0x10000UL)               /*!< ADI_DMA DMASTA: CHNLSM1 (Bitfield-Mask: 0x01)         */
#define ADI_DMA_DMASTA_STATE_Pos          (4UL)                     /*!< ADI_DMA DMASTA: STATE (Bit 4)                         */
#define ADI_DMA_DMASTA_STATE_Msk          (0x10UL)                  /*!< ADI_DMA DMASTA: STATE (Bitfield-Mask: 0x01)           */
#define ADI_DMA_DMASTA_MENABLE_Pos        (0UL)                     /*!< ADI_DMA DMASTA: MENABLE (Bit 0)                       */
#define ADI_DMA_DMASTA_MENABLE_Msk        (0x1UL)                   /*!< ADI_DMA DMASTA: MENABLE (Bitfield-Mask: 0x01)         */
/* ========================================================  DMACFG  ========================================================= */
#define ADI_DMA_DMACFG_MENABLE_Pos        (0UL)                     /*!< ADI_DMA DMACFG: MENABLE (Bit 0)                       */
#define ADI_DMA_DMACFG_MENABLE_Msk        (0x1UL)                   /*!< ADI_DMA DMACFG: MENABLE (Bitfield-Mask: 0x01)         */
/* =======================================================  DMAPDBPTR  ======================================================= */
/* =======================================================  DMAADBPTR  ======================================================= */
/* =======================================================  DMASWREQ  ======================================================== */
#define ADI_DMA_DMASWREQ_CHSWREQ_Pos      (0UL)                     /*!< ADI_DMA DMASWREQ: CHSWREQ (Bit 0)                     */
#define ADI_DMA_DMASWREQ_CHSWREQ_Msk      (0xffffUL)                /*!< ADI_DMA DMASWREQ: CHSWREQ (Bitfield-Mask: 0xffff)     */
/* ======================================================  DMARMSKSET  ======================================================= */
#define ADI_DMA_DMARMSKSET_CHREQMSET_Pos  (0UL)                     /*!< ADI_DMA DMARMSKSET: CHREQMSET (Bit 0)                 */
#define ADI_DMA_DMARMSKSET_CHREQMSET_Msk  (0xffffUL)                /*!< ADI_DMA DMARMSKSET: CHREQMSET (Bitfield-Mask: 0xffff) */
/* ======================================================  DMARMSKCLR  ======================================================= */
#define ADI_DMA_DMARMSKCLR_CHREQMCLR_Pos  (0UL)                     /*!< ADI_DMA DMARMSKCLR: CHREQMCLR (Bit 0)                 */
#define ADI_DMA_DMARMSKCLR_CHREQMCLR_Msk  (0xffffUL)                /*!< ADI_DMA DMARMSKCLR: CHREQMCLR (Bitfield-Mask: 0xffff) */
/* =======================================================  DMAENSET  ======================================================== */
#define ADI_DMA_DMAENSET_CHENSET_Pos      (0UL)                     /*!< ADI_DMA DMAENSET: CHENSET (Bit 0)                     */
#define ADI_DMA_DMAENSET_CHENSET_Msk      (0xffffUL)                /*!< ADI_DMA DMAENSET: CHENSET (Bitfield-Mask: 0xffff)     */
/* =======================================================  DMAENCLR  ======================================================== */
#define ADI_DMA_DMAENCLR_CHENCLR_Pos      (0UL)                     /*!< ADI_DMA DMAENCLR: CHENCLR (Bit 0)                     */
#define ADI_DMA_DMAENCLR_CHENCLR_Msk      (0xffffUL)                /*!< ADI_DMA DMAENCLR: CHENCLR (Bitfield-Mask: 0xffff)     */
/* =======================================================  DMAALTSET  ======================================================= */
#define ADI_DMA_DMAALTSET_CHPRIALTSET_Pos (0UL)                     /*!< ADI_DMA DMAALTSET: CHPRIALTSET (Bit 0)                */
#define ADI_DMA_DMAALTSET_CHPRIALTSET_Msk (0xffffUL)                /*!< ADI_DMA DMAALTSET: CHPRIALTSET (Bitfield-Mask: 0xffff) */
/* =======================================================  DMAALTCLR  ======================================================= */
#define ADI_DMA_DMAALTCLR_CHPRIALTCLR_Pos (0UL)                     /*!< ADI_DMA DMAALTCLR: CHPRIALTCLR (Bit 0)                */
#define ADI_DMA_DMAALTCLR_CHPRIALTCLR_Msk (0xffffUL)                /*!< ADI_DMA DMAALTCLR: CHPRIALTCLR (Bitfield-Mask: 0xffff) */
/* =======================================================  DMAPRISET  ======================================================= */
#define ADI_DMA_DMAPRISET_CHPRISET_Pos    (0UL)                     /*!< ADI_DMA DMAPRISET: CHPRISET (Bit 0)                   */
#define ADI_DMA_DMAPRISET_CHPRISET_Msk    (0xffffUL)                /*!< ADI_DMA DMAPRISET: CHPRISET (Bitfield-Mask: 0xffff)   */
/* =======================================================  DMAPRICLR  ======================================================= */
#define ADI_DMA_DMAPRICLR_CHPRICLR_Pos    (0UL)                     /*!< ADI_DMA DMAPRICLR: CHPRICLR (Bit 0)                   */
#define ADI_DMA_DMAPRICLR_CHPRICLR_Msk    (0xffffUL)                /*!< ADI_DMA DMAPRICLR: CHPRICLR (Bitfield-Mask: 0xffff)   */
/* =====================================================  DMAERRCHNLCLR  ===================================================== */
#define ADI_DMA_DMAERRCHNLCLR_CHNL_Pos    (0UL)                     /*!< ADI_DMA DMAERRCHNLCLR: CHNL (Bit 0)                   */
#define ADI_DMA_DMAERRCHNLCLR_CHNL_Msk    (0xffffUL)                /*!< ADI_DMA DMAERRCHNLCLR: CHNL (Bitfield-Mask: 0xffff)   */
/* =======================================================  DMAERRCLR  ======================================================= */
#define ADI_DMA_DMAERRCLR_ERRCLR_Pos      (0UL)                     /*!< ADI_DMA DMAERRCLR: ERRCLR (Bit 0)                     */
#define ADI_DMA_DMAERRCLR_ERRCLR_Msk      (0xffffUL)                /*!< ADI_DMA DMAERRCLR: ERRCLR (Bitfield-Mask: 0xffff)     */
/* ===================================================  DMAINVALIDDESCCLR  =================================================== */
#define ADI_DMA_DMAINVALIDDESCCLR_CHNL_Pos (0UL)                    /*!< ADI_DMA DMAINVALIDDESCCLR: CHNL (Bit 0)               */
#define ADI_DMA_DMAINVALIDDESCCLR_CHNL_Msk (0xffffUL)               /*!< ADI_DMA DMAINVALIDDESCCLR: CHNL (Bitfield-Mask: 0xffff) */
/* =======================================================  DMABSSET  ======================================================== */
#define ADI_DMA_DMABSSET_CHBSWAPSET_Pos   (0UL)                     /*!< ADI_DMA DMABSSET: CHBSWAPSET (Bit 0)                  */
#define ADI_DMA_DMABSSET_CHBSWAPSET_Msk   (0xffffUL)                /*!< ADI_DMA DMABSSET: CHBSWAPSET (Bitfield-Mask: 0xffff)  */
/* =======================================================  DMABSCLR  ======================================================== */
#define ADI_DMA_DMABSCLR_CHBSWAPCLR_Pos   (0UL)                     /*!< ADI_DMA DMABSCLR: CHBSWAPCLR (Bit 0)                  */
#define ADI_DMA_DMABSCLR_CHBSWAPCLR_Msk   (0xffffUL)                /*!< ADI_DMA DMABSCLR: CHBSWAPCLR (Bitfield-Mask: 0xffff)  */
/* =====================================================  DMASRCADSSET  ====================================================== */
#define ADI_DMA_DMASRCADSSET_CHSRCADRDECSET_Pos (0UL)               /*!< ADI_DMA DMASRCADSSET: CHSRCADRDECSET (Bit 0)          */
#define ADI_DMA_DMASRCADSSET_CHSRCADRDECSET_Msk (0xffffUL)          /*!< ADI_DMA DMASRCADSSET: CHSRCADRDECSET (Bitfield-Mask: 0xffff) */
/* ======================================================  DMASRCADCLR  ====================================================== */
#define ADI_DMA_DMASRCADCLR_CHADRDECCLR_Pos (0UL)                   /*!< ADI_DMA DMASRCADCLR: CHADRDECCLR (Bit 0)              */
#define ADI_DMA_DMASRCADCLR_CHADRDECCLR_Msk (0xffffUL)              /*!< ADI_DMA DMASRCADCLR: CHADRDECCLR (Bitfield-Mask: 0xffff) */
/* ======================================================  DMADSTADSET  ====================================================== */
#define ADI_DMA_DMADSTADSET_CHDSTADRDECSET_Pos (0UL)                /*!< ADI_DMA DMADSTADSET: CHDSTADRDECSET (Bit 0)           */
#define ADI_DMA_DMADSTADSET_CHDSTADRDECSET_Msk (0xffffUL)           /*!< ADI_DMA DMADSTADSET: CHDSTADRDECSET (Bitfield-Mask: 0xffff) */
/* ======================================================  DMADSTADCLR  ====================================================== */
#define ADI_DMA_DMADSTADCLR_CHADRDECCLR_Pos (0UL)                   /*!< ADI_DMA DMADSTADCLR: CHADRDECCLR (Bit 0)              */
#define ADI_DMA_DMADSTADCLR_CHADRDECCLR_Msk (0xffffUL)              /*!< ADI_DMA DMADSTADCLR: CHADRDECCLR (Bitfield-Mask: 0xffff) */
/* =======================================================  DMAREVID  ======================================================== */


/* =========================================================================================================================== */
/* ================                                         ADI_FEE0                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  FEESTA  ========================================================= */
/* ========================================================  FEECON0  ======================================================== */
/* ========================================================  FEECMD  ========================================================= */
/* =======================================================  FEEADR0L  ======================================================== */
/* =======================================================  FEEADR0H  ======================================================== */
/* =======================================================  FEEADR1L  ======================================================== */
/* =======================================================  FEEADR1H  ======================================================== */
/* ========================================================  FEEKEY  ========================================================= */
#define ADI_FEE0_FEEKEY_KEY_Pos           (0UL)                     /*!< ADI_FEE0 FEEKEY: KEY (Bit 0)                          */
#define ADI_FEE0_FEEKEY_KEY_Msk           (0xffffUL)                /*!< ADI_FEE0 FEEKEY: KEY (Bitfield-Mask: 0xffff)          */
/* ========================================================  FEESIGL  ======================================================== */
/* ========================================================  FEESIGH  ======================================================== */
/* =======================================================  FEEADRAL  ======================================================== */
/* =======================================================  FEEADRAH  ======================================================== */
/* =======================================================  FEEPARCTL  ======================================================= */
/* =======================================================  FEEPARSTA  ======================================================= */
/* ======================================================  FEEPARADRL  ======================================================= */
/* ======================================================  FEEPARADRH  ======================================================= */
/* ========================================================  FEEAEN0  ======================================================== */
/* ========================================================  FEEAEN1  ======================================================== */
/* ========================================================  FEEAEN2  ======================================================== */
/* ========================================================  FEEAEN3  ======================================================== */


/* =========================================================================================================================== */
/* ================                                          ADI_GPF                                          ================ */
/* =========================================================================================================================== */

/* =======================================================  GPFEESTA  ======================================================== */
/* =======================================================  GPFEECON0  ======================================================= */
/* =======================================================  GPFEECMD  ======================================================== */
/* ======================================================  GPFEEADR0L  ======================================================= */
/* ======================================================  GPFEEADR1L  ======================================================= */
/* =======================================================  GPFEEKEY  ======================================================== */
/* =======================================================  GPFEESIGL  ======================================================= */
/* =======================================================  GPFEESIGH  ======================================================= */
/* ======================================================  GPFEEADRAL  ======================================================= */
/* ======================================================  GPFEEADRAH  ======================================================= */
/* =======================================================  GPFEEAEN0  ======================================================= */
/* =======================================================  GPFEEAEN1  ======================================================= */
/* =======================================================  GPFEEAEN2  ======================================================= */
/* =======================================================  GPFEEAEN3  ======================================================= */


/* =========================================================================================================================== */
/* ================                                         ADI_GPIO0                                         ================ */
/* =========================================================================================================================== */

/* =========================================================  GPCON  ========================================================= */
/* =========================================================  GPOEN  ========================================================= */
/* =========================================================  GPPE  ========================================================== */
/* =========================================================  GPIEN  ========================================================= */
/* =========================================================  GPIN  ========================================================== */
/* =========================================================  GPOUT  ========================================================= */
/* =========================================================  GPSET  ========================================================= */
/* =========================================================  GPCLR  ========================================================= */
/* =========================================================  GPTGL  ========================================================= */
/* =========================================================  GPPOL  ========================================================= */
/* ========================================================  GPIENA  ========================================================= */
/* ========================================================  GPIENB  ========================================================= */
/* =========================================================  GPINT  ========================================================= */


/* =========================================================================================================================== */
/* ================                                         ADI_GPIO1                                         ================ */
/* =========================================================================================================================== */

/* =========================================================  GPCON  ========================================================= */
/* =========================================================  GPOEN  ========================================================= */
/* =========================================================  GPPE  ========================================================== */
/* =========================================================  GPIEN  ========================================================= */
/* =========================================================  GPIN  ========================================================== */
/* =========================================================  GPOUT  ========================================================= */
/* =========================================================  GPSET  ========================================================= */
/* =========================================================  GPCLR  ========================================================= */
/* =========================================================  GPTGL  ========================================================= */
/* =========================================================  GPPOL  ========================================================= */
/* ========================================================  GPIENA  ========================================================= */
/* ========================================================  GPIENB  ========================================================= */
/* =========================================================  GPINT  ========================================================= */


/* =========================================================================================================================== */
/* ================                                         ADI_GPIO2                                         ================ */
/* =========================================================================================================================== */

/* =========================================================  GPCON  ========================================================= */
/* =========================================================  GPOEN  ========================================================= */
/* =========================================================  GPPE  ========================================================== */
/* =========================================================  GPIEN  ========================================================= */
/* =========================================================  GPIN  ========================================================== */
/* =========================================================  GPOUT  ========================================================= */
/* =========================================================  GPSET  ========================================================= */
/* =========================================================  GPCLR  ========================================================= */
/* =========================================================  GPTGL  ========================================================= */
/* =========================================================  GPPOL  ========================================================= */
/* ========================================================  GPIENA  ========================================================= */
/* ========================================================  GPIENB  ========================================================= */
/* =========================================================  GPINT  ========================================================= */


/* =========================================================================================================================== */
/* ================                                         ADI_GPIO3                                         ================ */
/* =========================================================================================================================== */

/* =========================================================  GPCON  ========================================================= */
/* =========================================================  GPOEN  ========================================================= */
/* =========================================================  GPPE  ========================================================== */
/* =========================================================  GPIEN  ========================================================= */
/* =========================================================  GPIN  ========================================================== */
/* =========================================================  GPOUT  ========================================================= */
/* =========================================================  GPSET  ========================================================= */
/* =========================================================  GPCLR  ========================================================= */
/* =========================================================  GPTGL  ========================================================= */
/* =========================================================  GPPOL  ========================================================= */
/* ========================================================  GPIENA  ========================================================= */
/* ========================================================  GPIENB  ========================================================= */
/* =========================================================  GPINT  ========================================================= */


/* =========================================================================================================================== */
/* ================                                         ADI_GPIO4                                         ================ */
/* =========================================================================================================================== */

/* =========================================================  GPCON  ========================================================= */
/* =========================================================  GPOEN  ========================================================= */
/* =========================================================  GPPE  ========================================================== */
/* =========================================================  GPIEN  ========================================================= */
/* =========================================================  GPIN  ========================================================== */
/* =========================================================  GPOUT  ========================================================= */
/* =========================================================  GPSET  ========================================================= */
/* =========================================================  GPCLR  ========================================================= */
/* =========================================================  GPTGL  ========================================================= */
/* =========================================================  GPPOL  ========================================================= */
/* ========================================================  GPIENA  ========================================================= */
/* ========================================================  GPIENB  ========================================================= */
/* =========================================================  GPINT  ========================================================= */


/* =========================================================================================================================== */
/* ================                                         ADI_SPIH                                          ================ */
/* =========================================================================================================================== */

/* ========================================================  SPISTA  ========================================================= */
#define ADI_SPIH_SPISTA_CSRSG_Pos         (14UL)                    /*!< ADI_SPIH SPISTA: CSRSG (Bit 14)                       */
#define ADI_SPIH_SPISTA_CSRSG_Msk         (0x4000UL)                /*!< ADI_SPIH SPISTA: CSRSG (Bitfield-Mask: 0x01)          */
#define ADI_SPIH_SPISTA_CSFLG_Pos         (13UL)                    /*!< ADI_SPIH SPISTA: CSFLG (Bit 13)                       */
#define ADI_SPIH_SPISTA_CSFLG_Msk         (0x2000UL)                /*!< ADI_SPIH SPISTA: CSFLG (Bitfield-Mask: 0x01)          */
#define ADI_SPIH_SPISTA_CSERR_Pos         (12UL)                    /*!< ADI_SPIH SPISTA: CSERR (Bit 12)                       */
#define ADI_SPIH_SPISTA_CSERR_Msk         (0x1000UL)                /*!< ADI_SPIH SPISTA: CSERR (Bitfield-Mask: 0x01)          */
#define ADI_SPIH_SPISTA_RXS_Pos           (11UL)                    /*!< ADI_SPIH SPISTA: RXS (Bit 11)                         */
#define ADI_SPIH_SPISTA_RXS_Msk           (0x800UL)                 /*!< ADI_SPIH SPISTA: RXS (Bitfield-Mask: 0x01)            */
#define ADI_SPIH_SPISTA_RXFSTA_Pos        (8UL)                     /*!< ADI_SPIH SPISTA: RXFSTA (Bit 8)                       */
#define ADI_SPIH_SPISTA_RXFSTA_Msk        (0x700UL)                 /*!< ADI_SPIH SPISTA: RXFSTA (Bitfield-Mask: 0x07)         */
#define ADI_SPIH_SPISTA_RXOF_Pos          (7UL)                     /*!< ADI_SPIH SPISTA: RXOF (Bit 7)                         */
#define ADI_SPIH_SPISTA_RXOF_Msk          (0x80UL)                  /*!< ADI_SPIH SPISTA: RXOF (Bitfield-Mask: 0x01)           */
#define ADI_SPIH_SPISTA_RX_Pos            (6UL)                     /*!< ADI_SPIH SPISTA: RX (Bit 6)                           */
#define ADI_SPIH_SPISTA_RX_Msk            (0x40UL)                  /*!< ADI_SPIH SPISTA: RX (Bitfield-Mask: 0x01)             */
#define ADI_SPIH_SPISTA_TX_Pos            (5UL)                     /*!< ADI_SPIH SPISTA: TX (Bit 5)                           */
#define ADI_SPIH_SPISTA_TX_Msk            (0x20UL)                  /*!< ADI_SPIH SPISTA: TX (Bitfield-Mask: 0x01)             */
#define ADI_SPIH_SPISTA_TXUR_Pos          (4UL)                     /*!< ADI_SPIH SPISTA: TXUR (Bit 4)                         */
#define ADI_SPIH_SPISTA_TXUR_Msk          (0x10UL)                  /*!< ADI_SPIH SPISTA: TXUR (Bitfield-Mask: 0x01)           */
#define ADI_SPIH_SPISTA_TXFSTA_Pos        (1UL)                     /*!< ADI_SPIH SPISTA: TXFSTA (Bit 1)                       */
#define ADI_SPIH_SPISTA_TXFSTA_Msk        (0xeUL)                   /*!< ADI_SPIH SPISTA: TXFSTA (Bitfield-Mask: 0x07)         */
#define ADI_SPIH_SPISTA_IRQ_Pos           (0UL)                     /*!< ADI_SPIH SPISTA: IRQ (Bit 0)                          */
#define ADI_SPIH_SPISTA_IRQ_Msk           (0x1UL)                   /*!< ADI_SPIH SPISTA: IRQ (Bitfield-Mask: 0x01)            */
/* =========================================================  SPIRX  ========================================================= */
#define ADI_SPIH_SPIRX_DMA_Pos            (8UL)                     /*!< ADI_SPIH SPIRX: DMA (Bit 8)                           */
#define ADI_SPIH_SPIRX_DMA_Msk            (0xff00UL)                /*!< ADI_SPIH SPIRX: DMA (Bitfield-Mask: 0xff)             */
#define ADI_SPIH_SPIRX_DATA_Pos           (0UL)                     /*!< ADI_SPIH SPIRX: DATA (Bit 0)                          */
#define ADI_SPIH_SPIRX_DATA_Msk           (0xffUL)                  /*!< ADI_SPIH SPIRX: DATA (Bitfield-Mask: 0xff)            */
/* =========================================================  SPITX  ========================================================= */
#define ADI_SPIH_SPITX_DMA_Pos            (8UL)                     /*!< ADI_SPIH SPITX: DMA (Bit 8)                           */
#define ADI_SPIH_SPITX_DMA_Msk            (0xff00UL)                /*!< ADI_SPIH SPITX: DMA (Bitfield-Mask: 0xff)             */
#define ADI_SPIH_SPITX_DATA_Pos           (0UL)                     /*!< ADI_SPIH SPITX: DATA (Bit 0)                          */
#define ADI_SPIH_SPITX_DATA_Msk           (0xffUL)                  /*!< ADI_SPIH SPITX: DATA (Bitfield-Mask: 0xff)            */
/* ========================================================  SPIDIV  ========================================================= */
#define ADI_SPIH_SPIDIV_CSIRQ_Pos         (8UL)                     /*!< ADI_SPIH SPIDIV: CSIRQ (Bit 8)                        */
#define ADI_SPIH_SPIDIV_CSIRQ_Msk         (0x100UL)                 /*!< ADI_SPIH SPIDIV: CSIRQ (Bitfield-Mask: 0x01)          */
#define ADI_SPIH_SPIDIV_MD_Pos            (7UL)                     /*!< ADI_SPIH SPIDIV: MD (Bit 7)                           */
#define ADI_SPIH_SPIDIV_MD_Msk            (0x80UL)                  /*!< ADI_SPIH SPIDIV: MD (Bitfield-Mask: 0x01)             */
#define ADI_SPIH_SPIDIV_HFM_Pos           (6UL)                     /*!< ADI_SPIH SPIDIV: HFM (Bit 6)                          */
#define ADI_SPIH_SPIDIV_HFM_Msk           (0x40UL)                  /*!< ADI_SPIH SPIDIV: HFM (Bitfield-Mask: 0x01)            */
#define ADI_SPIH_SPIDIV_DIV_Pos           (0UL)                     /*!< ADI_SPIH SPIDIV: DIV (Bit 0)                          */
#define ADI_SPIH_SPIDIV_DIV_Msk           (0x3fUL)                  /*!< ADI_SPIH SPIDIV: DIV (Bitfield-Mask: 0x3f)            */
/* ========================================================  SPICON  ========================================================= */
#define ADI_SPIH_SPICON_MOD_Pos           (14UL)                    /*!< ADI_SPIH SPICON: MOD (Bit 14)                         */
#define ADI_SPIH_SPICON_MOD_Msk           (0xc000UL)                /*!< ADI_SPIH SPICON: MOD (Bitfield-Mask: 0x03)            */
#define ADI_SPIH_SPICON_TFLUSH_Pos        (13UL)                    /*!< ADI_SPIH SPICON: TFLUSH (Bit 13)                      */
#define ADI_SPIH_SPICON_TFLUSH_Msk        (0x2000UL)                /*!< ADI_SPIH SPICON: TFLUSH (Bitfield-Mask: 0x01)         */
#define ADI_SPIH_SPICON_RFLUSH_Pos        (12UL)                    /*!< ADI_SPIH SPICON: RFLUSH (Bit 12)                      */
#define ADI_SPIH_SPICON_RFLUSH_Msk        (0x1000UL)                /*!< ADI_SPIH SPICON: RFLUSH (Bitfield-Mask: 0x01)         */
#define ADI_SPIH_SPICON_CON_Pos           (11UL)                    /*!< ADI_SPIH SPICON: CON (Bit 11)                         */
#define ADI_SPIH_SPICON_CON_Msk           (0x800UL)                 /*!< ADI_SPIH SPICON: CON (Bitfield-Mask: 0x01)            */
#define ADI_SPIH_SPICON_LOOPBACK_Pos      (10UL)                    /*!< ADI_SPIH SPICON: LOOPBACK (Bit 10)                    */
#define ADI_SPIH_SPICON_LOOPBACK_Msk      (0x400UL)                 /*!< ADI_SPIH SPICON: LOOPBACK (Bitfield-Mask: 0x01)       */
#define ADI_SPIH_SPICON_OEN_Pos           (9UL)                     /*!< ADI_SPIH SPICON: OEN (Bit 9)                          */
#define ADI_SPIH_SPICON_OEN_Msk           (0x200UL)                 /*!< ADI_SPIH SPICON: OEN (Bitfield-Mask: 0x01)            */
#define ADI_SPIH_SPICON_RXOF_Pos          (8UL)                     /*!< ADI_SPIH SPICON: RXOF (Bit 8)                         */
#define ADI_SPIH_SPICON_RXOF_Msk          (0x100UL)                 /*!< ADI_SPIH SPICON: RXOF (Bitfield-Mask: 0x01)           */
#define ADI_SPIH_SPICON_ZEN_Pos           (7UL)                     /*!< ADI_SPIH SPICON: ZEN (Bit 7)                          */
#define ADI_SPIH_SPICON_ZEN_Msk           (0x80UL)                  /*!< ADI_SPIH SPICON: ZEN (Bitfield-Mask: 0x01)            */
#define ADI_SPIH_SPICON_TIM_Pos           (6UL)                     /*!< ADI_SPIH SPICON: TIM (Bit 6)                          */
#define ADI_SPIH_SPICON_TIM_Msk           (0x40UL)                  /*!< ADI_SPIH SPICON: TIM (Bitfield-Mask: 0x01)            */
#define ADI_SPIH_SPICON_LSB_Pos           (5UL)                     /*!< ADI_SPIH SPICON: LSB (Bit 5)                          */
#define ADI_SPIH_SPICON_LSB_Msk           (0x20UL)                  /*!< ADI_SPIH SPICON: LSB (Bitfield-Mask: 0x01)            */
#define ADI_SPIH_SPICON_WOM_Pos           (4UL)                     /*!< ADI_SPIH SPICON: WOM (Bit 4)                          */
#define ADI_SPIH_SPICON_WOM_Msk           (0x10UL)                  /*!< ADI_SPIH SPICON: WOM (Bitfield-Mask: 0x01)            */
#define ADI_SPIH_SPICON_CPOL_Pos          (3UL)                     /*!< ADI_SPIH SPICON: CPOL (Bit 3)                         */
#define ADI_SPIH_SPICON_CPOL_Msk          (0x8UL)                   /*!< ADI_SPIH SPICON: CPOL (Bitfield-Mask: 0x01)           */
#define ADI_SPIH_SPICON_CPHA_Pos          (2UL)                     /*!< ADI_SPIH SPICON: CPHA (Bit 2)                         */
#define ADI_SPIH_SPICON_CPHA_Msk          (0x4UL)                   /*!< ADI_SPIH SPICON: CPHA (Bitfield-Mask: 0x01)           */
#define ADI_SPIH_SPICON_MASEN_Pos         (1UL)                     /*!< ADI_SPIH SPICON: MASEN (Bit 1)                        */
#define ADI_SPIH_SPICON_MASEN_Msk         (0x2UL)                   /*!< ADI_SPIH SPICON: MASEN (Bitfield-Mask: 0x01)          */
#define ADI_SPIH_SPICON_ENABLE_Pos        (0UL)                     /*!< ADI_SPIH SPICON: ENABLE (Bit 0)                       */
#define ADI_SPIH_SPICON_ENABLE_Msk        (0x1UL)                   /*!< ADI_SPIH SPICON: ENABLE (Bitfield-Mask: 0x01)         */
/* ========================================================  SPIDMA  ========================================================= */
#define ADI_SPIH_SPIDMA_IENRXDMA_Pos      (2UL)                     /*!< ADI_SPIH SPIDMA: IENRXDMA (Bit 2)                     */
#define ADI_SPIH_SPIDMA_IENRXDMA_Msk      (0x4UL)                   /*!< ADI_SPIH SPIDMA: IENRXDMA (Bitfield-Mask: 0x01)       */
#define ADI_SPIH_SPIDMA_IENTXDMA_Pos      (1UL)                     /*!< ADI_SPIH SPIDMA: IENTXDMA (Bit 1)                     */
#define ADI_SPIH_SPIDMA_IENTXDMA_Msk      (0x2UL)                   /*!< ADI_SPIH SPIDMA: IENTXDMA (Bitfield-Mask: 0x01)       */
#define ADI_SPIH_SPIDMA_ENABLE_Pos        (0UL)                     /*!< ADI_SPIH SPIDMA: ENABLE (Bit 0)                       */
#define ADI_SPIH_SPIDMA_ENABLE_Msk        (0x1UL)                   /*!< ADI_SPIH SPIDMA: ENABLE (Bitfield-Mask: 0x01)         */
/* ========================================================  SPICNT  ========================================================= */
#define ADI_SPIH_SPICNT_COUNT_Pos         (0UL)                     /*!< ADI_SPIH SPICNT: COUNT (Bit 0)                        */
#define ADI_SPIH_SPICNT_COUNT_Msk         (0xffUL)                  /*!< ADI_SPIH SPICNT: COUNT (Bitfield-Mask: 0xff)          */


/* =========================================================================================================================== */
/* ================                                        ADI_SYSCLK                                         ================ */
/* =========================================================================================================================== */

/* ========================================================  CLKCON0  ======================================================== */
#define ADI_SYSCLK_CLKCON0_HFXTALIE_Pos   (15UL)                    /*!< ADI_SYSCLK CLKCON0: HFXTALIE (Bit 15)                 */
#define ADI_SYSCLK_CLKCON0_HFXTALIE_Msk   (0x8000UL)                /*!< ADI_SYSCLK CLKCON0: HFXTALIE (Bitfield-Mask: 0x01)    */
#define ADI_SYSCLK_CLKCON0_LFXTALIE_Pos   (14UL)                    /*!< ADI_SYSCLK CLKCON0: LFXTALIE (Bit 14)                 */
#define ADI_SYSCLK_CLKCON0_LFXTALIE_Msk   (0x4000UL)                /*!< ADI_SYSCLK CLKCON0: LFXTALIE (Bitfield-Mask: 0x01)    */
#define ADI_SYSCLK_CLKCON0_PLLMUX_Pos     (11UL)                    /*!< ADI_SYSCLK CLKCON0: PLLMUX (Bit 11)                   */
#define ADI_SYSCLK_CLKCON0_PLLMUX_Msk     (0x800UL)                 /*!< ADI_SYSCLK CLKCON0: PLLMUX (Bitfield-Mask: 0x01)      */
#define ADI_SYSCLK_CLKCON0_LFCLKMUX_Pos   (8UL)                     /*!< ADI_SYSCLK CLKCON0: LFCLKMUX (Bit 8)                  */
#define ADI_SYSCLK_CLKCON0_LFCLKMUX_Msk   (0x100UL)                 /*!< ADI_SYSCLK CLKCON0: LFCLKMUX (Bitfield-Mask: 0x01)    */
#define ADI_SYSCLK_CLKCON0_CLKCOUT_Pos    (4UL)                     /*!< ADI_SYSCLK CLKCON0: CLKCOUT (Bit 4)                   */
#define ADI_SYSCLK_CLKCON0_CLKCOUT_Msk    (0xf0UL)                  /*!< ADI_SYSCLK CLKCON0: CLKCOUT (Bitfield-Mask: 0x0f)     */
#define ADI_SYSCLK_CLKCON0_CLKMUX_Pos     (0UL)                     /*!< ADI_SYSCLK CLKCON0: CLKMUX (Bit 0)                    */
#define ADI_SYSCLK_CLKCON0_CLKMUX_Msk     (0x3UL)                   /*!< ADI_SYSCLK CLKCON0: CLKMUX (Bitfield-Mask: 0x03)      */
/* ========================================================  CLKCON1  ======================================================== */
/* ========================================================  CLKCON2  ======================================================== */
/* ========================================================  CLKCON3  ======================================================== */
/* ========================================================  CLKCON4  ======================================================== */
/* ========================================================  CLKCON5  ======================================================== */
/* =======================================================  CLKSTAT0  ======================================================== */


/* =========================================================================================================================== */
/* ================                                          ADI_CRC                                          ================ */
/* =========================================================================================================================== */

/* ==========================================================  CTL  ========================================================== */
/* ========================================================  IPDATA  ========================================================= */
/* ========================================================  RESULT  ========================================================= */


/* =========================================================================================================================== */
/* ================                                          ADI_PDI                                          ================ */
/* =========================================================================================================================== */

/* ==========================================================  CFG  ========================================================== */
/* ========================================================  INT_SET  ======================================================== */
/* ========================================================  INT_CLR  ======================================================== */
/* =========================================================  STAT  ========================================================== */
/* ==========================================================  CMD  ========================================================== */
/* =======================================================  FRDATA_N  ======================================================== */
/* =========================================================  FIFO  ========================================================== */
/* =======================================================  IF_TIMING  ======================================================= */


/* =========================================================================================================================== */
/* ================                                          ADI_AFE                                          ================ */
/* =========================================================================================================================== */

/* ==========================================================  CFG  ========================================================== */
#define ADI_AFE_CFG_ALDOILIMIT_EN_Pos     (19UL)                    /*!< ADI_AFE CFG: ALDOILIMIT_EN (Bit 19)                   */
#define ADI_AFE_CFG_ALDOILIMIT_EN_Msk     (0x80000UL)               /*!< ADI_AFE CFG: ALDOILIMIT_EN (Bitfield-Mask: 0x01)      */
/* ========================================================  SEQ_CFG  ======================================================== */
/* =======================================================  FIFO_CFG  ======================================================== */
/* ========================================================  SW_CFG  ========================================================= */
/* ========================================================  DAC_CFG  ======================================================== */
/* ========================================================  WG_CFG  ========================================================= */
/* =====================================================  WG_DCLEVEL_1  ====================================================== */
/* =====================================================  WG_DCLEVEL_2  ====================================================== */
/* ======================================================  WG_DELAY_1  ======================================================= */
/* ======================================================  WG_SLOPE_1  ======================================================= */
/* ======================================================  WG_DELAY_2  ======================================================= */
/* ======================================================  WG_SLOPE_2  ======================================================= */
/* ========================================================  WG_FCW  ========================================================= */
/* =======================================================  WG_PHASE  ======================================================== */
/* =======================================================  WG_OFFSET  ======================================================= */
/* =====================================================  WG_AMPLITUDE  ====================================================== */
/* ========================================================  ADC_CFG  ======================================================== */
/* ====================================================  SUPPLY_LPF_CFG  ===================================================== */
/* ====================================================  SW_FULL_CFG_MSB  ==================================================== */
/* ====================================================  SW_FULL_CFG_LSB  ==================================================== */
/* ======================================================  WG_DAC_CODE  ====================================================== */
/* ========================================================  STATUS  ========================================================= */
/* ========================================================  SEQ_CRC  ======================================================== */
/* =======================================================  SEQ_COUNT  ======================================================= */
/* ======================================================  SEQ_TIMEOUT  ====================================================== */
/* ====================================================  DATA_FIFO_READ  ===================================================== */
/* ====================================================  CMD_FIFO_WRITE  ===================================================== */
/* ======================================================  ADC_RESULT  ======================================================= */
/* ====================================================  DFT_RESULT_REAL  ==================================================== */
/* ====================================================  DFT_RESULT_IMAG  ==================================================== */
/* ===================================================  SUPPLY_LPF_RESULT  =================================================== */
/* ==================================================  TEMP_SENSOR_RESULT  =================================================== */
/* ==================================================  ANALOG_CAPTURE_IEN  =================================================== */
/* ====================================================  ANALOG_GEN_IEN  ===================================================== */
/* =====================================================  CMD_FIFO_IEN  ====================================================== */
/* =====================================================  DATA_FIFO_IEN  ===================================================== */
/* ==================================================  ANALOG_CAPTURE_INT  =================================================== */
/* ====================================================  ANALOG_GEN_INT  ===================================================== */
/* =====================================================  CMD_FIFO_INT  ====================================================== */
/* =====================================================  DATA_FIFO_INT  ===================================================== */
/* =====================================================  SW_STATUS_MSB  ===================================================== */
/* =====================================================  SW_STATUS_LSB  ===================================================== */
/* ========================================================  ADCMIN  ========================================================= */
/* ========================================================  ADCMAX  ========================================================= */
/* =======================================================  ADCDELTA  ======================================================== */
/* =====================================================  CAL_DATA_LOCK  ===================================================== */
/* =====================================================  ADC_GAIN_TIA  ====================================================== */
/* ====================================================  ADC_OFFSET_TIA  ===================================================== */
/* ==================================================  ADC_GAIN_TEMP_SENS  =================================================== */
/* =================================================  ADC_OFFSET_TEMP_SENS  ================================================== */
/* =====================================================  ADC_GAIN_AUX  ====================================================== */
/* ====================================================  ADC_OFFSET_AUX  ===================================================== */
/* ===================================================  DAC_OFFSET_UNITY  ==================================================== */
/* ===================================================  DAC_OFFSET_ATTEN  ==================================================== */
/* =======================================================  DAC_GAIN  ======================================================== */
/* =======================================================  REF_TRIM0  ======================================================= */
/* =======================================================  REF_TRIM1  ======================================================= */
/* =======================================================  ALDO_TRIM  ======================================================= */
/* =======================================================  DAC_TRIM  ======================================================== */
/* ======================================================  INAMP_TRIM  ======================================================= */
/* ======================================================  EXBUF_TRIM  ======================================================= */
/* ====================================================  TEMP_SENS_TRIM  ===================================================== */


/* =========================================================================================================================== */
/* ================                                          ADI_CT                                           ================ */
/* =========================================================================================================================== */

/* ========================================================  CDC_PWR  ======================================================== */
/* =========================================================  CFG1  ========================================================== */
/* =========================================================  CFG2  ========================================================== */
/* =========================================================  CFG3  ========================================================== */


/* =========================================================================================================================== */
/* ================                                          ADI_USB                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  FADDR  ========================================================= */
/* =========================================================  POWER  ========================================================= */
/* ========================================================  INTRTX  ========================================================= */
/* ========================================================  INTRRX  ========================================================= */
/* ========================================================  INTRTXE  ======================================================== */
/* ========================================================  INTRRXE  ======================================================== */
/* ==========================================================  IRQ  ========================================================== */
/* ==========================================================  IEN  ========================================================== */
/* =========================================================  FRAME  ========================================================= */
/* =========================================================  INDEX  ========================================================= */
/* =======================================================  TESTMODE  ======================================================== */
/* ======================================================  EPI_TXMAXP0  ====================================================== */
/* =====================================================  EPI_TXCSR_P0  ====================================================== */
/* ======================================================  EPI_RXMAXP0  ====================================================== */
/* =======================================================  EP0I_CNT0  ======================================================= */
/* =====================================================  EP0I_CFGDATA0  ===================================================== */
/* =========================================================  FIFO0  ========================================================= */
/* =========================================================  FIFO1  ========================================================= */
/* =========================================================  FIFO2  ========================================================= */
/* =========================================================  FIFO3  ========================================================= */
/* ========================================================  DEV_CTL  ======================================================== */
/* =========================================================  MISC  ========================================================== */
/* ========================================================  EPINFO  ========================================================= */
/* ========================================================  RAMINFO  ======================================================== */
/* =======================================================  LINKINFO  ======================================================== */
/* ========================================================  FS_EOF1  ======================================================== */
/* =======================================================  SOFT_RST  ======================================================== */
/* ======================================================  EP0_TXMAXP  ======================================================= */
/* ======================================================  EP1_TXMAXP  ======================================================= */
/* ======================================================  EP2_TXMAXP  ======================================================= */
/* ======================================================  EP3_TXMAXP  ======================================================= */
/* ======================================================  EP0_TXCSR_P  ====================================================== */
/* ======================================================  EP1_TXCSR_P  ====================================================== */
/* ======================================================  EP2_TXCSR_P  ====================================================== */
/* ======================================================  EP3_TXCSR_P  ====================================================== */
/* ======================================================  EP0_RXMAXP  ======================================================= */
/* ======================================================  EP1_RXMAXP  ======================================================= */
/* ======================================================  EP2_RXMAXP  ======================================================= */
/* ======================================================  EP3_RXMAXP  ======================================================= */
/* ======================================================  EP0_RXCSR_P  ====================================================== */
/* ======================================================  EP1_RXCSR_P  ====================================================== */
/* ======================================================  EP2_RXCSR_P  ====================================================== */
/* ======================================================  EP3_RXCSR_P  ====================================================== */
/* =======================================================  EP0_CNT0  ======================================================== */
/* =======================================================  EP1_RXCNT  ======================================================= */
/* =======================================================  EP2_RXCNT  ======================================================= */
/* =======================================================  EP3_RXCNT  ======================================================= */
/* ========================================================  DMA_IRQ  ======================================================== */
/* =======================================================  DMA0_CTL  ======================================================== */
/* =======================================================  DMA1_CTL  ======================================================== */
/* =======================================================  DMA0_ADDR  ======================================================= */
/* =======================================================  DMA1_ADDR  ======================================================= */
/* =======================================================  DMA0_CNT  ======================================================== */
/* =======================================================  DMA1_CNT  ======================================================== */
/* =====================================================  RXDPKTBUFDIS  ====================================================== */
/* =====================================================  TXDPKTBUFDIS  ====================================================== */
/* ========================================================  CT_UCH  ========================================================= */
/* =======================================================  LPM_ATTR  ======================================================== */
/* ========================================================  LPM_CTL  ======================================================== */
/* ========================================================  LPM_IEN  ======================================================== */
/* ========================================================  LPM_IRQ  ======================================================== */
/* ========================================================  PHY_CTL  ======================================================== */
/* =======================================================  PHY_STAT  ======================================================== */
/* =======================================================  RAM_ADDR  ======================================================== */
/* =======================================================  RAM_DATA  ======================================================== */

/** @} */ /* End of group PosMask_peripherals */


#ifdef __cplusplus
}
#endif

#endif /* ADUCM350_H */


/** @} */ /* End of group ADuCM350 */

/** @} */ /* End of group Analog Devices */
